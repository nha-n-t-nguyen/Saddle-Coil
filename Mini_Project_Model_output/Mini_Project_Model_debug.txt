
================================================================
===  FlexPDE Version 7.21/OSXm  12:20:20 Dec  9 2022  Copyright (c) 1996-2020 PDE Solutions Inc.
===  /Users/nhanguyen/Downloads/MiniProject/Mini_Project_Model.pde 00:58:37 6/18/23
================================================================
    1| { Fill in the following sections (removing comment marks ! if necessary),
    2|   and delete those that are unused.}
    3| TITLE 'Part A Mid-Term Mini-Project'     { the problem identification }
    4| COORDINATES cartesian2  { coordinate system, 1D,2D,3D, etc }
    5| VARIABLES        { system variables }
    6|   A              { choose your own names }
    7| Global Variables
    8| Jcoil
    9| SELECT         { method controls }
   10| Threads = 4
   11| Initial Values
   12| Jcoil = 1e7
   13| DEFINITIONS    { parameter definitions }
   14| #include"input.pde"
    2| Alpha3=0.191888888889
    3| Alpha2=0.191888888889
    4| Alpha6=0.418666666667
   15| 
   16| B = curl(A)
   17| Bm = magnitude(B)
   18| Mu0 = 4*pi*1e-7
   19| Muiron = 1 + 1507 * exp(-(abs(Bm / 1.443) ^ 3.725))
   20| Jc = table('Bmax.tbl')
   21| J = 0
   22| 
   23| !Creating a degree 
   24| Converttorad = 2 * pi / 360
   25| 
   26| mu=mu0
   27| !Radii in meters
   28| Rii = .025
   29| Rio = .0425
   30| Roo = .0602
   31| Rair = 4 * Roo
   32| Rbeam = .018
   33| 
   34| !Angles in radians
   35| A1 = 15 * Converttorad
   36| A2 = 15 * Converttorad
   37| A3 = 10 * Converttorad
   38| A4 = 5 * Converttorad
   39| A5 = 20 * Converttorad
   40| A6 = 25 * Converttorad
   41| !Alpha2 = 5 * Converttorad
   42| !Alpha3 = 5 * Converttorad
   43| !Alpha4 = 5 * Converttorad
   44| !Alpha6 = 5 * Converttorad
   45| 
   46| !Lorentz Forces in coils
   47| L = 10 !coil length in meters
   48| Area = 950e-6 !m^2 of coils
   49| Jvec = vector(0,0,J)
   50| F=Area*L*cross(Jvec,B)
   51| 
   52| !B field calculations
   53| B1 = 0
   54| B2 = 100
   55| Bmax = globalmax(B1)
   56| Bmin = globalmin(B2)
   57| dB = (Bmax - Bmin) / Bmax
   58| 
   59| Of = .7
   60| Ff = .6
   61| Objective=(Jc*of*ff-Jcoil)/Jcoil
   62| 
   63| !Determining alignment with respect to x (ideal is when B_x = 0 everywhere)
   64| B_x= abs(xcomp(Bm))
   65| Alignment=globalmax(B_x)
   66| 
   67| ! INITIAL VALUES
   68| EQUATIONS        { PDE's, one for each variable }
   69| A: curl(1/mu*curl(A))=J
   70| Jcoil: Objective=0
   71| 
   72| 
   73| ! CONSTRAINTS    { Integral constraints }
   74| BOUNDARIES       { The domain definition }
   75| REGION 1 "air"
   76| START(0,0) value(A) = 0  { Walk the domain boundary }
   77| LINE TO (0,Rair) value(A) = 0
   78| ARC(CENTER = 0,0) Angle = -90 natural(A) = 0
   79| line to close
   80| 
   81| Region 2 "Backiron"
   82| Mu = mu0*Muiron
   83| Start(1.5 * Roo,0)
   84| Line to (3 * Roo, 0)
   85| Arc(center = 0,0) to (0, 3 * Roo)
   86| Line to (0, 1.5 * Roo)
   87| Arc(center = 0,0) to close
   88| 
   89| Region 3 "Saddle Coils"
   90| J = Jcoil
   91| !Coil 1:
   92| Start(Rii,0) Line to (Rio,0)
   93| Arc(Center = 0,0) to (Rio * cos(A1),Rio * sin(A1))
   94| Line to (Rii * cos(A1),Rii * sin(A1))
   95| Arc(Center = 0,0) To Close
   96| 
   97| !Coil 2:
   98| Start(Rii * cos(A1 + Alpha2),Rii * sin(A1 + Alpha2))
   99| Line to (Rio * cos(A1 + Alpha2), Rio * sin(A1 + Alpha2))
  100| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2), Rio * sin(A1 + A2 + Alpha2))
  101| Line to (Rii * cos(A1 + A2 + Alpha2), Rii * sin(A1 + A2 + Alpha2))
  102| Arc(Center = 0,0) to close
  103| 
  104| !Coil3:
  105| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3),Rii * sin(A1 + Alpha2 + A2 + Alpha3))
  106| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3), Rio * sin(A1 + Alpha2 + A2 + Alpha3))
  107| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  108| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  109| Arc(Center = 0,0) to close
  110| 
  111| !Coil4:
  112| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4),Rii * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  113| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4), Rio * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  114| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  115| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  116| Arc(Center = 0,0) to close
  117| 
  118| {
  119| !Coil5:
  120| Start(Rio,0)
  121| Line to (Roo,0)
  122| Arc(Center = 0,0) To (Roo * cos(A5), Roo * sin(A5))
  123| Line to (Rio * cos(A5), Rio * sin(A5))
  124| Arc(Center = 0,0) to close
  125| 
  126| !Coil6:
  127| Start(Rio * cos(A5 + Alpha6), Rio * sin(A5 + Alpha6))
  128| Line to (Roo * cos(A5 + Alpha6), Roo * sin(A5 + Alpha6))
  129| Arc(Center = 0,0) to (Roo * cos(A5 + Alpha6 + A6), Roo * sin(A5 + Alpha6 + A6))
  130| Line to (Rio * cos(A5 + Alpha6 + A6), Rio * sin(A5 + Alpha6 + A6))
  131| Arc(Center = 0,0) to close
  132| }
  133| Region 4 "Beam Area"
  134| B1 = Bm
  135| B2 = Bm
  136| Start(0,0)
  137| Line to (0,Rbeam)
  138| Arc(Center = 0,0) Angle = -90
  139| line to close
  140| 
  141| ! TIME 0 TO 1    { if time dependent }
  142| MONITORS         { show progress }
  143| PLOTS            { save result displays }
  144| CONTOUR(A)
  145| Contour(Bm) on "Beam Area" painted
  146| Vector(B)
  147| Contour(Mu) painted
  148| Vector(F) on "Saddle Coils"
  149| 
  150| Summary
  151| export file = "Output.txt"
  152| Report(Bmax) !as "Bmax in beam area"
  153| Report(Bmin) !as "Bmin in beam area"
  154| Report(dB) !as "dB in beam area"
  155| !Report(B_x)
  156| Report(Alignment) 
  157| 
  158| !Report(globalmin(Mu0)) as "Mu0 min"
  159| !Report(globalmax(Mu0)) as "Mu0 max"
  160| !Report(globalmax_X(Mu0))
  161| !Report(globalmax_Y(Mu0))
  162| END
Uorder=3
 A order=3
STUDENT VERSION SETS GROW2=0.35 GRIDARC=30
IMPORTMESH(0) NDIM=2 NB=10 NAB=3 NODES=160 CELLS=274 SIDES=433 LEGS=0 imaging=0 time(0)=0
MESH IMPORT ABORTED: Different GRID2D
Transferred mesh does not match local domain!
(Boundary descriptions must match exactly.)

==========================
 SUMMARIZE PARAMETERS
==========================
 Param         name     Type       Domain               Definition
-------------------------------------------------------------------
     1       ALPHA4   Scalar      (GLOBAL)               :  0.34889
                                             [1]=>  0.34889
     2       ALPHA3   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     3       ALPHA2   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     4       ALPHA6   Scalar      (GLOBAL)               :  0.41867
                                             [1]=>  0.41867
     5            B   Vector      (GLOBAL)               : Vector(DY(A),-(DX(A)),0)
                                             [5]=> Vector(A.Y,-(A.X),0)
     6           BM   Scalar      (GLOBAL)               : Sqrt(Sqr(DY(A))+Sqr(DX(A)))
                                             [6]=> Sqrt(Sqr(A.Y)+Sqr(A.X))
     7          MU0   Scalar      (GLOBAL)               :  1.26e-6
                                             [1]=>  1.26e-6
     8       MUIRON   Scalar      (GLOBAL)               : 1+(1507*Exp(-(Abs(BM* 0.69300)^ 3.72500)))
                                             [17]=> 1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))
     9           JC   Scalar      (GLOBAL)               : Table#1
                                             [1]=> Table#1
    10            J   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   3)           : JCOIL
    11 CONVERTTORAD   Scalar      (GLOBAL)               :  0.01745
                                             [1]=>  0.01745
    12           MU   Scalar      (GLOBAL)               : MU0
                                             [1]=>  1.26e-6
                                  (REGION   2)           : MU0*MUIRON
    13          RII   Scalar      (GLOBAL)               :  0.02500
                                             [1]=>  0.02500
    14          RIO   Scalar      (GLOBAL)               :  0.04250
                                             [1]=>  0.04250
    15          ROO   Scalar      (GLOBAL)               :  0.06020
                                             [1]=>  0.06020
    16         RAIR   Scalar      (GLOBAL)               : 4*ROO
                                             [1]=>  0.24080
    17        RBEAM   Scalar      (GLOBAL)               :  0.01800
                                             [1]=>  0.01800
    18           A1   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    19           A2   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    20           A3   Scalar      (GLOBAL)               : 10*CONVERTTORAD
                                             [1]=>  0.17453
    21           A4   Scalar      (GLOBAL)               : 5*CONVERTTORAD
                                             [1]=>  0.08727
    22           A5   Scalar      (GLOBAL)               : 20*CONVERTTORAD
                                             [1]=>  0.34907
    23           A6   Scalar      (GLOBAL)               : 25*CONVERTTORAD
                                             [1]=>  0.43633
    24            L   Scalar      (GLOBAL)               : 10
                                             [1]=> 10
    25         AREA   Scalar      (GLOBAL)               :  9.50e-4
                                             [1]=>  9.50e-4
    26         JVEC   Vector      (GLOBAL)               : Vector(0,0,J)
                                             [1]=> V(0,0,0)
    27            F   Scalar      (GLOBAL)               : (AREA*L)*((JVEC)<x>(B))
                                             [1]=> V(0,0,0)
    28           B1   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   4)           : BM
    29           B2   Scalar      (GLOBAL)               : 100
                                             [1]=> 100
                                  (REGION   4)           : BM
    30         BMAX   Scalar      (GLOBAL)               : Gmax#1
                                             [1]=> Gmax#1
    31         BMIN   Scalar      (GLOBAL)               : Gmin#2
                                             [1]=> Gmin#2
    32           DB   Scalar      (GLOBAL)               : (BMAX-BMIN)/BMAX
                                             [5]=> (Gmax#1-Gmin#2)/Gmax#1
    33           OF   Scalar      (GLOBAL)               :  0.70000
                                             [1]=>  0.70000
    34           FF   Scalar      (GLOBAL)               :  0.60000
                                             [1]=>  0.60000
    35    OBJECTIVE   Scalar      (GLOBAL)               : (((JC*OF)*FF)-JCOIL)/JCOIL
                                             [7]=> ((Table#1* 0.42000)-JCOIL)/JCOIL
    36          B_X   Scalar      (GLOBAL)               : Abs(Xcomp(BM))
                                             [8]=> Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
    37    ALIGNMENT   Scalar      (GLOBAL)               : Gmax#3
                                             [1]=> Gmax#3



==========================
SUMMARIZE EQUATIONS
==========================
In the following equation definitions
Derivatives are represented by appending a dot and the differentiated coordinate.
The operator <V> represents volume integration. <Vb> is weighted by basis function.
<Vu> is weighted by the upwind modifer. <Vbu> is weighted by both.
A dotted volume integral represents volume integration weighted by the indicated
derivative of the basis function. 'Beta' represents a basis function.
The operator <S>.c represents surface integration weighted by the indicated
direction cosine.

            DEFINES     REGION/     DEPENDS                      BASE          CSE
 EQUATION     VAR    COMPARTMENT      VAR         FUNCTION     COMPLEXITY   COMPLEXITY     MEMORY  DEFINITION
-----------------------------------------------------------------------------------------------------------

PRIMARY EQUATIONS
     1          A                            Field Equation                                      : (CURL((1/MU)*(CURL(A))))-J
                           1                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           2                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin        266           45         3600 : (<Vb>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<Vb>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))
                                        A    Space Jacobian       1782          221        17680 : (<Vb>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<Vb>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                           Surface Galerkin         46           46         3680 : -((<S>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<S>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                        A  Surface Jacobian        222          222        17760 : -((<S>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<S>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))))
                           3                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         21           12          960 : ((<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X)))-(<Vb>(JCOIL))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                    JCOIL    Space Jacobian          3            3          240 : -(<Vb>(1))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           4                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
     2      JCOIL                           Global Equation                                      : OBJECTIVE-0
                                             Space Galerkin          0            7          560 : ((Table#1* 0.42000)-JCOIL)/JCOIL
                                    JCOIL    Space Jacobian         10           13         1040 : (-1/(def#15(JCOIL)))-(((Table#1* 0.42000)-(ref#15))/Sqr(ref#15))
                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null
EQUATION 1 PARAMETER DEPENDENCIES:
           BM          MU0       MUIRON            J           MU

========================================================
     SUMMARIZE BOUNDARY CONDITIONS
========================================================

BOUNDARY CONDITION TAGS with associated BC INDEX
BC TAG   1:BC   1 val(A)  nat(0)
BC TAG   2:BC   2 nat(A)  nat(0)

    BC  KIND     DEFINES   COMPARTMENT     DEPENDS     FUNCTION     COMPLEXITY    MEMORY    DEFINITION
-----------------------------------------------------------------------------------------------------
     1   VAL          A            1                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            2                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            3                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
     2   NAT          A            1                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            2                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            3                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            4                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0

================================
SUMMARIZE FITS AND INTEGRALS
=================================
                             REGION/       BASE        CSE
    FIT         KIND       COMPARTMENT  COMPLEXITY  COMPLEXITY  MEMORY  DEFINITION
-----------------------------------------------------------------------------------------
     1            GlobalMax       1           6          6        480     : 0
     1            GlobalMax       2           6          6        480     : 0
     1            GlobalMax       3           6          6        480     : 0
     1            GlobalMax       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     2            GlobalMin       1           6          6        480     : 100
     2            GlobalMin       2           6          6        480     : 100
     2            GlobalMin       3           6          6        480     : 100
     2            GlobalMin       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3            GlobalMax       1           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       2           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       3           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       4           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))

===============================
  SUMMARIZE PLOTS
===============================
                      REGION/       BASE        CSE
  PLOT    TYPE     COMPARTMENT  COMPLEXITY  COMPLEXITY    MEMORY    DEFINITION
------------------------------------------------------------------------------
     1     CONTOUR          0          1          1           80  : A
     2     CONTOUR          0          6          6          480  : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3      VECTOR          0          5          5          400  : Vector(A.Y,-(A.X),0)
     4     CONTOUR          0          1          1           80  :  1.26e-6
     5      VECTOR          0          1          1           80  : V(0,0,0)

==UNUSED== PARAMETER DEFINITIONS:
 ALPHA6 CONVERTTORAD A5 A6 B1 B2 B_X
Uorder=3
 A order=3
LOG Threads=4 Order=3 Speed=1 Stability=0
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=4.02192e-05 XNORM=16395.7 Flag=Ok
NEWTON STEP 1/40 NORM=1.04043e+07
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00158774 XNORM=17772.6 Flag=Ok
NEWTON STEP 2 XNORM=1.09233 RESNORM=6.11297e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00137687 XNORM=21362.9 Flag=Ok
NEWTON STEP 3 XNORM=0.886241 RESNORM=5.63891e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00124522 XNORM=22193.6 Flag=Ok
NEWTON STEP 4 XNORM=0.831142 RESNORM=5.2014e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00113366 XNORM=23054.5 Flag=Ok
NEWTON STEP 5 XNORM=0.794084 RESNORM=4.79797e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.0010388 XNORM=23946.6 Flag=Ok
NEWTON STEP 6 XNORM=0.768426 RESNORM=4.42598e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.000998021 XNORM=24870.8 Flag=Ok
NEWTON STEP 7 XNORM=0.750173 RESNORM=4.08296e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00132856 XNORM=25828.1 Flag=Ok
NEWTON STEP 8 XNORM=0.73618 RESNORM=3.76686e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.000859314 XNORM=26819.3 Flag=Ok
NEWTON STEP 9 XNORM=0.726364 RESNORM=3.47527e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00433183 XNORM=27845.6 Flag=Ok
NEWTON STEP 10 XNORM=0.719455 RESNORM=3.20627e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00078491 XNORM=28907.6 Flag=Ok
NEWTON STEP 11 XNORM=0.711819 RESNORM=2.95841e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.000742463 XNORM=30006.9 Flag=Ok
NEWTON STEP 12 XNORM=0.706621 RESNORM=2.72993e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.000704967 XNORM=31144.3 Flag=Ok
NEWTON STEP 13 XNORM=0.70225 RESNORM=2.5193e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.000677612 XNORM=32320.6 Flag=Ok
NEWTON STEP 14 XNORM=0.698496 RESNORM=2.32511e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.000671518 XNORM=33537 Flag=Ok
NEWTON STEP 15 XNORM=0.695219 RESNORM=2.14605e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.000781084 XNORM=3479.44 Flag=Ok
NEWTON STEP 16 XNORM=0.692343 RESNORM=1.975e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00869088 XNORM=3604.39 Flag=Ok
NEWTON STEP 17 XNORM=0.690846 RESNORM=1.82544e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00480209 XNORM=3734.86 Flag=Ok
NEWTON STEP 18 XNORM=0.700812 RESNORM=1.68708e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00418637 XNORM=3869.49 Flag=Ok
NEWTON STEP 19 XNORM=0.679563 RESNORM=1.55927e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00619643 XNORM=4008.37 Flag=Ok
NEWTON STEP 20 XNORM=0.678553 RESNORM=1.44124e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00361281 XNORM=4151.59 Flag=Ok
NEWTON STEP 21 XNORM=0.685226 RESNORM=1.33207e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.0389421 XNORM=4299.25 Flag=Ok
NEWTON STEP 22 XNORM=0.695576 RESNORM=1.23603e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.0172764 XNORM=4451.19 Flag=Ok
NEWTON STEP 23 XNORM=0.794821 RESNORM=1.14206e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.0041836 XNORM=4607.93 Flag=Ok
NEWTON STEP 24 XNORM=0.667146 RESNORM=1.05662e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00550829 XNORM=4769.34 Flag=Ok
NEWTON STEP 25 XNORM=0.665939 RESNORM=9.77268e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.0814663 XNORM=4935.5 Flag=Ok
NEWTON STEP 26 XNORM=0.882881 RESNORM=9.25989e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00305308 XNORM=5104.96 Flag=Ok
NEWTON STEP 27 XNORM=0.65932 RESNORM=8.61302e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00386559 XNORM=5280.78 Flag=Ok
NEWTON STEP 28 XNORM=0.657663 RESNORM=7.97133e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.0050305 XNORM=5461.55 Flag=Ok
NEWTON STEP 29 XNORM=0.656676 RESNORM=7.3835e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00505855 XNORM=5647.3 Flag=Ok
NEWTON STEP 30 XNORM=0.657343 RESNORM=6.84383e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00239469 XNORM=5838.08 Flag=Ok
NEWTON STEP 31 XNORM=0.661148 RESNORM=6.34337e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00217435 XNORM=6033.97 Flag=Ok
NEWTON STEP 32 XNORM=0.66121 RESNORM=5.88909e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00489405 XNORM=6234.97 Flag=Ok
NEWTON STEP 33 XNORM=0.668358 RESNORM=5.48265e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00234734 XNORM=6441.08 Flag=Ok
NEWTON STEP 34 XNORM=0.651344 RESNORM=5.10056e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00313266 XNORM=6652.37 Flag=Ok
NEWTON STEP 35 XNORM=0.645257 RESNORM=4.72639e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00307967 XNORM=6868.85 Flag=Ok
NEWTON STEP 36 XNORM=0.643689 RESNORM=4.37206e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00281544 XNORM=7090.49 Flag=Ok
NEWTON STEP 37 XNORM=0.644135 RESNORM=4.04486e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00297028 XNORM=7317.27 Flag=Ok
NEWTON STEP 38 XNORM=0.644927 RESNORM=3.74373e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00493055 XNORM=7549.15 Flag=Ok
NEWTON STEP 39 XNORM=0.653236 RESNORM=3.46154e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2036 RNORM=0.00695965 XNORM=7786.09 Flag=Ok
NEWTON STEP 40 XNORM=0.636787 RESNORM=3.24471e+07 Lanczos/DInv
RMS Spatial Errors   0.022014
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.000830139 XNORM=7706.46 Flag=Ok
NEWTON STEP 1/40 NORM=3.24664e+07
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.000830174 XNORM=7706.47 Flag=Ok
NEWTON STEP 2 XNORM=0.626326 RESNORM=2.99962e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00302386 XNORM=7943.49 Flag=Ok
NEWTON STEP 3 XNORM=0.645536 RESNORM=2.7719e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00268513 XNORM=8185.09 Flag=Ok
NEWTON STEP 4 XNORM=0.642547 RESNORM=2.54741e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00308251 XNORM=8431.29 Flag=Ok
NEWTON STEP 5 XNORM=0.660241 RESNORM=2.36658e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00335445 XNORM=8681.87 Flag=Ok
NEWTON STEP 6 XNORM=0.642532 RESNORM=2.20277e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.0023995 XNORM=8936.68 Flag=Ok
NEWTON STEP 7 XNORM=0.640044 RESNORM=2.02319e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00664068 XNORM=9195.76 Flag=Ok
NEWTON STEP 8 XNORM=0.772958 RESNORM=1.9034e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00163685 XNORM=9458.33 Flag=Ok
NEWTON STEP 9 XNORM=0.604558 RESNORM=1.79044e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00369915 XNORM=9725.11 Flag=Ok
NEWTON STEP 10 XNORM=0.604412 RESNORM=1.66183e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00696981 XNORM=9995.28 Flag=Ok
NEWTON STEP 11 XNORM=0.701032 RESNORM=1.51317e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.0106505 XNORM=10267.9 Flag=Ok
NEWTON STEP 12 XNORM=0.623609 RESNORM=1.3752e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00348762 XNORM=10543.1 Flag=Ok
NEWTON STEP 13 XNORM=0.656228 RESNORM=1.28778e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.0944844 XNORM=10822.5 Flag=Ok
NEWTON STEP 14 XNORM=5.03665 RESNORM=7.00544e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.000332249 XNORM=11128 Flag=Ok
NEWTON STEP 15 XNORM=0.581016 RESNORM=1.09742e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.000495015 XNORM=11408 Flag=Ok
NEWTON STEP 16 XNORM=0.576893 RESNORM=1.01524e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.000704429 XNORM=11702.2 Flag=Ok
NEWTON STEP 17 XNORM=0.572481 RESNORM=9.39495e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.000961389 XNORM=11997.8 Flag=Ok
NEWTON STEP 18 XNORM=0.567965 RESNORM=8.69241e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00128283 XNORM=12294.3 Flag=Ok
NEWTON STEP 19 XNORM=0.563354 RESNORM=8.03812e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.001695 XNORM=12591.3 Flag=Ok
NEWTON STEP 20 XNORM=0.55868 RESNORM=7.42499e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.0022333 XNORM=12888.3 Flag=Ok
NEWTON STEP 21 XNORM=0.55402 RESNORM=6.84504e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00295834 XNORM=13184.7 Flag=Ok
NEWTON STEP 22 XNORM=0.549527 RESNORM=6.289e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00425244 XNORM=13480 Flag=Ok
NEWTON STEP 23 XNORM=0.545719 RESNORM=5.74729e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.0972817 XNORM=13773.4 Flag=Ok
NEWTON STEP 24 XNORM=1.19772 RESNORM=5.22719e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00156798 XNORM=13925.1 Flag=Ok
NEWTON STEP 25 XNORM=0.535893 RESNORM=4.44935e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00126862 XNORM=14216.5 Flag=Ok
NEWTON STEP 26 XNORM=0.530564 RESNORM=4.10945e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.000885921 XNORM=14503.2 Flag=Ok
NEWTON STEP 27 XNORM=0.525248 RESNORM=3.80035e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.000572085 XNORM=14786.4 Flag=Ok
NEWTON STEP 28 XNORM=0.519997 RESNORM=3.52008e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.000837844 XNORM=15065.6 Flag=Ok
NEWTON STEP 29 XNORM=0.514917 RESNORM=3.26736e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00150937 XNORM=15340 Flag=Ok
NEWTON STEP 30 XNORM=0.510136 RESNORM=3.04224e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00227179 XNORM=15608.9 Flag=Ok
NEWTON STEP 31 XNORM=0.505682 RESNORM=2.8473e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00251331 XNORM=15871.5 Flag=Ok
NEWTON STEP 32 XNORM=0.501344 RESNORM=2.68248e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00144913 XNORM=16127.2 Flag=Ok
NEWTON STEP 33 XNORM=0.497089 RESNORM=2.53803e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00179462 XNORM=16376 Flag=Ok
NEWTON STEP 34 XNORM=0.496019 RESNORM=2.42519e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00254403 XNORM=16616.2 Flag=Ok
NEWTON STEP 35 XNORM=0.501945 RESNORM=2.36497e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00728995 XNORM=16846 Flag=Ok
NEWTON STEP 36 XNORM=0.586382 RESNORM=2.51943e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00778426 XNORM=17045.5 Flag=Ok
NEWTON STEP 37 XNORM=0.502521 RESNORM=2.41319e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.188666 XNORM=17238.2 Flag=Ok
NEWTON STEP 38 XNORM=8.10367 RESNORM=2.86198e+09 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.00711558 XNORM=17718.8 Flag=Ok
NEWTON STEP 39 XNORM=0.449146 RESNORM=1.42874e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2039 RNORM=0.0157463 XNORM=1823.09 Flag=Ok
NEWTON STEP 40 XNORM=0.717317 RESNORM=1.51363e+08 Lanczos/DInv
RMS Spatial Errors   0.066947
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00745829 XNORM=1711.32 Flag=Ok
NEWTON STEP 1/40 NORM=2.34091e+08
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00745831 XNORM=1711.32 Flag=Ok
NEWTON STEP 2 XNORM=0.295664 RESNORM=2.18027e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00727114 XNORM=1696.06 Flag=Ok
NEWTON STEP 3 XNORM=0.289238 RESNORM=2.07617e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.0442565 XNORM=1679.52 Flag=Ok
NEWTON STEP 4 XNORM=0.292542 RESNORM=1.96821e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00330357 XNORM=1662.57 Flag=Ok
NEWTON STEP 5 XNORM=0.267676 RESNORM=1.89218e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00467447 XNORM=1643.85 Flag=Ok
NEWTON STEP 6 XNORM=0.26228 RESNORM=1.79466e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00338961 XNORM=1624.12 Flag=Ok
NEWTON STEP 7 XNORM=0.259454 RESNORM=1.71318e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00376899 XNORM=1603.45 Flag=Ok
NEWTON STEP 8 XNORM=0.25651 RESNORM=1.64454e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00635082 XNORM=1581.9 Flag=Ok
NEWTON STEP 9 XNORM=0.2533 RESNORM=1.58475e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.0102621 XNORM=1559.53 Flag=Ok
NEWTON STEP 10 XNORM=0.248694 RESNORM=1.53907e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00865189 XNORM=1536.39 Flag=Ok
NEWTON STEP 11 XNORM=0.250858 RESNORM=1.54258e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00914819 XNORM=1512.74 Flag=Ok
NEWTON STEP 12 XNORM=0.235072 RESNORM=1.46658e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.0127685 XNORM=1488.23 Flag=Ok
NEWTON STEP 13 XNORM=0.22453 RESNORM=1.35586e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00289096 XNORM=1463.18 Flag=Ok
NEWTON STEP 14 XNORM=0.225083 RESNORM=1.29711e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00333465 XNORM=1437.74 Flag=Ok
NEWTON STEP 15 XNORM=0.248296 RESNORM=1.24339e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00506814 XNORM=1412.85 Flag=Ok
NEWTON STEP 16 XNORM=0.278465 RESNORM=1.23907e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.0234934 XNORM=1391.37 Flag=Ok
NEWTON STEP 17 XNORM=0.225107 RESNORM=1.33475e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.0277055 XNORM=1366.32 Flag=Ok
NEWTON STEP 18 XNORM=0.208799 RESNORM=1.21541e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00659242 XNORM=1342.02 Flag=Ok
NEWTON STEP 19 XNORM=0.18452 RESNORM=1.16279e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00751244 XNORM=1316.8 Flag=Ok
NEWTON STEP 20 XNORM=0.190929 RESNORM=1.00076e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00256895 XNORM=1253.42 Flag=Ok
NEWTON STEP 21 XNORM=0.171284 RESNORM=6.70642e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.000265059 XNORM=868.179 Flag=Ok
NEWTON STEP 22 XNORM=0.0995349 RESNORM=3.18988e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00961505 XNORM=142.335 Flag=Ok
NEWTON STEP 23 XNORM=0.0173187 RESNORM=2.44263e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00805096 XNORM=128.649 Flag=Ok
NEWTON STEP 24 XNORM=0.15996 RESNORM=6.0155e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00600772 XNORM=116.231 Flag=Ok
NEWTON STEP 25 XNORM=0.0174837 RESNORM=4.42411e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.0059776 XNORM=104.971 Flag=Ok
NEWTON STEP 26 XNORM=0.0243982 RESNORM=3.93843e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00452418 XNORM=94.7706 Flag=Ok
NEWTON STEP 27 XNORM=0.0149391 RESNORM=3.54618e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.0398448 XNORM=85.5346 Flag=Ok
NEWTON STEP 28 XNORM=0.210944 RESNORM=2.83324e+09 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 12 of 2043 RNORM=0.00660417 XNORM=77.1773 Flag=Ok
NEWTON STEP 29 XNORM=0.0324889 RESNORM=2.61733e+09 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.0176721 XNORM=69.619 Flag=Ok
NEWTON STEP 30 XNORM=0.0123681 RESNORM=2.08148e+09 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.0678139 XNORM=55.1873 Flag=Ok
NEWTON STEP 31 XNORM=0.0181534 RESNORM=1.48927e+09 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2043 RNORM=0.00422607 XNORM=49.7498 Flag=Ok
NEWTON STEP 32 XNORM=0.00744771 RESNORM=4.08081e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 129 of 2043 RNORM=0.000639124 XNORM=0.350197 Flag=Ok
NEWTON STEP 33 XNORM=0.0259089 RESNORM=3.21479e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 184 of 2043 RNORM=4.89497e-05 XNORM=0.315179 Flag=Ok
NEWTON STEP 34 XNORM=0.0205264 RESNORM=1.67626e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 111 of 2043 RNORM=0.00101545 XNORM=0.252255 Flag=Ok
NEWTON STEP 35 XNORM=0.0162443 RESNORM=1.10762e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 112 of 2043 RNORM=0.000288055 XNORM=0.207515 Flag=Ok
NEWTON STEP 36 XNORM=0.0132221 RESNORM=3.63092e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 111 of 2043 RNORM=0.000245408 XNORM=0.147488 Flag=Ok
NEWTON STEP 37 XNORM=0.00896472 RESNORM=5.94521e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 254 of 2043 RNORM=4.00812e-09 XNORM=0.00219679 Flag=Ok
NEWTON STEP 38 XNORM=0.00153092 RESNORM=851514 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 292 of 2043 RNORM=2.60164e-08 XNORM=0.00237097 Flag=Ok
NEWTON STEP 39 XNORM=0.00147306 RESNORM=708137 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 264 of 2043 RNORM=4.90941e-09 XNORM=0.00345469 Flag=Ok
NEWTON STEP 40 XNORM=0.00192994 RESNORM=593848 Lanczos/DInv
RMS Spatial Errors   0.021778
DO_NEXTSTAGE pde 0x11b819c00  MAXSTAGE=0

================================================================
===  FlexPDE Version 7.21/OSXm  12:20:20 Dec  9 2022  Copyright (c) 1996-2020 PDE Solutions Inc.
===  /Users/nhanguyen/Downloads/MiniProject/Mini_Project_Model.pde 01:05:25 6/18/23
================================================================
    1| { Fill in the following sections (removing comment marks ! if necessary),
    2|   and delete those that are unused.}
    3| TITLE 'Part A Mid-Term Mini-Project'     { the problem identification }
    4| COORDINATES cartesian2  { coordinate system, 1D,2D,3D, etc }
    5| VARIABLES        { system variables }
    6|   A              { choose your own names }
    7| Global Variables
    8| Jcoil
    9| SELECT         { method controls }
   10| Threads = 4
   11| Initial Values
   12| Jcoil = 1e7
   13| DEFINITIONS    { parameter definitions }
   14| #include"input.pde"
    2| Alpha3=0.191888888889
    3| Alpha2=0.191888888889
    4| Alpha6=0.418666666667
   15| 
   16| B = curl(A)
   17| Bm = magnitude(B)
   18| Mu0 = 4*pi*1e-7
   19| Muiron = 1 + 1507 * exp(-(abs(Bm / 1.443) ^ 3.725))
   20| Jc = table('Bmax.tbl')
   21| J = 0
   22| 
   23| !Creating a degree 
   24| Converttorad = 2 * pi / 360
   25| 
   26| mu=mu0
   27| !Radii in meters
   28| Rii = .025
   29| Rio = .0425
   30| Roo = .0602
   31| Rair = 4 * Roo
   32| Rbeam = .018
   33| 
   34| !Angles in radians
   35| A1 = 15 * Converttorad
   36| A2 = 15 * Converttorad
   37| A3 = 10 * Converttorad
   38| A4 = 5 * Converttorad
   39| A5 = 20 * Converttorad
   40| A6 = 25 * Converttorad
   41| !Alpha2 = 5 * Converttorad
   42| !Alpha3 = 5 * Converttorad
   43| !Alpha4 = 5 * Converttorad
   44| !Alpha6 = 5 * Converttorad
   45| 
   46| !Lorentz Forces in coils
   47| L = 10 !coil length in meters
   48| Area = 950e-6 !m^2 of coils
   49| Jvec = vector(0,0,J)
   50| F=Area*L*cross(Jvec,B)
   51| 
   52| !B field calculations
   53| B1 = 0
   54| B2 = 100
   55| Bmax = globalmax(B1)
   56| Bmin = globalmin(B2)
   57| dB = (Bmax - Bmin) / Bmax
   58| 
   59| Of = .7
   60| Ff = .6
   61| Objective=(Jc*of*ff-Jcoil)/Jcoil
   62| 
   63| !Determining alignment with respect to x (ideal is when B_x = 0 everywhere)
   64| B_x= abs(xcomp(Bm))
   65| Alignment=globalmax(B_x)
   66| 
   67| ! INITIAL VALUES
   68| EQUATIONS        { PDE's, one for each variable }
   69| A: curl(1/mu*curl(A))=J
   70| Jcoil: Objective=0
   71| 
   72| 
   73| ! CONSTRAINTS    { Integral constraints }
   74| BOUNDARIES       { The domain definition }
   75| REGION 1 "air"
   76| START(0,0) value(A) = 0  { Walk the domain boundary }
   77| LINE TO (0,Rair) value(A) = 0
   78| ARC(CENTER = 0,0) Angle = -90 natural(A) = 0
   79| line to close
   80| 
   81| Region 2 "Backiron"
   82| Mu = mu0*Muiron
   83| Start(1.5 * Roo,0)
   84| Line to (3 * Roo, 0)
   85| Arc(center = 0,0) to (0, 3 * Roo)
   86| Line to (0, 1.5 * Roo)
   87| Arc(center = 0,0) to close
   88| 
   89| Region 3 "Saddle Coils"
   90| J = Jcoil
   91| !Coil 1:
   92| Start(Rii,0) Line to (Rio,0)
   93| Arc(Center = 0,0) to (Rio * cos(A1),Rio * sin(A1))
   94| Line to (Rii * cos(A1),Rii * sin(A1))
   95| Arc(Center = 0,0) To Close
   96| 
   97| !Coil 2:
   98| Start(Rii * cos(A1 + Alpha2),Rii * sin(A1 + Alpha2))
   99| Line to (Rio * cos(A1 + Alpha2), Rio * sin(A1 + Alpha2))
  100| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2), Rio * sin(A1 + A2 + Alpha2))
  101| Line to (Rii * cos(A1 + A2 + Alpha2), Rii * sin(A1 + A2 + Alpha2))
  102| Arc(Center = 0,0) to close
  103| 
  104| !Coil3:
  105| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3),Rii * sin(A1 + Alpha2 + A2 + Alpha3))
  106| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3), Rio * sin(A1 + Alpha2 + A2 + Alpha3))
  107| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  108| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  109| Arc(Center = 0,0) to close
  110| 
  111| !Coil4:
  112| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4),Rii * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  113| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4), Rio * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  114| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  115| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  116| Arc(Center = 0,0) to close
  117| 
  118| 
  119| !Coil5:
  120| Start(Rio,0)
  121| Line to (Roo,0)
  122| Arc(Center = 0,0) To (Roo * cos(A5), Roo * sin(A5))
  123| Line to (Rio * cos(A5), Rio * sin(A5))
  124| Arc(Center = 0,0) to close
  125| 
  126| !Coil6:
  127| Start(Rio * cos(A5 + Alpha6), Rio * sin(A5 + Alpha6))
  128| Line to (Roo * cos(A5 + Alpha6), Roo * sin(A5 + Alpha6))
  129| Arc(Center = 0,0) to (Roo * cos(A5 + Alpha6 + A6), Roo * sin(A5 + Alpha6 + A6))
  130| Line to (Rio * cos(A5 + Alpha6 + A6), Rio * sin(A5 + Alpha6 + A6))
  131| Arc(Center = 0,0) to close
  132| }
Parse_Error at Line 132 Cols 1-1
 in file /Users/nhanguyen/Downloads/MiniProject/Mini_Project_Model.pde
Illegal Character
-----Called from ReadPDE::readsymbol
-----Called from Parser::next_symbol
-----Called from Parser::parse
-----Called from control::parse_file
-----Called from control::do_parse
-----Called from PDEThread::run
-----Called from PageStack::GUIcreatejob
-----Called from PageStack::OnDropFiles
-----Called from flexpde::OnRun
-----Called from fpdemain

Parse_Error Catches RTException stop_parse(100,0x6000005f9a40,0x12d6606c0)
errmsg: Illegal Character
Trace:
-----Called from ReadPDE::readsymbol
-----Called from Parser::next_symbol
-----Called from Parser::parse
-----Called from control::parse_file
-----Called from control::do_parse
-----Called from PDEThread::run
-----Called from PageStack::GUIcreatejob
-----Called from PageStack::OnDropFiles
-----Called from flexpde::OnRun
-----Called from fpdemain

PDEThread Catches RTException stop_parse(100,0x6000005f9a40,0x12d6606c0)
errmsg: Illegal Character
Trace:
-----Called from ReadPDE::readsymbol
-----Called from Parser::next_symbol
-----Called from Parser::parse
-----Called from control::parse_file
-----Called from control::do_parse
-----Called from PDEThread::run
-----Called from PageStack::GUIcreatejob
-----Called from PageStack::OnDropFiles
-----Called from flexpde::OnRun
-----Called from fpdemain


================================================================
===  FlexPDE Version 7.21/OSXm  12:20:20 Dec  9 2022  Copyright (c) 1996-2020 PDE Solutions Inc.
===  /Users/nhanguyen/Downloads/MiniProject/Mini_Project_Model.pde 01:06:07 6/18/23
================================================================
    1| { Fill in the following sections (removing comment marks ! if necessary),
    2|   and delete those that are unused.}
    3| TITLE 'Part A Mid-Term Mini-Project'     { the problem identification }
    4| COORDINATES cartesian2  { coordinate system, 1D,2D,3D, etc }
    5| VARIABLES        { system variables }
    6|   A              { choose your own names }
    7| Global Variables
    8| Jcoil
    9| SELECT         { method controls }
   10| Threads = 4
   11| Initial Values
   12| Jcoil = 1e7
   13| DEFINITIONS    { parameter definitions }
   14| #include"input.pde"
    2| Alpha3=0.191888888889
    3| Alpha2=0.191888888889
    4| Alpha6=0.418666666667
   15| 
   16| B = curl(A)
   17| Bm = magnitude(B)
   18| Mu0 = 4*pi*1e-7
   19| Muiron = 1 + 1507 * exp(-(abs(Bm / 1.443) ^ 3.725))
   20| Jc = table('Bmax.tbl')
   21| J = 0
   22| 
   23| !Creating a degree 
   24| Converttorad = 2 * pi / 360
   25| 
   26| mu=mu0
   27| !Radii in meters
   28| Rii = .025
   29| Rio = .0425
   30| Roo = .0602
   31| Rair = 4 * Roo
   32| Rbeam = .018
   33| 
   34| !Angles in radians
   35| A1 = 15 * Converttorad
   36| A2 = 15 * Converttorad
   37| A3 = 10 * Converttorad
   38| A4 = 5 * Converttorad
   39| A5 = 20 * Converttorad
   40| A6 = 25 * Converttorad
   41| !Alpha2 = 5 * Converttorad
   42| !Alpha3 = 5 * Converttorad
   43| !Alpha4 = 5 * Converttorad
   44| !Alpha6 = 5 * Converttorad
   45| 
   46| !Lorentz Forces in coils
   47| L = 10 !coil length in meters
   48| Area = 950e-6 !m^2 of coils
   49| Jvec = vector(0,0,J)
   50| F=Area*L*cross(Jvec,B)
   51| 
   52| !B field calculations
   53| B1 = 0
   54| B2 = 100
   55| Bmax = globalmax(B1)
   56| Bmin = globalmin(B2)
   57| dB = (Bmax - Bmin) / Bmax
   58| 
   59| Of = .7
   60| Ff = .6
   61| Objective=(Jc*of*ff-Jcoil)/Jcoil
   62| 
   63| !Determining alignment with respect to x (ideal is when B_x = 0 everywhere)
   64| B_x= abs(xcomp(Bm))
   65| Alignment=globalmax(B_x)
   66| 
   67| ! INITIAL VALUES
   68| EQUATIONS        { PDE's, one for each variable }
   69| A: curl(1/mu*curl(A))=J
   70| Jcoil: Objective=0
   71| 
   72| 
   73| ! CONSTRAINTS    { Integral constraints }
   74| BOUNDARIES       { The domain definition }
   75| REGION 1 "air"
   76| START(0,0) value(A) = 0  { Walk the domain boundary }
   77| LINE TO (0,Rair) value(A) = 0
   78| ARC(CENTER = 0,0) Angle = -90 natural(A) = 0
   79| line to close
   80| 
   81| Region 2 "Backiron"
   82| Mu = mu0*Muiron
   83| Start(1.5 * Roo,0)
   84| Line to (3 * Roo, 0)
   85| Arc(center = 0,0) to (0, 3 * Roo)
   86| Line to (0, 1.5 * Roo)
   87| Arc(center = 0,0) to close
   88| 
   89| Region 3 "Saddle Coils"
   90| J = Jcoil
   91| !Coil 1:
   92| Start(Rii,0) Line to (Rio,0)
   93| Arc(Center = 0,0) to (Rio * cos(A1),Rio * sin(A1))
   94| Line to (Rii * cos(A1),Rii * sin(A1))
   95| Arc(Center = 0,0) To Close
   96| 
   97| !Coil 2:
   98| Start(Rii * cos(A1 + Alpha2),Rii * sin(A1 + Alpha2))
   99| Line to (Rio * cos(A1 + Alpha2), Rio * sin(A1 + Alpha2))
  100| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2), Rio * sin(A1 + A2 + Alpha2))
  101| Line to (Rii * cos(A1 + A2 + Alpha2), Rii * sin(A1 + A2 + Alpha2))
  102| Arc(Center = 0,0) to close
  103| 
  104| !Coil3:
  105| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3),Rii * sin(A1 + Alpha2 + A2 + Alpha3))
  106| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3), Rio * sin(A1 + Alpha2 + A2 + Alpha3))
  107| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  108| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  109| Arc(Center = 0,0) to close
  110| 
  111| !Coil4:
  112| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4),Rii * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  113| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4), Rio * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  114| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  115| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  116| Arc(Center = 0,0) to close
  117| 
  118| 
  119| !Coil5:
  120| Start(Rio,0)
  121| Line to (Roo,0)
  122| Arc(Center = 0,0) To (Roo * cos(A5), Roo * sin(A5))
  123| Line to (Rio * cos(A5), Rio * sin(A5))
  124| Arc(Center = 0,0) to close
  125| 
  126| !Coil6:
  127| Start(Rio * cos(A5 + Alpha6), Rio * sin(A5 + Alpha6))
  128| Line to (Roo * cos(A5 + Alpha6), Roo * sin(A5 + Alpha6))
  129| Arc(Center = 0,0) to (Roo * cos(A5 + Alpha6 + A6), Roo * sin(A5 + Alpha6 + A6))
  130| Line to (Rio * cos(A5 + Alpha6 + A6), Rio * sin(A5 + Alpha6 + A6))
  131| Arc(Center = 0,0) to close
  132| 
  133| Region 4 "Beam Area"
  134| B1 = Bm
  135| B2 = Bm
  136| Start(0,0)
  137| Line to (0,Rbeam)
  138| Arc(Center = 0,0) Angle = -90
  139| line to close
  140| 
  141| ! TIME 0 TO 1    { if time dependent }
  142| MONITORS         { show progress }
  143| PLOTS            { save result displays }
  144| CONTOUR(A)
  145| Contour(Bm) on "Beam Area" painted
  146| Vector(B)
  147| Contour(Mu) painted
  148| Vector(F) on "Saddle Coils"
  149| 
  150| Summary
  151| export file = "Output.txt"
  152| Report(Bmax) !as "Bmax in beam area"
  153| Report(Bmin) !as "Bmin in beam area"
  154| Report(dB) !as "dB in beam area"
  155| !Report(B_x)
  156| Report(Alignment) 
  157| 
  158| !Report(globalmin(Mu0)) as "Mu0 min"
  159| !Report(globalmax(Mu0)) as "Mu0 max"
  160| !Report(globalmax_X(Mu0))
  161| !Report(globalmax_Y(Mu0))
  162| END
Uorder=3
 A order=3
STUDENT VERSION SETS GROW2=0.35 GRIDARC=30
IMPORTMESH(0) NDIM=2 NB=10 NAB=3 NODES=160 CELLS=274 SIDES=433 LEGS=0 imaging=0 time(0)=0
MESH IMPORT ABORTED: Different GRID2D
Transferred mesh does not match local domain!
(Boundary descriptions must match exactly.)

==========================
 SUMMARIZE PARAMETERS
==========================
 Param         name     Type       Domain               Definition
-------------------------------------------------------------------
     1       ALPHA4   Scalar      (GLOBAL)               :  0.34889
                                             [1]=>  0.34889
     2       ALPHA3   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     3       ALPHA2   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     4       ALPHA6   Scalar      (GLOBAL)               :  0.41867
                                             [1]=>  0.41867
     5            B   Vector      (GLOBAL)               : Vector(DY(A),-(DX(A)),0)
                                             [5]=> Vector(A.Y,-(A.X),0)
     6           BM   Scalar      (GLOBAL)               : Sqrt(Sqr(DY(A))+Sqr(DX(A)))
                                             [6]=> Sqrt(Sqr(A.Y)+Sqr(A.X))
     7          MU0   Scalar      (GLOBAL)               :  1.26e-6
                                             [1]=>  1.26e-6
     8       MUIRON   Scalar      (GLOBAL)               : 1+(1507*Exp(-(Abs(BM* 0.69300)^ 3.72500)))
                                             [17]=> 1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))
     9           JC   Scalar      (GLOBAL)               : Table#1
                                             [1]=> Table#1
    10            J   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   3)           : JCOIL
    11 CONVERTTORAD   Scalar      (GLOBAL)               :  0.01745
                                             [1]=>  0.01745
    12           MU   Scalar      (GLOBAL)               : MU0
                                             [1]=>  1.26e-6
                                  (REGION   2)           : MU0*MUIRON
    13          RII   Scalar      (GLOBAL)               :  0.02500
                                             [1]=>  0.02500
    14          RIO   Scalar      (GLOBAL)               :  0.04250
                                             [1]=>  0.04250
    15          ROO   Scalar      (GLOBAL)               :  0.06020
                                             [1]=>  0.06020
    16         RAIR   Scalar      (GLOBAL)               : 4*ROO
                                             [1]=>  0.24080
    17        RBEAM   Scalar      (GLOBAL)               :  0.01800
                                             [1]=>  0.01800
    18           A1   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    19           A2   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    20           A3   Scalar      (GLOBAL)               : 10*CONVERTTORAD
                                             [1]=>  0.17453
    21           A4   Scalar      (GLOBAL)               : 5*CONVERTTORAD
                                             [1]=>  0.08727
    22           A5   Scalar      (GLOBAL)               : 20*CONVERTTORAD
                                             [1]=>  0.34907
    23           A6   Scalar      (GLOBAL)               : 25*CONVERTTORAD
                                             [1]=>  0.43633
    24            L   Scalar      (GLOBAL)               : 10
                                             [1]=> 10
    25         AREA   Scalar      (GLOBAL)               :  9.50e-4
                                             [1]=>  9.50e-4
    26         JVEC   Vector      (GLOBAL)               : Vector(0,0,J)
                                             [1]=> V(0,0,0)
    27            F   Scalar      (GLOBAL)               : (AREA*L)*((JVEC)<x>(B))
                                             [1]=> V(0,0,0)
    28           B1   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   4)           : BM
    29           B2   Scalar      (GLOBAL)               : 100
                                             [1]=> 100
                                  (REGION   4)           : BM
    30         BMAX   Scalar      (GLOBAL)               : Gmax#1
                                             [1]=> Gmax#1
    31         BMIN   Scalar      (GLOBAL)               : Gmin#2
                                             [1]=> Gmin#2
    32           DB   Scalar      (GLOBAL)               : (BMAX-BMIN)/BMAX
                                             [5]=> (Gmax#1-Gmin#2)/Gmax#1
    33           OF   Scalar      (GLOBAL)               :  0.70000
                                             [1]=>  0.70000
    34           FF   Scalar      (GLOBAL)               :  0.60000
                                             [1]=>  0.60000
    35    OBJECTIVE   Scalar      (GLOBAL)               : (((JC*OF)*FF)-JCOIL)/JCOIL
                                             [7]=> ((Table#1* 0.42000)-JCOIL)/JCOIL
    36          B_X   Scalar      (GLOBAL)               : Abs(Xcomp(BM))
                                             [8]=> Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
    37    ALIGNMENT   Scalar      (GLOBAL)               : Gmax#3
                                             [1]=> Gmax#3



==========================
SUMMARIZE EQUATIONS
==========================
In the following equation definitions
Derivatives are represented by appending a dot and the differentiated coordinate.
The operator <V> represents volume integration. <Vb> is weighted by basis function.
<Vu> is weighted by the upwind modifer. <Vbu> is weighted by both.
A dotted volume integral represents volume integration weighted by the indicated
derivative of the basis function. 'Beta' represents a basis function.
The operator <S>.c represents surface integration weighted by the indicated
direction cosine.

            DEFINES     REGION/     DEPENDS                      BASE          CSE
 EQUATION     VAR    COMPARTMENT      VAR         FUNCTION     COMPLEXITY   COMPLEXITY     MEMORY  DEFINITION
-----------------------------------------------------------------------------------------------------------

PRIMARY EQUATIONS
     1          A                            Field Equation                                      : (CURL((1/MU)*(CURL(A))))-J
                           1                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           2                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin        266           45         3600 : (<Vb>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<Vb>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))
                                        A    Space Jacobian       1782          221        17680 : (<Vb>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<Vb>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                           Surface Galerkin         46           46         3680 : -((<S>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<S>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                        A  Surface Jacobian        222          222        17760 : -((<S>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<S>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))))
                           3                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         21           12          960 : ((<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X)))-(<Vb>(JCOIL))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                    JCOIL    Space Jacobian          3            3          240 : -(<Vb>(1))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           4                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
     2      JCOIL                           Global Equation                                      : OBJECTIVE-0
                                             Space Galerkin          0            7          560 : ((Table#1* 0.42000)-JCOIL)/JCOIL
                                    JCOIL    Space Jacobian         10           13         1040 : (-1/(def#15(JCOIL)))-(((Table#1* 0.42000)-(ref#15))/Sqr(ref#15))
                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null
EQUATION 1 PARAMETER DEPENDENCIES:
           BM          MU0       MUIRON            J           MU

========================================================
     SUMMARIZE BOUNDARY CONDITIONS
========================================================

BOUNDARY CONDITION TAGS with associated BC INDEX
BC TAG   1:BC   1 val(A)  nat(0)
BC TAG   2:BC   2 nat(A)  nat(0)

    BC  KIND     DEFINES   COMPARTMENT     DEPENDS     FUNCTION     COMPLEXITY    MEMORY    DEFINITION
-----------------------------------------------------------------------------------------------------
     1   VAL          A            1                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            2                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            3                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
     2   NAT          A            1                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            2                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            3                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            4                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0

================================
SUMMARIZE FITS AND INTEGRALS
=================================
                             REGION/       BASE        CSE
    FIT         KIND       COMPARTMENT  COMPLEXITY  COMPLEXITY  MEMORY  DEFINITION
-----------------------------------------------------------------------------------------
     1            GlobalMax       1           6          6        480     : 0
     1            GlobalMax       2           6          6        480     : 0
     1            GlobalMax       3           6          6        480     : 0
     1            GlobalMax       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     2            GlobalMin       1           6          6        480     : 100
     2            GlobalMin       2           6          6        480     : 100
     2            GlobalMin       3           6          6        480     : 100
     2            GlobalMin       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3            GlobalMax       1           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       2           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       3           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       4           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))

===============================
  SUMMARIZE PLOTS
===============================
                      REGION/       BASE        CSE
  PLOT    TYPE     COMPARTMENT  COMPLEXITY  COMPLEXITY    MEMORY    DEFINITION
------------------------------------------------------------------------------
     1     CONTOUR          0          1          1           80  : A
     2     CONTOUR          0          6          6          480  : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3      VECTOR          0          5          5          400  : Vector(A.Y,-(A.X),0)
     4     CONTOUR          0          1          1           80  :  1.26e-6
     5      VECTOR          0          1          1           80  : V(0,0,0)

==UNUSED== PARAMETER DEFINITIONS:
 CONVERTTORAD B1 B2 B_X
Uorder=3
 A order=3
LOG Threads=4 Order=3 Speed=1 Stability=0
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=7.75732e-05 XNORM=16071.9 Flag=Ok
NEWTON STEP 1/40 NORM=1.33238e+07
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.001081 XNORM=19193.5 Flag=Ok
NEWTON STEP 2 XNORM=0.840843 RESNORM=3.31551e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00258919 XNORM=28051.3 Flag=Ok
NEWTON STEP 3 XNORM=0.757653 RESNORM=3.1024e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118371 XNORM=29116.4 Flag=Ok
NEWTON STEP 4 XNORM=0.74187 RESNORM=2.88054e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00115063 XNORM=30220.8 Flag=Ok
NEWTON STEP 5 XNORM=0.730512 RESNORM=2.67783e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118514 XNORM=31363.1 Flag=Ok
NEWTON STEP 6 XNORM=0.721665 RESNORM=2.49346e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00182193 XNORM=32544.2 Flag=Ok
NEWTON STEP 7 XNORM=0.714634 RESNORM=2.33296e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00116196 XNORM=33761.3 Flag=Ok
NEWTON STEP 8 XNORM=0.708791 RESNORM=2.16866e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00135903 XNORM=3502.63 Flag=Ok
NEWTON STEP 9 XNORM=0.703959 RESNORM=1.86392e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0012087 XNORM=3628.04 Flag=Ok
NEWTON STEP 10 XNORM=0.700186 RESNORM=1.72279e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00143335 XNORM=3758.96 Flag=Ok
NEWTON STEP 11 XNORM=0.697217 RESNORM=1.59236e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00374685 XNORM=3894.03 Flag=Ok
NEWTON STEP 12 XNORM=0.696119 RESNORM=1.47146e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0336835 XNORM=4033.32 Flag=Ok
NEWTON STEP 13 XNORM=0.827086 RESNORM=1.37478e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0106366 XNORM=4176.02 Flag=Ok
NEWTON STEP 14 XNORM=0.674387 RESNORM=1.27487e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00241678 XNORM=4323.98 Flag=Ok
NEWTON STEP 15 XNORM=0.673832 RESNORM=1.17715e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00207178 XNORM=4476.47 Flag=Ok
NEWTON STEP 16 XNORM=0.673278 RESNORM=1.08688e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00197295 XNORM=4633.51 Flag=Ok
NEWTON STEP 17 XNORM=0.671948 RESNORM=1.00348e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00200363 XNORM=4795.18 Flag=Ok
NEWTON STEP 18 XNORM=0.670376 RESNORM=9.2639e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0021317 XNORM=4961.55 Flag=Ok
NEWTON STEP 19 XNORM=0.668709 RESNORM=8.55164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00238395 XNORM=5132.69 Flag=Ok
NEWTON STEP 20 XNORM=0.667028 RESNORM=7.89431e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00286725 XNORM=5308.64 Flag=Ok
NEWTON STEP 21 XNORM=0.665486 RESNORM=7.28949e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00389148 XNORM=5489.46 Flag=Ok
NEWTON STEP 22 XNORM=0.664527 RESNORM=6.73885e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00645055 XNORM=5675.14 Flag=Ok
NEWTON STEP 23 XNORM=0.665891 RESNORM=6.26295e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0309835 XNORM=5865.54 Flag=Ok
NEWTON STEP 24 XNORM=0.665022 RESNORM=6.08162e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00368498 XNORM=6054.09 Flag=Ok
NEWTON STEP 25 XNORM=0.647354 RESNORM=5.57299e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00907884 XNORM=6254.68 Flag=Ok
NEWTON STEP 26 XNORM=0.645873 RESNORM=5.20144e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0170611 XNORM=6459.93 Flag=Ok
NEWTON STEP 27 XNORM=0.789452 RESNORM=5.14591e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00302535 XNORM=6667.02 Flag=Ok
NEWTON STEP 28 XNORM=0.641641 RESNORM=4.77375e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0030556 XNORM=6882.72 Flag=Ok
NEWTON STEP 29 XNORM=0.640097 RESNORM=4.35557e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00324249 XNORM=7103.46 Flag=Ok
NEWTON STEP 30 XNORM=0.638462 RESNORM=3.96598e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00359026 XNORM=7329.15 Flag=Ok
NEWTON STEP 31 XNORM=0.636901 RESNORM=3.60628e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00412093 XNORM=7559.69 Flag=Ok
NEWTON STEP 32 XNORM=0.6357 RESNORM=3.28164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00486637 XNORM=7794.92 Flag=Ok
NEWTON STEP 33 XNORM=0.63533 RESNORM=3.00428e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00592924 XNORM=8034.55 Flag=Ok
NEWTON STEP 34 XNORM=0.636371 RESNORM=2.79911e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0080158 XNORM=8278.09 Flag=Ok
NEWTON STEP 35 XNORM=0.639623 RESNORM=2.73024e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.019089 XNORM=8524.1 Flag=Ok
NEWTON STEP 36 XNORM=0.659803 RESNORM=3.31293e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0172221 XNORM=8755.15 Flag=Ok
NEWTON STEP 37 XNORM=0.626935 RESNORM=3.84689e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00586398 XNORM=9001.83 Flag=Ok
NEWTON STEP 38 XNORM=0.620434 RESNORM=3.5847e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00488153 XNORM=9263.89 Flag=Ok
NEWTON STEP 39 XNORM=0.623912 RESNORM=3.32413e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00753505 XNORM=9531.41 Flag=Ok
NEWTON STEP 40 XNORM=0.626827 RESNORM=2.94284e+07 Lanczos/DInv
RMS Spatial Errors   0.012430
DO_NEXTSTAGE pde 0x11b819c00  MAXSTAGE=0

================================================================
===  FlexPDE Version 7.21/OSXm  12:20:20 Dec  9 2022  Copyright (c) 1996-2020 PDE Solutions Inc.
===  /Users/nhanguyen/Downloads/MiniProject/Mini_Project_Model.pde 01:08:08 6/18/23
================================================================
    1| { Fill in the following sections (removing comment marks ! if necessary),
    2|   and delete those that are unused.}
    3| TITLE 'Part A Mid-Term Mini-Project'     { the problem identification }
    4| COORDINATES cartesian2  { coordinate system, 1D,2D,3D, etc }
    5| VARIABLES        { system variables }
    6|   A              { choose your own names }
    7| Global Variables
    8| Jcoil
    9| SELECT         { method controls }
   10| Threads = 4
   11| Initial Values
   12| Jcoil = 1e7
   13| DEFINITIONS    { parameter definitions }
   14| #include"input.pde"
    2| Alpha3=0.191888888889
    3| Alpha2=0.191888888889
    4| Alpha6=0.418666666667
   15| 
   16| B = curl(A)
   17| Bm = magnitude(B)
   18| Mu0 = 4*pi*1e-7
   19| Muiron = 1 + 1507 * exp(-(abs(Bm / 1.443) ^ 3.725))
   20| Jc = table('Bmax.tbl')
   21| J = 0
   22| 
   23| !Creating a degree 
   24| Converttorad = 2 * pi / 360
   25| 
   26| mu=mu0
   27| !Radii in meters
   28| Rii = .025
   29| Rio = .0425
   30| Roo = .0602
   31| Rair = 4 * Roo
   32| Rbeam = .018
   33| 
   34| !Angles in radians
   35| A1 = 15 * Converttorad
   36| A2 = 15 * Converttorad
   37| A3 = 10 * Converttorad
   38| A4 = 5 * Converttorad
   39| A5 = 20 * Converttorad
   40| A6 = 25 * Converttorad
   41| !Alpha2 = 5 * Converttorad
   42| !Alpha3 = 5 * Converttorad
   43| !Alpha4 = 5 * Converttorad
   44| !Alpha6 = 5 * Converttorad
   45| 
   46| !Lorentz Forces in coils
   47| L = 10 !coil length in meters
   48| Area = 950e-6 !m^2 of coils
   49| Jvec = vector(0,0,J)
   50| F=Area*L*cross(Jvec,B)
   51| 
   52| !B field calculations
   53| B1 = 0
   54| B2 = 100
   55| Bmax = globalmax(B2)
   56| Bmin = globalmin(B1)
   57| dB = (Bmax - Bmin) / Bmax
   58| 
   59| Of = .7
   60| Ff = .6
   61| Objective=(Jc*of*ff-Jcoil)/Jcoil
   62| 
   63| !Determining alignment with respect to x (ideal is when B_x = 0 everywhere)
   64| B_x= abs(xcomp(Bm))
   65| Alignment=globalmax(B_x)
   66| 
   67| ! INITIAL VALUES
   68| EQUATIONS        { PDE's, one for each variable }
   69| A: curl(1/mu*curl(A))=J
   70| Jcoil: Objective=0
   71| 
   72| 
   73| ! CONSTRAINTS    { Integral constraints }
   74| BOUNDARIES       { The domain definition }
   75| REGION 1 "air"
   76| START(0,0) value(A) = 0  { Walk the domain boundary }
   77| LINE TO (0,Rair) value(A) = 0
   78| ARC(CENTER = 0,0) Angle = -90 natural(A) = 0
   79| line to close
   80| 
   81| Region 2 "Backiron"
   82| Mu = mu0*Muiron
   83| Start(1.5 * Roo,0)
   84| Line to (3 * Roo, 0)
   85| Arc(center = 0,0) to (0, 3 * Roo)
   86| Line to (0, 1.5 * Roo)
   87| Arc(center = 0,0) to close
   88| 
   89| Region 3 "Saddle Coils"
   90| J = Jcoil
   91| !Coil 1:
   92| Start(Rii,0) Line to (Rio,0)
   93| Arc(Center = 0,0) to (Rio * cos(A1),Rio * sin(A1))
   94| Line to (Rii * cos(A1),Rii * sin(A1))
   95| Arc(Center = 0,0) To Close
   96| 
   97| !Coil 2:
   98| Start(Rii * cos(A1 + Alpha2),Rii * sin(A1 + Alpha2))
   99| Line to (Rio * cos(A1 + Alpha2), Rio * sin(A1 + Alpha2))
  100| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2), Rio * sin(A1 + A2 + Alpha2))
  101| Line to (Rii * cos(A1 + A2 + Alpha2), Rii * sin(A1 + A2 + Alpha2))
  102| Arc(Center = 0,0) to close
  103| 
  104| !Coil3:
  105| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3),Rii * sin(A1 + Alpha2 + A2 + Alpha3))
  106| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3), Rio * sin(A1 + Alpha2 + A2 + Alpha3))
  107| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  108| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  109| Arc(Center = 0,0) to close
  110| 
  111| !Coil4:
  112| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4),Rii * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  113| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4), Rio * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  114| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  115| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  116| Arc(Center = 0,0) to close
  117| 
  118| 
  119| !Coil5:
  120| Start(Rio,0)
  121| Line to (Roo,0)
  122| Arc(Center = 0,0) To (Roo * cos(A5), Roo * sin(A5))
  123| Line to (Rio * cos(A5), Rio * sin(A5))
  124| Arc(Center = 0,0) to close
  125| 
  126| !Coil6:
  127| Start(Rio * cos(A5 + Alpha6), Rio * sin(A5 + Alpha6))
  128| Line to (Roo * cos(A5 + Alpha6), Roo * sin(A5 + Alpha6))
  129| Arc(Center = 0,0) to (Roo * cos(A5 + Alpha6 + A6), Roo * sin(A5 + Alpha6 + A6))
  130| Line to (Rio * cos(A5 + Alpha6 + A6), Rio * sin(A5 + Alpha6 + A6))
  131| Arc(Center = 0,0) to close
  132| 
  133| Region 4 "Beam Area"
  134| B1 = Bm
  135| B2 = Bm
  136| Start(0,0)
  137| Line to (0,Rbeam)
  138| Arc(Center = 0,0) Angle = -90
  139| line to close
  140| 
  141| ! TIME 0 TO 1    { if time dependent }
  142| MONITORS         { show progress }
  143| PLOTS            { save result displays }
  144| CONTOUR(A)
  145| Contour(Bm) on "Beam Area" painted
  146| Vector(B)
  147| Contour(Mu) painted
  148| Vector(F) on "Saddle Coils"
  149| 
  150| Summary
  151| export file = "Output.txt"
  152| Report(Bmax) !as "Bmax in beam area"
  153| Report(Bmin) !as "Bmin in beam area"
  154| Report(dB) !as "dB in beam area"
  155| !Report(B_x)
  156| Report(Alignment) 
  157| 
  158| !Report(globalmin(Mu0)) as "Mu0 min"
  159| !Report(globalmax(Mu0)) as "Mu0 max"
  160| !Report(globalmax_X(Mu0))
  161| !Report(globalmax_Y(Mu0))
  162| END
Uorder=3
 A order=3
STUDENT VERSION SETS GROW2=0.35 GRIDARC=30
IMPORTMESH(0) NDIM=2 NB=10 NAB=3 NODES=172 CELLS=298 SIDES=469 LEGS=0 imaging=0 time(0)=0
MESH IMPORT ABORTED: Different GRID2D
Transferred mesh does not match local domain!
(Boundary descriptions must match exactly.)

==========================
 SUMMARIZE PARAMETERS
==========================
 Param         name     Type       Domain               Definition
-------------------------------------------------------------------
     1       ALPHA4   Scalar      (GLOBAL)               :  0.34889
                                             [1]=>  0.34889
     2       ALPHA3   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     3       ALPHA2   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     4       ALPHA6   Scalar      (GLOBAL)               :  0.41867
                                             [1]=>  0.41867
     5            B   Vector      (GLOBAL)               : Vector(DY(A),-(DX(A)),0)
                                             [5]=> Vector(A.Y,-(A.X),0)
     6           BM   Scalar      (GLOBAL)               : Sqrt(Sqr(DY(A))+Sqr(DX(A)))
                                             [6]=> Sqrt(Sqr(A.Y)+Sqr(A.X))
     7          MU0   Scalar      (GLOBAL)               :  1.26e-6
                                             [1]=>  1.26e-6
     8       MUIRON   Scalar      (GLOBAL)               : 1+(1507*Exp(-(Abs(BM* 0.69300)^ 3.72500)))
                                             [17]=> 1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))
     9           JC   Scalar      (GLOBAL)               : Table#1
                                             [1]=> Table#1
    10            J   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   3)           : JCOIL
    11 CONVERTTORAD   Scalar      (GLOBAL)               :  0.01745
                                             [1]=>  0.01745
    12           MU   Scalar      (GLOBAL)               : MU0
                                             [1]=>  1.26e-6
                                  (REGION   2)           : MU0*MUIRON
    13          RII   Scalar      (GLOBAL)               :  0.02500
                                             [1]=>  0.02500
    14          RIO   Scalar      (GLOBAL)               :  0.04250
                                             [1]=>  0.04250
    15          ROO   Scalar      (GLOBAL)               :  0.06020
                                             [1]=>  0.06020
    16         RAIR   Scalar      (GLOBAL)               : 4*ROO
                                             [1]=>  0.24080
    17        RBEAM   Scalar      (GLOBAL)               :  0.01800
                                             [1]=>  0.01800
    18           A1   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    19           A2   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    20           A3   Scalar      (GLOBAL)               : 10*CONVERTTORAD
                                             [1]=>  0.17453
    21           A4   Scalar      (GLOBAL)               : 5*CONVERTTORAD
                                             [1]=>  0.08727
    22           A5   Scalar      (GLOBAL)               : 20*CONVERTTORAD
                                             [1]=>  0.34907
    23           A6   Scalar      (GLOBAL)               : 25*CONVERTTORAD
                                             [1]=>  0.43633
    24            L   Scalar      (GLOBAL)               : 10
                                             [1]=> 10
    25         AREA   Scalar      (GLOBAL)               :  9.50e-4
                                             [1]=>  9.50e-4
    26         JVEC   Vector      (GLOBAL)               : Vector(0,0,J)
                                             [1]=> V(0,0,0)
    27            F   Scalar      (GLOBAL)               : (AREA*L)*((JVEC)<x>(B))
                                             [1]=> V(0,0,0)
    28           B1   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   4)           : BM
    29           B2   Scalar      (GLOBAL)               : 100
                                             [1]=> 100
                                  (REGION   4)           : BM
    30         BMAX   Scalar      (GLOBAL)               : Gmax#1
                                             [1]=> Gmax#1
    31         BMIN   Scalar      (GLOBAL)               : Gmin#2
                                             [1]=> Gmin#2
    32           DB   Scalar      (GLOBAL)               : (BMAX-BMIN)/BMAX
                                             [5]=> (Gmax#1-Gmin#2)/Gmax#1
    33           OF   Scalar      (GLOBAL)               :  0.70000
                                             [1]=>  0.70000
    34           FF   Scalar      (GLOBAL)               :  0.60000
                                             [1]=>  0.60000
    35    OBJECTIVE   Scalar      (GLOBAL)               : (((JC*OF)*FF)-JCOIL)/JCOIL
                                             [7]=> ((Table#1* 0.42000)-JCOIL)/JCOIL
    36          B_X   Scalar      (GLOBAL)               : Abs(Xcomp(BM))
                                             [8]=> Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
    37    ALIGNMENT   Scalar      (GLOBAL)               : Gmax#3
                                             [1]=> Gmax#3



==========================
SUMMARIZE EQUATIONS
==========================
In the following equation definitions
Derivatives are represented by appending a dot and the differentiated coordinate.
The operator <V> represents volume integration. <Vb> is weighted by basis function.
<Vu> is weighted by the upwind modifer. <Vbu> is weighted by both.
A dotted volume integral represents volume integration weighted by the indicated
derivative of the basis function. 'Beta' represents a basis function.
The operator <S>.c represents surface integration weighted by the indicated
direction cosine.

            DEFINES     REGION/     DEPENDS                      BASE          CSE
 EQUATION     VAR    COMPARTMENT      VAR         FUNCTION     COMPLEXITY   COMPLEXITY     MEMORY  DEFINITION
-----------------------------------------------------------------------------------------------------------

PRIMARY EQUATIONS
     1          A                            Field Equation                                      : (CURL((1/MU)*(CURL(A))))-J
                           1                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           2                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin        266           45         3600 : (<Vb>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<Vb>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))
                                        A    Space Jacobian       1782          221        17680 : (<Vb>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<Vb>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                           Surface Galerkin         46           46         3680 : -((<S>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<S>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                        A  Surface Jacobian        222          222        17760 : -((<S>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<S>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))))
                           3                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         21           12          960 : ((<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X)))-(<Vb>(JCOIL))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                    JCOIL    Space Jacobian          3            3          240 : -(<Vb>(1))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           4                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
     2      JCOIL                           Global Equation                                      : OBJECTIVE-0
                                             Space Galerkin          0            7          560 : ((Table#1* 0.42000)-JCOIL)/JCOIL
                                    JCOIL    Space Jacobian         10           13         1040 : (-1/(def#15(JCOIL)))-(((Table#1* 0.42000)-(ref#15))/Sqr(ref#15))
                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null
EQUATION 1 PARAMETER DEPENDENCIES:
           BM          MU0       MUIRON            J           MU

========================================================
     SUMMARIZE BOUNDARY CONDITIONS
========================================================

BOUNDARY CONDITION TAGS with associated BC INDEX
BC TAG   1:BC   1 val(A)  nat(0)
BC TAG   2:BC   2 nat(A)  nat(0)

    BC  KIND     DEFINES   COMPARTMENT     DEPENDS     FUNCTION     COMPLEXITY    MEMORY    DEFINITION
-----------------------------------------------------------------------------------------------------
     1   VAL          A            1                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            2                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            3                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
     2   NAT          A            1                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            2                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            3                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            4                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0

================================
SUMMARIZE FITS AND INTEGRALS
=================================
                             REGION/       BASE        CSE
    FIT         KIND       COMPARTMENT  COMPLEXITY  COMPLEXITY  MEMORY  DEFINITION
-----------------------------------------------------------------------------------------
     1            GlobalMax       1           6          6        480     : 100
     1            GlobalMax       2           6          6        480     : 100
     1            GlobalMax       3           6          6        480     : 100
     1            GlobalMax       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     2            GlobalMin       1           6          6        480     : 0
     2            GlobalMin       2           6          6        480     : 0
     2            GlobalMin       3           6          6        480     : 0
     2            GlobalMin       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3            GlobalMax       1           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       2           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       3           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       4           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))

===============================
  SUMMARIZE PLOTS
===============================
                      REGION/       BASE        CSE
  PLOT    TYPE     COMPARTMENT  COMPLEXITY  COMPLEXITY    MEMORY    DEFINITION
------------------------------------------------------------------------------
     1     CONTOUR          0          1          1           80  : A
     2     CONTOUR          0          6          6          480  : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3      VECTOR          0          5          5          400  : Vector(A.Y,-(A.X),0)
     4     CONTOUR          0          1          1           80  :  1.26e-6
     5      VECTOR          0          1          1           80  : V(0,0,0)

==UNUSED== PARAMETER DEFINITIONS:
 CONVERTTORAD B1 B2 B_X
Uorder=3
 A order=3
LOG Threads=4 Order=3 Speed=1 Stability=0
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=7.75732e-05 XNORM=16071.9 Flag=Ok
NEWTON STEP 1/40 NORM=1.33238e+07
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.001081 XNORM=19193.5 Flag=Ok
NEWTON STEP 2 XNORM=0.840843 RESNORM=3.31551e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00258919 XNORM=28051.3 Flag=Ok
NEWTON STEP 3 XNORM=0.757653 RESNORM=3.1024e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118371 XNORM=29116.4 Flag=Ok
NEWTON STEP 4 XNORM=0.74187 RESNORM=2.88054e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00115063 XNORM=30220.8 Flag=Ok
NEWTON STEP 5 XNORM=0.730512 RESNORM=2.67783e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118514 XNORM=31363.1 Flag=Ok
NEWTON STEP 6 XNORM=0.721665 RESNORM=2.49346e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00182193 XNORM=32544.2 Flag=Ok
NEWTON STEP 7 XNORM=0.714634 RESNORM=2.33296e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00116196 XNORM=33761.3 Flag=Ok
NEWTON STEP 8 XNORM=0.708791 RESNORM=2.16866e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00135903 XNORM=3502.63 Flag=Ok
NEWTON STEP 9 XNORM=0.703959 RESNORM=1.86392e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0012087 XNORM=3628.04 Flag=Ok
NEWTON STEP 10 XNORM=0.700186 RESNORM=1.72279e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00143335 XNORM=3758.96 Flag=Ok
NEWTON STEP 11 XNORM=0.697217 RESNORM=1.59236e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00374685 XNORM=3894.03 Flag=Ok
NEWTON STEP 12 XNORM=0.696119 RESNORM=1.47146e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0336835 XNORM=4033.32 Flag=Ok
NEWTON STEP 13 XNORM=0.827086 RESNORM=1.37478e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0106366 XNORM=4176.02 Flag=Ok
NEWTON STEP 14 XNORM=0.674387 RESNORM=1.27487e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00241678 XNORM=4323.98 Flag=Ok
NEWTON STEP 15 XNORM=0.673832 RESNORM=1.17715e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00207178 XNORM=4476.47 Flag=Ok
NEWTON STEP 16 XNORM=0.673278 RESNORM=1.08688e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00197295 XNORM=4633.51 Flag=Ok
NEWTON STEP 17 XNORM=0.671948 RESNORM=1.00348e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00200363 XNORM=4795.18 Flag=Ok
NEWTON STEP 18 XNORM=0.670376 RESNORM=9.2639e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0021317 XNORM=4961.55 Flag=Ok
NEWTON STEP 19 XNORM=0.668709 RESNORM=8.55164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00238395 XNORM=5132.69 Flag=Ok
NEWTON STEP 20 XNORM=0.667028 RESNORM=7.89431e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00286725 XNORM=5308.64 Flag=Ok
NEWTON STEP 21 XNORM=0.665486 RESNORM=7.28949e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00389148 XNORM=5489.46 Flag=Ok
NEWTON STEP 22 XNORM=0.664527 RESNORM=6.73885e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00645055 XNORM=5675.14 Flag=Ok
NEWTON STEP 23 XNORM=0.665891 RESNORM=6.26295e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0309835 XNORM=5865.54 Flag=Ok
NEWTON STEP 24 XNORM=0.665022 RESNORM=6.08162e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00368498 XNORM=6054.09 Flag=Ok
NEWTON STEP 25 XNORM=0.647354 RESNORM=5.57299e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00907884 XNORM=6254.68 Flag=Ok
NEWTON STEP 26 XNORM=0.645873 RESNORM=5.20144e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0170611 XNORM=6459.93 Flag=Ok
NEWTON STEP 27 XNORM=0.789451 RESNORM=5.14591e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00302535 XNORM=6667.02 Flag=Ok
NEWTON STEP 28 XNORM=0.641641 RESNORM=4.77375e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0030556 XNORM=6882.72 Flag=Ok
NEWTON STEP 29 XNORM=0.640097 RESNORM=4.35557e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00324249 XNORM=7103.46 Flag=Ok
NEWTON STEP 30 XNORM=0.638462 RESNORM=3.96598e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00359026 XNORM=7329.15 Flag=Ok
NEWTON STEP 31 XNORM=0.636901 RESNORM=3.60628e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00412093 XNORM=7559.69 Flag=Ok
NEWTON STEP 32 XNORM=0.6357 RESNORM=3.28164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00486637 XNORM=7794.92 Flag=Ok
NEWTON STEP 33 XNORM=0.63533 RESNORM=3.00428e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00592924 XNORM=8034.55 Flag=Ok
NEWTON STEP 34 XNORM=0.636371 RESNORM=2.79911e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0080158 XNORM=8278.09 Flag=Ok
NEWTON STEP 35 XNORM=0.639623 RESNORM=2.73024e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.019089 XNORM=8524.1 Flag=Ok
NEWTON STEP 36 XNORM=0.659804 RESNORM=3.31293e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0172221 XNORM=8755.15 Flag=Ok
NEWTON STEP 37 XNORM=0.626935 RESNORM=3.8469e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00586399 XNORM=9001.83 Flag=Ok
NEWTON STEP 38 XNORM=0.620434 RESNORM=3.5847e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0048815 XNORM=9263.89 Flag=Ok
NEWTON STEP 39 XNORM=0.623912 RESNORM=3.32414e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00753497 XNORM=9531.41 Flag=Ok
NEWTON STEP 40 XNORM=0.626827 RESNORM=2.94285e+07 Lanczos/DInv
RMS Spatial Errors   0.012430
DO_NEXTSTAGE pde 0x15c19c400  MAXSTAGE=0

================================================================
===  FlexPDE Version 7.21/OSXm  12:20:20 Dec  9 2022  Copyright (c) 1996-2020 PDE Solutions Inc.
===  /Users/nhanguyen/Downloads/MiniProject/Mini_Project_Model.pde 01:08:43 6/18/23
================================================================
    1| { Fill in the following sections (removing comment marks ! if necessary),
    2|   and delete those that are unused.}
    3| TITLE 'Part A Mid-Term Mini-Project'     { the problem identification }
    4| COORDINATES cartesian2  { coordinate system, 1D,2D,3D, etc }
    5| VARIABLES        { system variables }
    6|   A              { choose your own names }
    7| Global Variables
    8| Jcoil
    9| SELECT         { method controls }
   10| Threads = 4
   11| Initial Values
   12| Jcoil = 1e7
   13| DEFINITIONS    { parameter definitions }
   14| #include"input.pde"
    2| Alpha3=0.191888888889
    3| Alpha2=0.191888888889
    4| Alpha6=0.418666666667
   15| 
   16| B = curl(A)
   17| Bm = magnitude(B)
   18| Mu0 = 4*pi*1e-7
   19| Muiron = 1 + 1507 * exp(-(abs(Bm / 1.443) ^ 3.725))
   20| Jc = table('Bmax.tbl')
   21| J = 0
   22| 
   23| !Creating a degree 
   24| Converttorad = 2 * pi / 360
   25| 
   26| mu=mu0
   27| !Radii in meters
   28| Rii = .025
   29| Rio = .0425
   30| Roo = .0602
   31| Rair = 4 * Roo
   32| Rbeam = .018
   33| 
   34| !Angles in radians
   35| A1 = 15 * Converttorad
   36| A2 = 15 * Converttorad
   37| A3 = 10 * Converttorad
   38| A4 = 5 * Converttorad
   39| A5 = 20 * Converttorad
   40| A6 = 25 * Converttorad
   41| !Alpha2 = 5 * Converttorad
   42| !Alpha3 = 5 * Converttorad
   43| !Alpha4 = 5 * Converttorad
   44| !Alpha6 = 5 * Converttorad
   45| 
   46| !Lorentz Forces in coils
   47| L = 10 !coil length in meters
   48| Area = 950e-6 !m^2 of coils
   49| Jvec = vector(0,0,J)
   50| F=Area*L*cross(Jvec,B)
   51| 
   52| !B field calculations
   53| B1 = 0
   54| B2 = 100
   55| Bmax = globalmax(B1)
   56| Bmin = globalmin(B2)
   57| dB = (Bmax - Bmin) / Bmax
   58| 
   59| Of = .7
   60| Ff = .6
   61| Objective=(Jc*of*ff-Jcoil)/Jcoil
   62| 
   63| !Determining alignment with respect to x (ideal is when B_x = 0 everywhere)
   64| B_x= abs(xcomp(Bm))
   65| Alignment=globalmax(B_x)
   66| 
   67| ! INITIAL VALUES
   68| EQUATIONS        { PDE's, one for each variable }
   69| A: curl(1/mu*curl(A))=J
   70| Jcoil: Objective=0
   71| 
   72| 
   73| ! CONSTRAINTS    { Integral constraints }
   74| BOUNDARIES       { The domain definition }
   75| REGION 1 "air"
   76| START(0,0) value(A) = 0  { Walk the domain boundary }
   77| LINE TO (0,Rair) value(A) = 0
   78| ARC(CENTER = 0,0) Angle = -90 natural(A) = 0
   79| line to close
   80| 
   81| Region 2 "Backiron"
   82| Mu = mu0*Muiron
   83| Start(1.5 * Roo,0)
   84| Line to (3 * Roo, 0)
   85| Arc(center = 0,0) to (0, 3 * Roo)
   86| Line to (0, 1.5 * Roo)
   87| Arc(center = 0,0) to close
   88| 
   89| Region 3 "Saddle Coils"
   90| J = Jcoil
   91| !Coil 1:
   92| Start(Rii,0) Line to (Rio,0)
   93| Arc(Center = 0,0) to (Rio * cos(A1),Rio * sin(A1))
   94| Line to (Rii * cos(A1),Rii * sin(A1))
   95| Arc(Center = 0,0) To Close
   96| 
   97| !Coil 2:
   98| Start(Rii * cos(A1 + Alpha2),Rii * sin(A1 + Alpha2))
   99| Line to (Rio * cos(A1 + Alpha2), Rio * sin(A1 + Alpha2))
  100| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2), Rio * sin(A1 + A2 + Alpha2))
  101| Line to (Rii * cos(A1 + A2 + Alpha2), Rii * sin(A1 + A2 + Alpha2))
  102| Arc(Center = 0,0) to close
  103| 
  104| !Coil3:
  105| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3),Rii * sin(A1 + Alpha2 + A2 + Alpha3))
  106| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3), Rio * sin(A1 + Alpha2 + A2 + Alpha3))
  107| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  108| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  109| Arc(Center = 0,0) to close
  110| 
  111| !Coil4:
  112| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4),Rii * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  113| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4), Rio * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  114| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  115| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  116| Arc(Center = 0,0) to close
  117| 
  118| 
  119| !Coil5:
  120| Start(Rio,0)
  121| Line to (Roo,0)
  122| Arc(Center = 0,0) To (Roo * cos(A5), Roo * sin(A5))
  123| Line to (Rio * cos(A5), Rio * sin(A5))
  124| Arc(Center = 0,0) to close
  125| 
  126| !Coil6:
  127| Start(Rio * cos(A5 + Alpha6), Rio * sin(A5 + Alpha6))
  128| Line to (Roo * cos(A5 + Alpha6), Roo * sin(A5 + Alpha6))
  129| Arc(Center = 0,0) to (Roo * cos(A5 + Alpha6 + A6), Roo * sin(A5 + Alpha6 + A6))
  130| Line to (Rio * cos(A5 + Alpha6 + A6), Rio * sin(A5 + Alpha6 + A6))
  131| Arc(Center = 0,0) to close
  132| 
  133| Region 4 "Beam Area"
  134| B1 = Bm
  135| B2 = Bm
  136| Start(0,0)
  137| Line to (0,Rbeam)
  138| Arc(Center = 0,0) Angle = -90
  139| line to close
  140| 
  141| ! TIME 0 TO 1    { if time dependent }
  142| MONITORS         { show progress }
  143| PLOTS            { save result displays }
  144| CONTOUR(A)
  145| Contour(Bm) on "Beam Area" painted
  146| Vector(B)
  147| Contour(Mu) painted
  148| Vector(F) on "Saddle Coils"
  149| 
  150| Summary
  151| export file = "Output.txt"
  152| Report(Bmax) !as "Bmax in beam area"
  153| Report(Bmin) !as "Bmin in beam area"
  154| Report(dB) !as "dB in beam area"
  155| !Report(B_x)
  156| Report(Alignment) 
  157| 
  158| !Report(globalmin(Mu0)) as "Mu0 min"
  159| !Report(globalmax(Mu0)) as "Mu0 max"
  160| !Report(globalmax_X(Mu0))
  161| !Report(globalmax_Y(Mu0))
  162| END
Uorder=3
 A order=3
STUDENT VERSION SETS GROW2=0.35 GRIDARC=30
IMPORTMESH(0) NDIM=2 NB=10 NAB=3 NODES=172 CELLS=298 SIDES=469 LEGS=0 imaging=0 time(0)=0
MESH IMPORT ABORTED: Different GRID2D
Transferred mesh does not match local domain!
(Boundary descriptions must match exactly.)

==========================
 SUMMARIZE PARAMETERS
==========================
 Param         name     Type       Domain               Definition
-------------------------------------------------------------------
     1       ALPHA4   Scalar      (GLOBAL)               :  0.34889
                                             [1]=>  0.34889
     2       ALPHA3   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     3       ALPHA2   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     4       ALPHA6   Scalar      (GLOBAL)               :  0.41867
                                             [1]=>  0.41867
     5            B   Vector      (GLOBAL)               : Vector(DY(A),-(DX(A)),0)
                                             [5]=> Vector(A.Y,-(A.X),0)
     6           BM   Scalar      (GLOBAL)               : Sqrt(Sqr(DY(A))+Sqr(DX(A)))
                                             [6]=> Sqrt(Sqr(A.Y)+Sqr(A.X))
     7          MU0   Scalar      (GLOBAL)               :  1.26e-6
                                             [1]=>  1.26e-6
     8       MUIRON   Scalar      (GLOBAL)               : 1+(1507*Exp(-(Abs(BM* 0.69300)^ 3.72500)))
                                             [17]=> 1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))
     9           JC   Scalar      (GLOBAL)               : Table#1
                                             [1]=> Table#1
    10            J   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   3)           : JCOIL
    11 CONVERTTORAD   Scalar      (GLOBAL)               :  0.01745
                                             [1]=>  0.01745
    12           MU   Scalar      (GLOBAL)               : MU0
                                             [1]=>  1.26e-6
                                  (REGION   2)           : MU0*MUIRON
    13          RII   Scalar      (GLOBAL)               :  0.02500
                                             [1]=>  0.02500
    14          RIO   Scalar      (GLOBAL)               :  0.04250
                                             [1]=>  0.04250
    15          ROO   Scalar      (GLOBAL)               :  0.06020
                                             [1]=>  0.06020
    16         RAIR   Scalar      (GLOBAL)               : 4*ROO
                                             [1]=>  0.24080
    17        RBEAM   Scalar      (GLOBAL)               :  0.01800
                                             [1]=>  0.01800
    18           A1   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    19           A2   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    20           A3   Scalar      (GLOBAL)               : 10*CONVERTTORAD
                                             [1]=>  0.17453
    21           A4   Scalar      (GLOBAL)               : 5*CONVERTTORAD
                                             [1]=>  0.08727
    22           A5   Scalar      (GLOBAL)               : 20*CONVERTTORAD
                                             [1]=>  0.34907
    23           A6   Scalar      (GLOBAL)               : 25*CONVERTTORAD
                                             [1]=>  0.43633
    24            L   Scalar      (GLOBAL)               : 10
                                             [1]=> 10
    25         AREA   Scalar      (GLOBAL)               :  9.50e-4
                                             [1]=>  9.50e-4
    26         JVEC   Vector      (GLOBAL)               : Vector(0,0,J)
                                             [1]=> V(0,0,0)
    27            F   Scalar      (GLOBAL)               : (AREA*L)*((JVEC)<x>(B))
                                             [1]=> V(0,0,0)
    28           B1   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   4)           : BM
    29           B2   Scalar      (GLOBAL)               : 100
                                             [1]=> 100
                                  (REGION   4)           : BM
    30         BMAX   Scalar      (GLOBAL)               : Gmax#1
                                             [1]=> Gmax#1
    31         BMIN   Scalar      (GLOBAL)               : Gmin#2
                                             [1]=> Gmin#2
    32           DB   Scalar      (GLOBAL)               : (BMAX-BMIN)/BMAX
                                             [5]=> (Gmax#1-Gmin#2)/Gmax#1
    33           OF   Scalar      (GLOBAL)               :  0.70000
                                             [1]=>  0.70000
    34           FF   Scalar      (GLOBAL)               :  0.60000
                                             [1]=>  0.60000
    35    OBJECTIVE   Scalar      (GLOBAL)               : (((JC*OF)*FF)-JCOIL)/JCOIL
                                             [7]=> ((Table#1* 0.42000)-JCOIL)/JCOIL
    36          B_X   Scalar      (GLOBAL)               : Abs(Xcomp(BM))
                                             [8]=> Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
    37    ALIGNMENT   Scalar      (GLOBAL)               : Gmax#3
                                             [1]=> Gmax#3



==========================
SUMMARIZE EQUATIONS
==========================
In the following equation definitions
Derivatives are represented by appending a dot and the differentiated coordinate.
The operator <V> represents volume integration. <Vb> is weighted by basis function.
<Vu> is weighted by the upwind modifer. <Vbu> is weighted by both.
A dotted volume integral represents volume integration weighted by the indicated
derivative of the basis function. 'Beta' represents a basis function.
The operator <S>.c represents surface integration weighted by the indicated
direction cosine.

            DEFINES     REGION/     DEPENDS                      BASE          CSE
 EQUATION     VAR    COMPARTMENT      VAR         FUNCTION     COMPLEXITY   COMPLEXITY     MEMORY  DEFINITION
-----------------------------------------------------------------------------------------------------------

PRIMARY EQUATIONS
     1          A                            Field Equation                                      : (CURL((1/MU)*(CURL(A))))-J
                           1                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           2                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin        266           45         3600 : (<Vb>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<Vb>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))
                                        A    Space Jacobian       1782          221        17680 : (<Vb>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<Vb>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                           Surface Galerkin         46           46         3680 : -((<S>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<S>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                        A  Surface Jacobian        222          222        17760 : -((<S>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<S>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))))
                           3                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         21           12          960 : ((<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X)))-(<Vb>(JCOIL))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                    JCOIL    Space Jacobian          3            3          240 : -(<Vb>(1))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           4                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
     2      JCOIL                           Global Equation                                      : OBJECTIVE-0
                                             Space Galerkin          0            7          560 : ((Table#1* 0.42000)-JCOIL)/JCOIL
                                    JCOIL    Space Jacobian         10           13         1040 : (-1/(def#15(JCOIL)))-(((Table#1* 0.42000)-(ref#15))/Sqr(ref#15))
                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null
EQUATION 1 PARAMETER DEPENDENCIES:
           BM          MU0       MUIRON            J           MU

========================================================
     SUMMARIZE BOUNDARY CONDITIONS
========================================================

BOUNDARY CONDITION TAGS with associated BC INDEX
BC TAG   1:BC   1 val(A)  nat(0)
BC TAG   2:BC   2 nat(A)  nat(0)

    BC  KIND     DEFINES   COMPARTMENT     DEPENDS     FUNCTION     COMPLEXITY    MEMORY    DEFINITION
-----------------------------------------------------------------------------------------------------
     1   VAL          A            1                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            2                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            3                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
     2   NAT          A            1                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            2                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            3                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            4                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0

================================
SUMMARIZE FITS AND INTEGRALS
=================================
                             REGION/       BASE        CSE
    FIT         KIND       COMPARTMENT  COMPLEXITY  COMPLEXITY  MEMORY  DEFINITION
-----------------------------------------------------------------------------------------
     1            GlobalMax       1           6          6        480     : 0
     1            GlobalMax       2           6          6        480     : 0
     1            GlobalMax       3           6          6        480     : 0
     1            GlobalMax       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     2            GlobalMin       1           6          6        480     : 100
     2            GlobalMin       2           6          6        480     : 100
     2            GlobalMin       3           6          6        480     : 100
     2            GlobalMin       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3            GlobalMax       1           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       2           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       3           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       4           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))

===============================
  SUMMARIZE PLOTS
===============================
                      REGION/       BASE        CSE
  PLOT    TYPE     COMPARTMENT  COMPLEXITY  COMPLEXITY    MEMORY    DEFINITION
------------------------------------------------------------------------------
     1     CONTOUR          0          1          1           80  : A
     2     CONTOUR          0          6          6          480  : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3      VECTOR          0          5          5          400  : Vector(A.Y,-(A.X),0)
     4     CONTOUR          0          1          1           80  :  1.26e-6
     5      VECTOR          0          1          1           80  : V(0,0,0)

==UNUSED== PARAMETER DEFINITIONS:
 CONVERTTORAD B1 B2 B_X
Uorder=3
 A order=3
LOG Threads=4 Order=3 Speed=1 Stability=0
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=7.75732e-05 XNORM=16071.9 Flag=Ok
NEWTON STEP 1/40 NORM=1.33238e+07
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.001081 XNORM=19193.5 Flag=Ok
NEWTON STEP 2 XNORM=0.840843 RESNORM=3.31551e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00258919 XNORM=28051.3 Flag=Ok
NEWTON STEP 3 XNORM=0.757653 RESNORM=3.1024e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118371 XNORM=29116.4 Flag=Ok
NEWTON STEP 4 XNORM=0.74187 RESNORM=2.88054e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00115063 XNORM=30220.8 Flag=Ok
NEWTON STEP 5 XNORM=0.730512 RESNORM=2.67783e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118514 XNORM=31363.1 Flag=Ok
NEWTON STEP 6 XNORM=0.721665 RESNORM=2.49346e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00182193 XNORM=32544.2 Flag=Ok
NEWTON STEP 7 XNORM=0.714634 RESNORM=2.33296e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00116196 XNORM=33761.3 Flag=Ok
NEWTON STEP 8 XNORM=0.708791 RESNORM=2.16866e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00135903 XNORM=3502.63 Flag=Ok
NEWTON STEP 9 XNORM=0.703959 RESNORM=1.86392e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0012087 XNORM=3628.04 Flag=Ok
NEWTON STEP 10 XNORM=0.700186 RESNORM=1.72279e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00143335 XNORM=3758.96 Flag=Ok
NEWTON STEP 11 XNORM=0.697217 RESNORM=1.59236e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00374685 XNORM=3894.03 Flag=Ok
NEWTON STEP 12 XNORM=0.696119 RESNORM=1.47146e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0336835 XNORM=4033.32 Flag=Ok
NEWTON STEP 13 XNORM=0.827086 RESNORM=1.37478e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0106366 XNORM=4176.02 Flag=Ok
NEWTON STEP 14 XNORM=0.674387 RESNORM=1.27487e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00241678 XNORM=4323.98 Flag=Ok
NEWTON STEP 15 XNORM=0.673832 RESNORM=1.17715e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00207178 XNORM=4476.47 Flag=Ok
NEWTON STEP 16 XNORM=0.673278 RESNORM=1.08688e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00197295 XNORM=4633.51 Flag=Ok
NEWTON STEP 17 XNORM=0.671948 RESNORM=1.00348e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00200363 XNORM=4795.18 Flag=Ok
NEWTON STEP 18 XNORM=0.670376 RESNORM=9.2639e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0021317 XNORM=4961.55 Flag=Ok
NEWTON STEP 19 XNORM=0.668709 RESNORM=8.55164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00238395 XNORM=5132.69 Flag=Ok
NEWTON STEP 20 XNORM=0.667028 RESNORM=7.89431e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00286725 XNORM=5308.64 Flag=Ok
NEWTON STEP 21 XNORM=0.665486 RESNORM=7.28949e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00389148 XNORM=5489.46 Flag=Ok
NEWTON STEP 22 XNORM=0.664527 RESNORM=6.73885e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00645055 XNORM=5675.14 Flag=Ok
NEWTON STEP 23 XNORM=0.665891 RESNORM=6.26295e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0309835 XNORM=5865.54 Flag=Ok
NEWTON STEP 24 XNORM=0.665022 RESNORM=6.08162e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00368498 XNORM=6054.09 Flag=Ok
NEWTON STEP 25 XNORM=0.647354 RESNORM=5.57299e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00907884 XNORM=6254.68 Flag=Ok
NEWTON STEP 26 XNORM=0.645873 RESNORM=5.20144e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0170611 XNORM=6459.93 Flag=Ok
NEWTON STEP 27 XNORM=0.789452 RESNORM=5.14591e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00302535 XNORM=6667.02 Flag=Ok
NEWTON STEP 28 XNORM=0.641641 RESNORM=4.77375e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0030556 XNORM=6882.72 Flag=Ok
NEWTON STEP 29 XNORM=0.640097 RESNORM=4.35557e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00324249 XNORM=7103.46 Flag=Ok
NEWTON STEP 30 XNORM=0.638461 RESNORM=3.96598e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00359026 XNORM=7329.15 Flag=Ok
NEWTON STEP 31 XNORM=0.636901 RESNORM=3.60628e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00412093 XNORM=7559.69 Flag=Ok
NEWTON STEP 32 XNORM=0.6357 RESNORM=3.28164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00486636 XNORM=7794.92 Flag=Ok
NEWTON STEP 33 XNORM=0.63533 RESNORM=3.00428e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00592924 XNORM=8034.55 Flag=Ok
NEWTON STEP 34 XNORM=0.636371 RESNORM=2.79911e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00801579 XNORM=8278.09 Flag=Ok
NEWTON STEP 35 XNORM=0.639623 RESNORM=2.73024e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0190889 XNORM=8524.1 Flag=Ok
NEWTON STEP 36 XNORM=0.659803 RESNORM=3.31292e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0172219 XNORM=8755.15 Flag=Ok
NEWTON STEP 37 XNORM=0.626935 RESNORM=3.84688e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00586394 XNORM=9001.83 Flag=Ok
NEWTON STEP 38 XNORM=0.620434 RESNORM=3.58469e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0048816 XNORM=9263.89 Flag=Ok
NEWTON STEP 39 XNORM=0.623912 RESNORM=3.32411e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00753529 XNORM=9531.41 Flag=Ok
NEWTON STEP 40 XNORM=0.626828 RESNORM=2.94281e+07 Lanczos/DInv
RMS Spatial Errors   0.012430
DO_NEXTSTAGE pde 0x11b88cc00  MAXSTAGE=0

================================================================
===  FlexPDE Version 7.21/OSXm  12:20:20 Dec  9 2022  Copyright (c) 1996-2020 PDE Solutions Inc.
===  /Users/nhanguyen/Downloads/MiniProject/Mini_Project_Model.pde 01:11:16 6/18/23
================================================================
    1| { Fill in the following sections (removing comment marks ! if necessary),
    2|   and delete those that are unused.}
    3| TITLE 'Part A Mid-Term Mini-Project'     { the problem identification }
    4| COORDINATES cartesian2  { coordinate system, 1D,2D,3D, etc }
    5| VARIABLES        { system variables }
    6|   A              { choose your own names }
    7| Global Variables
    8| Jcoil
    9| SELECT         { method controls }
   10| Threads = 4
   11| Initial Values
   12| Jcoil = 1e7
   13| DEFINITIONS    { parameter definitions }
   14| #include"input.pde"
    2| Alpha3=0.191888888889
    3| Alpha2=0.191888888889
    4| Alpha6=0.418666666667
   15| 
   16| B = curl(A)
   17| Bm = magnitude(B)
   18| Mu0 = 4*pi*1e-7
   19| Muiron = 1 + 1507 * exp(-(abs(Bm / 1.443) ^ 3.725))
   20| Jc = table('Bmax.tbl')
   21| J = 0
   22| 
   23| !Creating a degree 
   24| Converttorad = 2 * pi / 360
   25| 
   26| mu=mu0
   27| !Radii in meters
   28| Rii = .025
   29| Rio = .0425
   30| Roo = .0602
   31| Rair = 4 * Roo
   32| Rbeam = .018
   33| 
   34| !Angles in radians
   35| A1 = 15 * Converttorad
   36| A2 = 15 * Converttorad
   37| A3 = 10 * Converttorad
   38| A4 = 5 * Converttorad
   39| A5 = 20 * Converttorad
   40| A6 = 25 * Converttorad
   41| !Alpha2 = 5 * Converttorad
   42| !Alpha3 = 5 * Converttorad
   43| !Alpha4 = 5 * Converttorad
   44| !Alpha6 = 5 * Converttorad
   45| 
   46| !Lorentz Forces in coils
   47| L = 10 !coil length in meters
   48| Area = 950e-6 !m^2 of coils
   49| Jvec = vector(0,0,J)
   50| F=Area*L*cross(Jvec,B)
   51| 
   52| !B field calculations
   53| B1 = 0
   54| B2 = 100
   55| Bmax = globalmax(B1)
   56| Bmin = globalmin(B2)
   57| dB = (Bmax - Bmin) / Bmax
   58| 
   59| Of = .7
   60| Ff = .6
   61| Objective=(Jc*of*ff-Jcoil)/Jcoil
   62| 
   63| !Determining alignment with respect to x (ideal is when B_x = 0 everywhere)
   64| B_x= abs(xcomp(Bm))
   65| Alignment=globalmax(B_x)
   66| 
   67| ! INITIAL VALUES
   68| EQUATIONS        { PDE's, one for each variable }
   69| A: curl(1/mu*curl(A))=J
   70| Jcoil: Objective=0
   71| 
   72| 
   73| ! CONSTRAINTS    { Integral constraints }
   74| BOUNDARIES       { The domain definition }
   75| REGION 1 "air"
   76| START(0,0) value(A) = 0  { Walk the domain boundary }
   77| LINE TO (0,Rair) value(A) = 0
   78| ARC(CENTER = 0,0) Angle = -90 natural(A) = 0
   79| line to close
   80| 
   81| Region 2 "Backiron"
   82| Mu = mu0*Muiron
   83| Start(1.5 * Roo,0)
   84| Line to (3 * Roo, 0)
   85| Arc(center = 0,0) to (0, 3 * Roo)
   86| Line to (0, 1.5 * Roo)
   87| Arc(center = 0,0) to close
   88| 
   89| Region 3 "Saddle Coils"
   90| J = Jcoil
   91| !Coil 1:
   92| Start(Rii,0) Line to (Rio,0)
   93| Arc(Center = 0,0) to (Rio * cos(A1),Rio * sin(A1))
   94| Line to (Rii * cos(A1),Rii * sin(A1))
   95| Arc(Center = 0,0) To Close
   96| 
   97| !Coil 2:
   98| Start(Rii * cos(A1 + Alpha2),Rii * sin(A1 + Alpha2))
   99| Line to (Rio * cos(A1 + Alpha2), Rio * sin(A1 + Alpha2))
  100| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2), Rio * sin(A1 + A2 + Alpha2))
  101| Line to (Rii * cos(A1 + A2 + Alpha2), Rii * sin(A1 + A2 + Alpha2))
  102| Arc(Center = 0,0) to close
  103| 
  104| !Coil3:
  105| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3),Rii * sin(A1 + Alpha2 + A2 + Alpha3))
  106| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3), Rio * sin(A1 + Alpha2 + A2 + Alpha3))
  107| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  108| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  109| Arc(Center = 0,0) to close
  110| 
  111| !Coil4:
  112| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4),Rii * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  113| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4), Rio * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  114| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  115| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  116| Arc(Center = 0,0) to close
  117| 
  118| 
  119| !Coil5:
  120| Start(Rio,0)
  121| Line to (Roo,0)
  122| Arc(Center = 0,0) To (Roo * cos(A5), Roo * sin(A5))
  123| Line to (Rio * cos(A5), Rio * sin(A5))
  124| Arc(Center = 0,0) to close
  125| 
  126| !Coil6:
  127| Start(Rio * cos(A5 + Alpha6), Rio * sin(A5 + Alpha6))
  128| Line to (Roo * cos(A5 + Alpha6), Roo * sin(A5 + Alpha6))
  129| Arc(Center = 0,0) to (Roo * cos(A5 + Alpha6 + A6), Roo * sin(A5 + Alpha6 + A6))
  130| Line to (Rio * cos(A5 + Alpha6 + A6), Rio * sin(A5 + Alpha6 + A6))
  131| Arc(Center = 0,0) to close
  132| 
  133| Region 4 "Beam Area"
  134| B1 = Bm
  135| B2 = Bm
  136| Start(0,0)
  137| Line to (0,Rbeam)
  138| Arc(Center = 0,0) Angle = -90
  139| line to close
  140| 
  141| ! TIME 0 TO 1    { if time dependent }
  142| MONITORS         { show progress }
  143| PLOTS            { save result displays }
  144| CONTOUR(A)
  145| Contour(Bm) on "Beam Area" painted
  146| Vector(B)
  147| Contour(Mu) painted
  148| Vector(F) on "Saddle Coils"
  149| 
  150| Summary
  151| export file = "Output.txt"
  152| Report(Bmax) !as "Bmax in beam area"
  153| Report(Bmin) !as "Bmin in beam area"
  154| Report(dB) !as "dB in beam area"
  155| !Report(B_x)
  156| Report(Alignment) 
  157| 
  158| !Report(globalmin(Mu0)) as "Mu0 min"
  159| !Report(globalmax(Mu0)) as "Mu0 max"
  160| !Report(globalmax_X(Mu0))
  161| !Report(globalmax_Y(Mu0))
  162| END
Uorder=3
 A order=3
STUDENT VERSION SETS GROW2=0.35 GRIDARC=30
IMPORTMESH(0) NDIM=2 NB=10 NAB=3 NODES=172 CELLS=298 SIDES=469 LEGS=0 imaging=0 time(0)=0
MESH IMPORT ABORTED: Different GRID2D
Transferred mesh does not match local domain!
(Boundary descriptions must match exactly.)

==========================
 SUMMARIZE PARAMETERS
==========================
 Param         name     Type       Domain               Definition
-------------------------------------------------------------------
     1       ALPHA4   Scalar      (GLOBAL)               :  0.34889
                                             [1]=>  0.34889
     2       ALPHA3   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     3       ALPHA2   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     4       ALPHA6   Scalar      (GLOBAL)               :  0.41867
                                             [1]=>  0.41867
     5            B   Vector      (GLOBAL)               : Vector(DY(A),-(DX(A)),0)
                                             [5]=> Vector(A.Y,-(A.X),0)
     6           BM   Scalar      (GLOBAL)               : Sqrt(Sqr(DY(A))+Sqr(DX(A)))
                                             [6]=> Sqrt(Sqr(A.Y)+Sqr(A.X))
     7          MU0   Scalar      (GLOBAL)               :  1.26e-6
                                             [1]=>  1.26e-6
     8       MUIRON   Scalar      (GLOBAL)               : 1+(1507*Exp(-(Abs(BM* 0.69300)^ 3.72500)))
                                             [17]=> 1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))
     9           JC   Scalar      (GLOBAL)               : Table#1
                                             [1]=> Table#1
    10            J   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   3)           : JCOIL
    11 CONVERTTORAD   Scalar      (GLOBAL)               :  0.01745
                                             [1]=>  0.01745
    12           MU   Scalar      (GLOBAL)               : MU0
                                             [1]=>  1.26e-6
                                  (REGION   2)           : MU0*MUIRON
    13          RII   Scalar      (GLOBAL)               :  0.02500
                                             [1]=>  0.02500
    14          RIO   Scalar      (GLOBAL)               :  0.04250
                                             [1]=>  0.04250
    15          ROO   Scalar      (GLOBAL)               :  0.06020
                                             [1]=>  0.06020
    16         RAIR   Scalar      (GLOBAL)               : 4*ROO
                                             [1]=>  0.24080
    17        RBEAM   Scalar      (GLOBAL)               :  0.01800
                                             [1]=>  0.01800
    18           A1   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    19           A2   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    20           A3   Scalar      (GLOBAL)               : 10*CONVERTTORAD
                                             [1]=>  0.17453
    21           A4   Scalar      (GLOBAL)               : 5*CONVERTTORAD
                                             [1]=>  0.08727
    22           A5   Scalar      (GLOBAL)               : 20*CONVERTTORAD
                                             [1]=>  0.34907
    23           A6   Scalar      (GLOBAL)               : 25*CONVERTTORAD
                                             [1]=>  0.43633
    24            L   Scalar      (GLOBAL)               : 10
                                             [1]=> 10
    25         AREA   Scalar      (GLOBAL)               :  9.50e-4
                                             [1]=>  9.50e-4
    26         JVEC   Vector      (GLOBAL)               : Vector(0,0,J)
                                             [1]=> V(0,0,0)
    27            F   Scalar      (GLOBAL)               : (AREA*L)*((JVEC)<x>(B))
                                             [1]=> V(0,0,0)
    28           B1   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   4)           : BM
    29           B2   Scalar      (GLOBAL)               : 100
                                             [1]=> 100
                                  (REGION   4)           : BM
    30         BMAX   Scalar      (GLOBAL)               : Gmax#1
                                             [1]=> Gmax#1
    31         BMIN   Scalar      (GLOBAL)               : Gmin#2
                                             [1]=> Gmin#2
    32           DB   Scalar      (GLOBAL)               : (BMAX-BMIN)/BMAX
                                             [5]=> (Gmax#1-Gmin#2)/Gmax#1
    33           OF   Scalar      (GLOBAL)               :  0.70000
                                             [1]=>  0.70000
    34           FF   Scalar      (GLOBAL)               :  0.60000
                                             [1]=>  0.60000
    35    OBJECTIVE   Scalar      (GLOBAL)               : (((JC*OF)*FF)-JCOIL)/JCOIL
                                             [7]=> ((Table#1* 0.42000)-JCOIL)/JCOIL
    36          B_X   Scalar      (GLOBAL)               : Abs(Xcomp(BM))
                                             [8]=> Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
    37    ALIGNMENT   Scalar      (GLOBAL)               : Gmax#3
                                             [1]=> Gmax#3



==========================
SUMMARIZE EQUATIONS
==========================
In the following equation definitions
Derivatives are represented by appending a dot and the differentiated coordinate.
The operator <V> represents volume integration. <Vb> is weighted by basis function.
<Vu> is weighted by the upwind modifer. <Vbu> is weighted by both.
A dotted volume integral represents volume integration weighted by the indicated
derivative of the basis function. 'Beta' represents a basis function.
The operator <S>.c represents surface integration weighted by the indicated
direction cosine.

            DEFINES     REGION/     DEPENDS                      BASE          CSE
 EQUATION     VAR    COMPARTMENT      VAR         FUNCTION     COMPLEXITY   COMPLEXITY     MEMORY  DEFINITION
-----------------------------------------------------------------------------------------------------------

PRIMARY EQUATIONS
     1          A                            Field Equation                                      : (CURL((1/MU)*(CURL(A))))-J
                           1                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           2                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin        266           45         3600 : (<Vb>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<Vb>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))
                                        A    Space Jacobian       1782          221        17680 : (<Vb>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<Vb>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                           Surface Galerkin         46           46         3680 : -((<S>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<S>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                        A  Surface Jacobian        222          222        17760 : -((<S>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<S>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))))
                           3                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         21           12          960 : ((<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X)))-(<Vb>(JCOIL))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                    JCOIL    Space Jacobian          3            3          240 : -(<Vb>(1))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           4                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
     2      JCOIL                           Global Equation                                      : OBJECTIVE-0
                                             Space Galerkin          0            7          560 : ((Table#1* 0.42000)-JCOIL)/JCOIL
                                    JCOIL    Space Jacobian         10           13         1040 : (-1/(def#15(JCOIL)))-(((Table#1* 0.42000)-(ref#15))/Sqr(ref#15))
                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null
EQUATION 1 PARAMETER DEPENDENCIES:
           BM          MU0       MUIRON            J           MU

========================================================
     SUMMARIZE BOUNDARY CONDITIONS
========================================================

BOUNDARY CONDITION TAGS with associated BC INDEX
BC TAG   1:BC   1 val(A)  nat(0)
BC TAG   2:BC   2 nat(A)  nat(0)

    BC  KIND     DEFINES   COMPARTMENT     DEPENDS     FUNCTION     COMPLEXITY    MEMORY    DEFINITION
-----------------------------------------------------------------------------------------------------
     1   VAL          A            1                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            2                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            3                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
     2   NAT          A            1                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            2                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            3                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            4                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0

================================
SUMMARIZE FITS AND INTEGRALS
=================================
                             REGION/       BASE        CSE
    FIT         KIND       COMPARTMENT  COMPLEXITY  COMPLEXITY  MEMORY  DEFINITION
-----------------------------------------------------------------------------------------
     1            GlobalMax       1           6          6        480     : 0
     1            GlobalMax       2           6          6        480     : 0
     1            GlobalMax       3           6          6        480     : 0
     1            GlobalMax       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     2            GlobalMin       1           6          6        480     : 100
     2            GlobalMin       2           6          6        480     : 100
     2            GlobalMin       3           6          6        480     : 100
     2            GlobalMin       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3            GlobalMax       1           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       2           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       3           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       4           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))

===============================
  SUMMARIZE PLOTS
===============================
                      REGION/       BASE        CSE
  PLOT    TYPE     COMPARTMENT  COMPLEXITY  COMPLEXITY    MEMORY    DEFINITION
------------------------------------------------------------------------------
     1     CONTOUR          0          1          1           80  : A
     2     CONTOUR          0          6          6          480  : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3      VECTOR          0          5          5          400  : Vector(A.Y,-(A.X),0)
     4     CONTOUR          0          1          1           80  :  1.26e-6
     5      VECTOR          0          1          1           80  : V(0,0,0)

==UNUSED== PARAMETER DEFINITIONS:
 CONVERTTORAD B1 B2 B_X
Uorder=3
 A order=3
LOG Threads=4 Order=3 Speed=1 Stability=0
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=7.75732e-05 XNORM=16071.9 Flag=Ok
NEWTON STEP 1/40 NORM=1.33238e+07
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.001081 XNORM=19193.5 Flag=Ok
NEWTON STEP 2 XNORM=0.840843 RESNORM=3.31551e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00258919 XNORM=28051.3 Flag=Ok
NEWTON STEP 3 XNORM=0.757653 RESNORM=3.1024e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118371 XNORM=29116.4 Flag=Ok
NEWTON STEP 4 XNORM=0.74187 RESNORM=2.88054e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00115063 XNORM=30220.8 Flag=Ok
NEWTON STEP 5 XNORM=0.730512 RESNORM=2.67783e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118514 XNORM=31363.1 Flag=Ok
NEWTON STEP 6 XNORM=0.721665 RESNORM=2.49346e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00182193 XNORM=32544.2 Flag=Ok
NEWTON STEP 7 XNORM=0.714634 RESNORM=2.33296e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00116196 XNORM=33761.3 Flag=Ok
NEWTON STEP 8 XNORM=0.708791 RESNORM=2.16866e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00135903 XNORM=3502.63 Flag=Ok
NEWTON STEP 9 XNORM=0.703959 RESNORM=1.86392e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0012087 XNORM=3628.04 Flag=Ok
NEWTON STEP 10 XNORM=0.700186 RESNORM=1.72279e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00143335 XNORM=3758.96 Flag=Ok
NEWTON STEP 11 XNORM=0.697217 RESNORM=1.59236e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00374685 XNORM=3894.03 Flag=Ok
NEWTON STEP 12 XNORM=0.696119 RESNORM=1.47146e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0336835 XNORM=4033.32 Flag=Ok
NEWTON STEP 13 XNORM=0.827086 RESNORM=1.37478e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0106366 XNORM=4176.02 Flag=Ok
NEWTON STEP 14 XNORM=0.674387 RESNORM=1.27487e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00241678 XNORM=4323.98 Flag=Ok
NEWTON STEP 15 XNORM=0.673832 RESNORM=1.17715e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00207178 XNORM=4476.47 Flag=Ok
NEWTON STEP 16 XNORM=0.673278 RESNORM=1.08688e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00197295 XNORM=4633.51 Flag=Ok
NEWTON STEP 17 XNORM=0.671948 RESNORM=1.00348e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00200363 XNORM=4795.18 Flag=Ok
NEWTON STEP 18 XNORM=0.670376 RESNORM=9.2639e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0021317 XNORM=4961.55 Flag=Ok
NEWTON STEP 19 XNORM=0.668709 RESNORM=8.55164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00238395 XNORM=5132.69 Flag=Ok
NEWTON STEP 20 XNORM=0.667028 RESNORM=7.89431e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00286725 XNORM=5308.64 Flag=Ok
NEWTON STEP 21 XNORM=0.665486 RESNORM=7.28949e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00389148 XNORM=5489.46 Flag=Ok
NEWTON STEP 22 XNORM=0.664527 RESNORM=6.73885e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00645055 XNORM=5675.14 Flag=Ok
NEWTON STEP 23 XNORM=0.665891 RESNORM=6.26295e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0309835 XNORM=5865.54 Flag=Ok
NEWTON STEP 24 XNORM=0.665022 RESNORM=6.08162e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00368498 XNORM=6054.09 Flag=Ok
NEWTON STEP 25 XNORM=0.647354 RESNORM=5.57299e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00907884 XNORM=6254.68 Flag=Ok
NEWTON STEP 26 XNORM=0.645873 RESNORM=5.20144e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0170611 XNORM=6459.93 Flag=Ok
NEWTON STEP 27 XNORM=0.789451 RESNORM=5.14591e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00302535 XNORM=6667.02 Flag=Ok
NEWTON STEP 28 XNORM=0.641641 RESNORM=4.77375e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0030556 XNORM=6882.72 Flag=Ok
NEWTON STEP 29 XNORM=0.640097 RESNORM=4.35557e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00324249 XNORM=7103.46 Flag=Ok
NEWTON STEP 30 XNORM=0.638462 RESNORM=3.96598e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00359026 XNORM=7329.15 Flag=Ok
NEWTON STEP 31 XNORM=0.636901 RESNORM=3.60628e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00412093 XNORM=7559.69 Flag=Ok
NEWTON STEP 32 XNORM=0.6357 RESNORM=3.28164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00486637 XNORM=7794.92 Flag=Ok
NEWTON STEP 33 XNORM=0.63533 RESNORM=3.00428e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00592924 XNORM=8034.55 Flag=Ok
NEWTON STEP 34 XNORM=0.636371 RESNORM=2.79911e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0080158 XNORM=8278.09 Flag=Ok
NEWTON STEP 35 XNORM=0.639623 RESNORM=2.73024e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.019089 XNORM=8524.1 Flag=Ok
NEWTON STEP 36 XNORM=0.659804 RESNORM=3.31293e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0172221 XNORM=8755.15 Flag=Ok
NEWTON STEP 37 XNORM=0.626935 RESNORM=3.8469e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00586399 XNORM=9001.83 Flag=Ok
NEWTON STEP 38 XNORM=0.620434 RESNORM=3.58471e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0048815 XNORM=9263.89 Flag=Ok
NEWTON STEP 39 XNORM=0.623912 RESNORM=3.32414e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00753495 XNORM=9531.41 Flag=Ok
NEWTON STEP 40 XNORM=0.626827 RESNORM=2.94285e+07 Lanczos/DInv
RMS Spatial Errors   0.012430
DO_NEXTSTAGE pde 0x11b88cc00  MAXSTAGE=0

================================================================
===  FlexPDE Version 7.21/OSXm  12:20:20 Dec  9 2022  Copyright (c) 1996-2020 PDE Solutions Inc.
===  /Users/nhanguyen/Downloads/MiniProject/Mini_Project_Model.pde 01:14:22 6/18/23
================================================================
    1| { Fill in the following sections (removing comment marks ! if necessary),
    2|   and delete those that are unused.}
    3| TITLE 'Part A Mid-Term Mini-Project'     { the problem identification }
    4| COORDINATES cartesian2  { coordinate system, 1D,2D,3D, etc }
    5| VARIABLES        { system variables }
    6|   A              { choose your own names }
    7| Global Variables
    8| Jcoil
    9| SELECT         { method controls }
   10| Threads = 4
   11| Initial Values
   12| Jcoil = 1e7
   13| DEFINITIONS    { parameter definitions }
   14| #include"input.pde"
    2| Alpha3=0.191888888889
    3| Alpha2=0.191888888889
    4| Alpha6=0.418666666667
   15| 
   16| B = curl(A)
   17| Bm = magnitude(B)
   18| Mu0 = 4*pi*1e-7
   19| Muiron = 1 + 1507 * exp(-(abs(Bm / 1.443) ^ 3.725))
   20| Jc = table('Bmax.tbl')
   21| J = 0
   22| 
   23| !Creating a degree 
   24| Converttorad = 2 * pi / 360
   25| 
   26| mu=mu0
   27| !Radii in meters
   28| Rii = .025
   29| Rio = .0425
   30| Roo = .0602
   31| Rair = 4 * Roo
   32| Rbeam = .018
   33| 
   34| !Angles in radians
   35| A1 = 15 * Converttorad
   36| A2 = 15 * Converttorad
   37| A3 = 10 * Converttorad
   38| A4 = 5 * Converttorad
   39| A5 = 20 * Converttorad
   40| A6 = 25 * Converttorad
   41| !Alpha2 = 5 * Converttorad
   42| !Alpha3 = 5 * Converttorad
   43| !Alpha4 = 5 * Converttorad
   44| !Alpha6 = 5 * Converttorad
   45| 
   46| !Lorentz Forces in coils
   47| L = 10 !coil length in meters
   48| Area = 950e-6 !m^2 of coils
   49| Jvec = vector(0,0,J)
   50| F=Area*L*cross(Jvec,B)
   51| 
   52| !B field calculations
   53| B1 = 0
   54| B2 = 100
   55| Bmax = globalmax(B1)
   56| Bmin = globalmin(B2)
   57| dB = (Bmax - Bmin) / Bmax
   58| 
   59| Of = .7
   60| Ff = .6
   61| Objective=(Jc*of*ff-Jcoil)/Jcoil
   62| 
   63| !Determining alignment with respect to x (ideal is when B_x = 0 everywhere)
   64| B_x= abs(xcomp(Bm))
   65| Alignment=globalmax(B_x)
   66| 
   67| ! INITIAL VALUES
   68| EQUATIONS        { PDE's, one for each variable }
   69| A: curl(1/mu*curl(A))=J
   70| Jcoil: Objective=0
   71| 
   72| 
   73| ! CONSTRAINTS    { Integral constraints }
   74| BOUNDARIES       { The domain definition }
   75| REGION 1 "air"
   76| START(0,0) value(A) = 0  { Walk the domain boundary }
   77| LINE TO (0,Rair) value(A) = 0
   78| ARC(CENTER = 0,0) Angle = -90 natural(A) = 0
   79| line to close
   80| 
   81| Region 2 "Backiron"
   82| Mu = mu0*Muiron
   83| Start(1.5 * Roo,0)
   84| Line to (3 * Roo, 0)
   85| Arc(center = 0,0) to (0, 3 * Roo)
   86| Line to (0, 1.5 * Roo)
   87| Arc(center = 0,0) to close
   88| 
   89| Region 3 "Saddle Coils"
   90| J = Jcoil
   91| !Coil 1:
   92| Start(Rii,0) Line to (Rio,0)
   93| Arc(Center = 0,0) to (Rio * cos(A1),Rio * sin(A1))
   94| Line to (Rii * cos(A1),Rii * sin(A1))
   95| Arc(Center = 0,0) To Close
   96| 
   97| !Coil 2:
   98| Start(Rii * cos(A1 + Alpha2),Rii * sin(A1 + Alpha2))
   99| Line to (Rio * cos(A1 + Alpha2), Rio * sin(A1 + Alpha2))
  100| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2), Rio * sin(A1 + A2 + Alpha2))
  101| Line to (Rii * cos(A1 + A2 + Alpha2), Rii * sin(A1 + A2 + Alpha2))
  102| Arc(Center = 0,0) to close
  103| 
  104| !Coil3:
  105| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3),Rii * sin(A1 + Alpha2 + A2 + Alpha3))
  106| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3), Rio * sin(A1 + Alpha2 + A2 + Alpha3))
  107| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  108| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  109| Arc(Center = 0,0) to close
  110| 
  111| !Coil4:
  112| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4),Rii * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  113| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4), Rio * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  114| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  115| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  116| Arc(Center = 0,0) to close
  117| 
  118| 
  119| !Coil5:
  120| Start(Rio,0)
  121| Line to (Roo,0)
  122| Arc(Center = 0,0) To (Roo * cos(A5), Roo * sin(A5))
  123| Line to (Rio * cos(A5), Rio * sin(A5))
  124| Arc(Center = 0,0) to close
  125| 
  126| !Coil6:
  127| Start(Rio * cos(A5 + Alpha6), Rio * sin(A5 + Alpha6))
  128| Line to (Roo * cos(A5 + Alpha6), Roo * sin(A5 + Alpha6))
  129| Arc(Center = 0,0) to (Roo * cos(A5 + Alpha6 + A6), Roo * sin(A5 + Alpha6 + A6))
  130| Line to (Rio * cos(A5 + Alpha6 + A6), Rio * sin(A5 + Alpha6 + A6))
  131| Arc(Center = 0,0) to close
  132| 
  133| Region 4 "Beam Area"
  134| B1 = Bm
  135| B2 = Bm
  136| Start(0,0)
  137| Line to (0,Rbeam)
  138| Arc(Center = 0,0) Angle = -90
  139| line to close
  140| 
  141| ! TIME 0 TO 1    { if time dependent }
  142| MONITORS         { show progress }
  143| PLOTS            { save result displays }
  144| CONTOUR(A)
  145| Contour(Bm) on "Beam Area" painted
  146| Vector(B)
  147| Contour(Mu) painted
  148| Vector(F) on "Saddle Coils"
  149| 
  150| Summary
  151| export file = "Output.txt"
  152| Report(Bmax) !as "Bmax in beam area"
  153| Report(Bmin) !as "Bmin in beam area"
  154| Report(dB) !as "dB in beam area"
  155| !Report(B_x)
  156| Report(Alignment) 
  157| 
  158| !Report(globalmin(Mu0)) as "Mu0 min"
  159| !Report(globalmax(Mu0)) as "Mu0 max"
  160| !Report(globalmax_X(Mu0))
  161| !Report(globalmax_Y(Mu0))
  162| END
Uorder=3
 A order=3
STUDENT VERSION SETS GROW2=0.35 GRIDARC=30
IMPORTMESH(0) NDIM=2 NB=10 NAB=3 NODES=172 CELLS=298 SIDES=469 LEGS=0 imaging=0 time(0)=0
MESH IMPORT ABORTED: Different GRID2D
Transferred mesh does not match local domain!
(Boundary descriptions must match exactly.)

==========================
 SUMMARIZE PARAMETERS
==========================
 Param         name     Type       Domain               Definition
-------------------------------------------------------------------
     1       ALPHA4   Scalar      (GLOBAL)               :  0.34889
                                             [1]=>  0.34889
     2       ALPHA3   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     3       ALPHA2   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     4       ALPHA6   Scalar      (GLOBAL)               :  0.41867
                                             [1]=>  0.41867
     5            B   Vector      (GLOBAL)               : Vector(DY(A),-(DX(A)),0)
                                             [5]=> Vector(A.Y,-(A.X),0)
     6           BM   Scalar      (GLOBAL)               : Sqrt(Sqr(DY(A))+Sqr(DX(A)))
                                             [6]=> Sqrt(Sqr(A.Y)+Sqr(A.X))
     7          MU0   Scalar      (GLOBAL)               :  1.26e-6
                                             [1]=>  1.26e-6
     8       MUIRON   Scalar      (GLOBAL)               : 1+(1507*Exp(-(Abs(BM* 0.69300)^ 3.72500)))
                                             [17]=> 1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))
     9           JC   Scalar      (GLOBAL)               : Table#1
                                             [1]=> Table#1
    10            J   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   3)           : JCOIL
    11 CONVERTTORAD   Scalar      (GLOBAL)               :  0.01745
                                             [1]=>  0.01745
    12           MU   Scalar      (GLOBAL)               : MU0
                                             [1]=>  1.26e-6
                                  (REGION   2)           : MU0*MUIRON
    13          RII   Scalar      (GLOBAL)               :  0.02500
                                             [1]=>  0.02500
    14          RIO   Scalar      (GLOBAL)               :  0.04250
                                             [1]=>  0.04250
    15          ROO   Scalar      (GLOBAL)               :  0.06020
                                             [1]=>  0.06020
    16         RAIR   Scalar      (GLOBAL)               : 4*ROO
                                             [1]=>  0.24080
    17        RBEAM   Scalar      (GLOBAL)               :  0.01800
                                             [1]=>  0.01800
    18           A1   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    19           A2   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    20           A3   Scalar      (GLOBAL)               : 10*CONVERTTORAD
                                             [1]=>  0.17453
    21           A4   Scalar      (GLOBAL)               : 5*CONVERTTORAD
                                             [1]=>  0.08727
    22           A5   Scalar      (GLOBAL)               : 20*CONVERTTORAD
                                             [1]=>  0.34907
    23           A6   Scalar      (GLOBAL)               : 25*CONVERTTORAD
                                             [1]=>  0.43633
    24            L   Scalar      (GLOBAL)               : 10
                                             [1]=> 10
    25         AREA   Scalar      (GLOBAL)               :  9.50e-4
                                             [1]=>  9.50e-4
    26         JVEC   Vector      (GLOBAL)               : Vector(0,0,J)
                                             [1]=> V(0,0,0)
    27            F   Scalar      (GLOBAL)               : (AREA*L)*((JVEC)<x>(B))
                                             [1]=> V(0,0,0)
    28           B1   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   4)           : BM
    29           B2   Scalar      (GLOBAL)               : 100
                                             [1]=> 100
                                  (REGION   4)           : BM
    30         BMAX   Scalar      (GLOBAL)               : Gmax#1
                                             [1]=> Gmax#1
    31         BMIN   Scalar      (GLOBAL)               : Gmin#2
                                             [1]=> Gmin#2
    32           DB   Scalar      (GLOBAL)               : (BMAX-BMIN)/BMAX
                                             [5]=> (Gmax#1-Gmin#2)/Gmax#1
    33           OF   Scalar      (GLOBAL)               :  0.70000
                                             [1]=>  0.70000
    34           FF   Scalar      (GLOBAL)               :  0.60000
                                             [1]=>  0.60000
    35    OBJECTIVE   Scalar      (GLOBAL)               : (((JC*OF)*FF)-JCOIL)/JCOIL
                                             [7]=> ((Table#1* 0.42000)-JCOIL)/JCOIL
    36          B_X   Scalar      (GLOBAL)               : Abs(Xcomp(BM))
                                             [8]=> Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
    37    ALIGNMENT   Scalar      (GLOBAL)               : Gmax#3
                                             [1]=> Gmax#3



==========================
SUMMARIZE EQUATIONS
==========================
In the following equation definitions
Derivatives are represented by appending a dot and the differentiated coordinate.
The operator <V> represents volume integration. <Vb> is weighted by basis function.
<Vu> is weighted by the upwind modifer. <Vbu> is weighted by both.
A dotted volume integral represents volume integration weighted by the indicated
derivative of the basis function. 'Beta' represents a basis function.
The operator <S>.c represents surface integration weighted by the indicated
direction cosine.

            DEFINES     REGION/     DEPENDS                      BASE          CSE
 EQUATION     VAR    COMPARTMENT      VAR         FUNCTION     COMPLEXITY   COMPLEXITY     MEMORY  DEFINITION
-----------------------------------------------------------------------------------------------------------

PRIMARY EQUATIONS
     1          A                            Field Equation                                      : (CURL((1/MU)*(CURL(A))))-J
                           1                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           2                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin        266           45         3600 : (<Vb>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<Vb>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))
                                        A    Space Jacobian       1782          221        17680 : (<Vb>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<Vb>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                           Surface Galerkin         46           46         3680 : -((<S>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<S>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                        A  Surface Jacobian        222          222        17760 : -((<S>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<S>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))))
                           3                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         21           12          960 : ((<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X)))-(<Vb>(JCOIL))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                    JCOIL    Space Jacobian          3            3          240 : -(<Vb>(1))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           4                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
     2      JCOIL                           Global Equation                                      : OBJECTIVE-0
                                             Space Galerkin          0            7          560 : ((Table#1* 0.42000)-JCOIL)/JCOIL
                                    JCOIL    Space Jacobian         10           13         1040 : (-1/(def#15(JCOIL)))-(((Table#1* 0.42000)-(ref#15))/Sqr(ref#15))
                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null
EQUATION 1 PARAMETER DEPENDENCIES:
           BM          MU0       MUIRON            J           MU

========================================================
     SUMMARIZE BOUNDARY CONDITIONS
========================================================

BOUNDARY CONDITION TAGS with associated BC INDEX
BC TAG   1:BC   1 val(A)  nat(0)
BC TAG   2:BC   2 nat(A)  nat(0)

    BC  KIND     DEFINES   COMPARTMENT     DEPENDS     FUNCTION     COMPLEXITY    MEMORY    DEFINITION
-----------------------------------------------------------------------------------------------------
     1   VAL          A            1                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            2                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            3                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
     2   NAT          A            1                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            2                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            3                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            4                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0

================================
SUMMARIZE FITS AND INTEGRALS
=================================
                             REGION/       BASE        CSE
    FIT         KIND       COMPARTMENT  COMPLEXITY  COMPLEXITY  MEMORY  DEFINITION
-----------------------------------------------------------------------------------------
     1            GlobalMax       1           6          6        480     : 0
     1            GlobalMax       2           6          6        480     : 0
     1            GlobalMax       3           6          6        480     : 0
     1            GlobalMax       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     2            GlobalMin       1           6          6        480     : 100
     2            GlobalMin       2           6          6        480     : 100
     2            GlobalMin       3           6          6        480     : 100
     2            GlobalMin       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3            GlobalMax       1           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       2           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       3           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       4           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))

===============================
  SUMMARIZE PLOTS
===============================
                      REGION/       BASE        CSE
  PLOT    TYPE     COMPARTMENT  COMPLEXITY  COMPLEXITY    MEMORY    DEFINITION
------------------------------------------------------------------------------
     1     CONTOUR          0          1          1           80  : A
     2     CONTOUR          0          6          6          480  : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3      VECTOR          0          5          5          400  : Vector(A.Y,-(A.X),0)
     4     CONTOUR          0          1          1           80  :  1.26e-6
     5      VECTOR          0          1          1           80  : V(0,0,0)

==UNUSED== PARAMETER DEFINITIONS:
 CONVERTTORAD B1 B2 B_X
Uorder=3
 A order=3
LOG Threads=4 Order=3 Speed=1 Stability=0
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=7.75732e-05 XNORM=16071.9 Flag=Ok
NEWTON STEP 1/40 NORM=1.33238e+07
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.001081 XNORM=19193.5 Flag=Ok
NEWTON STEP 2 XNORM=0.840843 RESNORM=3.31551e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00258919 XNORM=28051.3 Flag=Ok
NEWTON STEP 3 XNORM=0.757653 RESNORM=3.1024e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118371 XNORM=29116.4 Flag=Ok
NEWTON STEP 4 XNORM=0.74187 RESNORM=2.88054e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00115063 XNORM=30220.8 Flag=Ok
NEWTON STEP 5 XNORM=0.730512 RESNORM=2.67783e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118514 XNORM=31363.1 Flag=Ok
NEWTON STEP 6 XNORM=0.721665 RESNORM=2.49346e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00182193 XNORM=32544.2 Flag=Ok
NEWTON STEP 7 XNORM=0.714634 RESNORM=2.33296e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00116196 XNORM=33761.3 Flag=Ok
NEWTON STEP 8 XNORM=0.708791 RESNORM=2.16866e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00135903 XNORM=3502.63 Flag=Ok
NEWTON STEP 9 XNORM=0.703959 RESNORM=1.86392e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0012087 XNORM=3628.04 Flag=Ok
NEWTON STEP 10 XNORM=0.700186 RESNORM=1.72279e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00143335 XNORM=3758.96 Flag=Ok
NEWTON STEP 11 XNORM=0.697217 RESNORM=1.59236e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00374685 XNORM=3894.03 Flag=Ok
NEWTON STEP 12 XNORM=0.696119 RESNORM=1.47146e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0336835 XNORM=4033.32 Flag=Ok
NEWTON STEP 13 XNORM=0.827086 RESNORM=1.37478e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0106366 XNORM=4176.02 Flag=Ok
NEWTON STEP 14 XNORM=0.674387 RESNORM=1.27487e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00241678 XNORM=4323.98 Flag=Ok
NEWTON STEP 15 XNORM=0.673832 RESNORM=1.17715e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00207178 XNORM=4476.47 Flag=Ok
NEWTON STEP 16 XNORM=0.673278 RESNORM=1.08688e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00197295 XNORM=4633.51 Flag=Ok
NEWTON STEP 17 XNORM=0.671948 RESNORM=1.00348e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00200363 XNORM=4795.18 Flag=Ok
NEWTON STEP 18 XNORM=0.670376 RESNORM=9.2639e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0021317 XNORM=4961.55 Flag=Ok
NEWTON STEP 19 XNORM=0.668709 RESNORM=8.55164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00238395 XNORM=5132.69 Flag=Ok
NEWTON STEP 20 XNORM=0.667028 RESNORM=7.89431e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00286725 XNORM=5308.64 Flag=Ok
NEWTON STEP 21 XNORM=0.665486 RESNORM=7.28949e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00389148 XNORM=5489.46 Flag=Ok
NEWTON STEP 22 XNORM=0.664527 RESNORM=6.73885e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00645055 XNORM=5675.14 Flag=Ok
NEWTON STEP 23 XNORM=0.665891 RESNORM=6.26295e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0309835 XNORM=5865.54 Flag=Ok
NEWTON STEP 24 XNORM=0.665022 RESNORM=6.08162e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00368498 XNORM=6054.09 Flag=Ok
NEWTON STEP 25 XNORM=0.647354 RESNORM=5.57299e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00907884 XNORM=6254.68 Flag=Ok
NEWTON STEP 26 XNORM=0.645873 RESNORM=5.20144e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0170611 XNORM=6459.93 Flag=Ok
NEWTON STEP 27 XNORM=0.789452 RESNORM=5.14591e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00302535 XNORM=6667.02 Flag=Ok
NEWTON STEP 28 XNORM=0.641641 RESNORM=4.77375e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0030556 XNORM=6882.72 Flag=Ok
NEWTON STEP 29 XNORM=0.640097 RESNORM=4.35558e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00324249 XNORM=7103.46 Flag=Ok
NEWTON STEP 30 XNORM=0.638461 RESNORM=3.96598e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00359026 XNORM=7329.15 Flag=Ok
NEWTON STEP 31 XNORM=0.636901 RESNORM=3.60628e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00412092 XNORM=7559.69 Flag=Ok
NEWTON STEP 32 XNORM=0.6357 RESNORM=3.28164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00486636 XNORM=7794.92 Flag=Ok
NEWTON STEP 33 XNORM=0.63533 RESNORM=3.00428e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00592923 XNORM=8034.55 Flag=Ok
NEWTON STEP 34 XNORM=0.636371 RESNORM=2.79911e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00801577 XNORM=8278.09 Flag=Ok
NEWTON STEP 35 XNORM=0.639623 RESNORM=2.73024e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0190886 XNORM=8524.1 Flag=Ok
NEWTON STEP 36 XNORM=0.659803 RESNORM=3.31291e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0172216 XNORM=8755.15 Flag=Ok
NEWTON STEP 37 XNORM=0.626934 RESNORM=3.84685e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00586387 XNORM=9001.84 Flag=Ok
NEWTON STEP 38 XNORM=0.620434 RESNORM=3.58465e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00488177 XNORM=9263.89 Flag=Ok
NEWTON STEP 39 XNORM=0.623912 RESNORM=3.32407e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00753583 XNORM=9531.41 Flag=Ok
NEWTON STEP 40 XNORM=0.626829 RESNORM=2.94275e+07 Lanczos/DInv
RMS Spatial Errors   0.012430
DO_NEXTSTAGE pde 0x11b88cc00  MAXSTAGE=0

================================================================
===  FlexPDE Version 7.21/OSXm  12:20:20 Dec  9 2022  Copyright (c) 1996-2020 PDE Solutions Inc.
===  /Users/nhanguyen/Downloads/MiniProject/Mini_Project_Model.pde 01:16:18 6/18/23
================================================================
    1| { Fill in the following sections (removing comment marks ! if necessary),
    2|   and delete those that are unused.}
    3| TITLE 'Part A Mid-Term Mini-Project'     { the problem identification }
    4| COORDINATES cartesian2  { coordinate system, 1D,2D,3D, etc }
    5| VARIABLES        { system variables }
    6|   A              { choose your own names }
    7| Global Variables
    8| Jcoil
    9| SELECT         { method controls }
   10| Threads = 4
   11| Initial Values
   12| Jcoil = 1e7
   13| DEFINITIONS    { parameter definitions }
   14| #include"input.pde"
    2| Alpha3=0.191888888889
    3| Alpha2=0.191888888889
    4| Alpha6=0.418666666667
   15| 
   16| B = curl(A)
   17| Bm = magnitude(B)
   18| Mu0 = 4*pi*1e-7
   19| Muiron = 1 + 1507 * exp(-(abs(Bm / 1.443) ^ 3.725))
   20| Jc = table('Bmax.tbl')
   21| J = 0
   22| 
   23| !Creating a degree 
   24| Converttorad = 2 * pi / 360
   25| 
   26| mu=mu0
   27| !Radii in meters
   28| Rii = .025
   29| Rio = .0425
   30| Roo = .0602
   31| Rair = 4 * Roo
   32| Rbeam = .018
   33| 
   34| !Angles in radians
   35| A1 = 15 * Converttorad
   36| A2 = 15 * Converttorad
   37| A3 = 10 * Converttorad
   38| A4 = 5 * Converttorad
   39| A5 = 20 * Converttorad
   40| A6 = 25 * Converttorad
   41| !Alpha2 = 5 * Converttorad
   42| !Alpha3 = 5 * Converttorad
   43| !Alpha4 = 5 * Converttorad
   44| !Alpha6 = 5 * Converttorad
   45| 
   46| !Lorentz Forces in coils
   47| L = 10 !coil length in meters
   48| Area = 950e-6 !m^2 of coils
   49| Jvec = vector(0,0,J)
   50| F=Area*L*cross(Jvec,B)
   51| 
   52| !B field calculations
   53| B1 = 0
   54| B2 = 100
   55| Bmax = globalmax(B1)
   56| Bmin = globalmin(B2)
   57| dB = (Bmax - Bmin) / Bmax
   58| 
   59| Of = .7
   60| Ff = .6
   61| Objective=(Jc*of*ff-Jcoil)/Jcoil
   62| 
   63| !Determining alignment with respect to x (ideal is when B_x = 0 everywhere)
   64| B_x= abs(xcomp(Bm))
   65| Alignment=globalmax(B_x)
   66| 
   67| ! INITIAL VALUES
   68| EQUATIONS        { PDE's, one for each variable }
   69| A: curl(1/mu*curl(A))=J
   70| Jcoil: Objective=0
   71| 
   72| 
   73| ! CONSTRAINTS    { Integral constraints }
   74| BOUNDARIES       { The domain definition }
   75| REGION 1 "air"
   76| START(0,0) value(A) = 0  { Walk the domain boundary }
   77| LINE TO (0,Rair) value(A) = 0
   78| ARC(CENTER = 0,0) Angle = -90 natural(A) = 0
   79| line to close
   80| 
   81| Region 2 "Backiron"
   82| Mu = mu0*Muiron
   83| Start(1.5 * Roo,0)
   84| Line to (3 * Roo, 0)
   85| Arc(center = 0,0) to (0, 3 * Roo)
   86| Line to (0, 1.5 * Roo)
   87| Arc(center = 0,0) to close
   88| 
   89| Region 3 "Saddle Coils"
   90| J = Jcoil
   91| !Coil 1:
   92| Start(Rii,0) Line to (Rio,0)
   93| Arc(Center = 0,0) to (Rio * cos(A1),Rio * sin(A1))
   94| Line to (Rii * cos(A1),Rii * sin(A1))
   95| Arc(Center = 0,0) To Close
   96| 
   97| !Coil 2:
   98| Start(Rii * cos(A1 + Alpha2),Rii * sin(A1 + Alpha2))
   99| Line to (Rio * cos(A1 + Alpha2), Rio * sin(A1 + Alpha2))
  100| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2), Rio * sin(A1 + A2 + Alpha2))
  101| Line to (Rii * cos(A1 + A2 + Alpha2), Rii * sin(A1 + A2 + Alpha2))
  102| Arc(Center = 0,0) to close
  103| 
  104| !Coil3:
  105| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3),Rii * sin(A1 + Alpha2 + A2 + Alpha3))
  106| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3), Rio * sin(A1 + Alpha2 + A2 + Alpha3))
  107| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  108| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  109| Arc(Center = 0,0) to close
  110| 
  111| !Coil4:
  112| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4),Rii * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  113| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4), Rio * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  114| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  115| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  116| Arc(Center = 0,0) to close
  117| 
  118| 
  119| !Coil5:
  120| Start(Rio,0)
  121| Line to (Roo,0)
  122| Arc(Center = 0,0) To (Roo * cos(A5), Roo * sin(A5))
  123| Line to (Rio * cos(A5), Rio * sin(A5))
  124| Arc(Center = 0,0) to close
  125| 
  126| !Coil6:
  127| Start(Rio * cos(A5 + Alpha6), Rio * sin(A5 + Alpha6))
  128| Line to (Roo * cos(A5 + Alpha6), Roo * sin(A5 + Alpha6))
  129| Arc(Center = 0,0) to (Roo * cos(A5 + Alpha6 + A6), Roo * sin(A5 + Alpha6 + A6))
  130| Line to (Rio * cos(A5 + Alpha6 + A6), Rio * sin(A5 + Alpha6 + A6))
  131| Arc(Center = 0,0) to close
  132| 
  133| Region 4 "Beam Area"
  134| B1 = Bm
  135| B2 = Bm
  136| Start(0,0)
  137| Line to (0,Rbeam)
  138| Arc(Center = 0,0) Angle = -90
  139| line to close
  140| 
  141| ! TIME 0 TO 1    { if time dependent }
  142| MONITORS         { show progress }
  143| PLOTS            { save result displays }
  144| CONTOUR(A)
  145| Contour(Bm) on "Beam Area" painted
  146| Vector(B)
  147| Contour(Mu) painted
  148| Vector(F) on "Saddle Coils"
  149| 
  150| Summary
  151| export file = "Output.txt"
  152| Report(Bmax) !as "Bmax in beam area"
  153| Report(Bmin) !as "Bmin in beam area"
  154| Report(dB) !as "dB in beam area"
  155| !Report(B_x)
  156| Report(Alignment) 
  157| 
  158| !Report(globalmin(Mu0)) as "Mu0 min"
  159| !Report(globalmax(Mu0)) as "Mu0 max"
  160| !Report(globalmax_X(Mu0))
  161| !Report(globalmax_Y(Mu0))
  162| END
Uorder=3
 A order=3
STUDENT VERSION SETS GROW2=0.35 GRIDARC=30
IMPORTMESH(0) NDIM=2 NB=10 NAB=3 NODES=172 CELLS=298 SIDES=469 LEGS=0 imaging=0 time(0)=0
MESH IMPORT ABORTED: Different GRID2D
Transferred mesh does not match local domain!
(Boundary descriptions must match exactly.)

==========================
 SUMMARIZE PARAMETERS
==========================
 Param         name     Type       Domain               Definition
-------------------------------------------------------------------
     1       ALPHA4   Scalar      (GLOBAL)               :  0.34889
                                             [1]=>  0.34889
     2       ALPHA3   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     3       ALPHA2   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     4       ALPHA6   Scalar      (GLOBAL)               :  0.41867
                                             [1]=>  0.41867
     5            B   Vector      (GLOBAL)               : Vector(DY(A),-(DX(A)),0)
                                             [5]=> Vector(A.Y,-(A.X),0)
     6           BM   Scalar      (GLOBAL)               : Sqrt(Sqr(DY(A))+Sqr(DX(A)))
                                             [6]=> Sqrt(Sqr(A.Y)+Sqr(A.X))
     7          MU0   Scalar      (GLOBAL)               :  1.26e-6
                                             [1]=>  1.26e-6
     8       MUIRON   Scalar      (GLOBAL)               : 1+(1507*Exp(-(Abs(BM* 0.69300)^ 3.72500)))
                                             [17]=> 1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))
     9           JC   Scalar      (GLOBAL)               : Table#1
                                             [1]=> Table#1
    10            J   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   3)           : JCOIL
    11 CONVERTTORAD   Scalar      (GLOBAL)               :  0.01745
                                             [1]=>  0.01745
    12           MU   Scalar      (GLOBAL)               : MU0
                                             [1]=>  1.26e-6
                                  (REGION   2)           : MU0*MUIRON
    13          RII   Scalar      (GLOBAL)               :  0.02500
                                             [1]=>  0.02500
    14          RIO   Scalar      (GLOBAL)               :  0.04250
                                             [1]=>  0.04250
    15          ROO   Scalar      (GLOBAL)               :  0.06020
                                             [1]=>  0.06020
    16         RAIR   Scalar      (GLOBAL)               : 4*ROO
                                             [1]=>  0.24080
    17        RBEAM   Scalar      (GLOBAL)               :  0.01800
                                             [1]=>  0.01800
    18           A1   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    19           A2   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    20           A3   Scalar      (GLOBAL)               : 10*CONVERTTORAD
                                             [1]=>  0.17453
    21           A4   Scalar      (GLOBAL)               : 5*CONVERTTORAD
                                             [1]=>  0.08727
    22           A5   Scalar      (GLOBAL)               : 20*CONVERTTORAD
                                             [1]=>  0.34907
    23           A6   Scalar      (GLOBAL)               : 25*CONVERTTORAD
                                             [1]=>  0.43633
    24            L   Scalar      (GLOBAL)               : 10
                                             [1]=> 10
    25         AREA   Scalar      (GLOBAL)               :  9.50e-4
                                             [1]=>  9.50e-4
    26         JVEC   Vector      (GLOBAL)               : Vector(0,0,J)
                                             [1]=> V(0,0,0)
    27            F   Scalar      (GLOBAL)               : (AREA*L)*((JVEC)<x>(B))
                                             [1]=> V(0,0,0)
    28           B1   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   4)           : BM
    29           B2   Scalar      (GLOBAL)               : 100
                                             [1]=> 100
                                  (REGION   4)           : BM
    30         BMAX   Scalar      (GLOBAL)               : Gmax#1
                                             [1]=> Gmax#1
    31         BMIN   Scalar      (GLOBAL)               : Gmin#2
                                             [1]=> Gmin#2
    32           DB   Scalar      (GLOBAL)               : (BMAX-BMIN)/BMAX
                                             [5]=> (Gmax#1-Gmin#2)/Gmax#1
    33           OF   Scalar      (GLOBAL)               :  0.70000
                                             [1]=>  0.70000
    34           FF   Scalar      (GLOBAL)               :  0.60000
                                             [1]=>  0.60000
    35    OBJECTIVE   Scalar      (GLOBAL)               : (((JC*OF)*FF)-JCOIL)/JCOIL
                                             [7]=> ((Table#1* 0.42000)-JCOIL)/JCOIL
    36          B_X   Scalar      (GLOBAL)               : Abs(Xcomp(BM))
                                             [8]=> Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
    37    ALIGNMENT   Scalar      (GLOBAL)               : Gmax#3
                                             [1]=> Gmax#3



==========================
SUMMARIZE EQUATIONS
==========================
In the following equation definitions
Derivatives are represented by appending a dot and the differentiated coordinate.
The operator <V> represents volume integration. <Vb> is weighted by basis function.
<Vu> is weighted by the upwind modifer. <Vbu> is weighted by both.
A dotted volume integral represents volume integration weighted by the indicated
derivative of the basis function. 'Beta' represents a basis function.
The operator <S>.c represents surface integration weighted by the indicated
direction cosine.

            DEFINES     REGION/     DEPENDS                      BASE          CSE
 EQUATION     VAR    COMPARTMENT      VAR         FUNCTION     COMPLEXITY   COMPLEXITY     MEMORY  DEFINITION
-----------------------------------------------------------------------------------------------------------

PRIMARY EQUATIONS
     1          A                            Field Equation                                      : (CURL((1/MU)*(CURL(A))))-J
                           1                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           2                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin        266           45         3600 : (<Vb>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<Vb>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))
                                        A    Space Jacobian       1782          221        17680 : (<Vb>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<Vb>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                           Surface Galerkin         46           46         3680 : -((<S>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<S>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                        A  Surface Jacobian        222          222        17760 : -((<S>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<S>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))))
                           3                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         21           12          960 : ((<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X)))-(<Vb>(JCOIL))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                    JCOIL    Space Jacobian          3            3          240 : -(<Vb>(1))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           4                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
     2      JCOIL                           Global Equation                                      : OBJECTIVE-0
                                             Space Galerkin          0            7          560 : ((Table#1* 0.42000)-JCOIL)/JCOIL
                                    JCOIL    Space Jacobian         10           13         1040 : (-1/(def#15(JCOIL)))-(((Table#1* 0.42000)-(ref#15))/Sqr(ref#15))
                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null
EQUATION 1 PARAMETER DEPENDENCIES:
           BM          MU0       MUIRON            J           MU

========================================================
     SUMMARIZE BOUNDARY CONDITIONS
========================================================

BOUNDARY CONDITION TAGS with associated BC INDEX
BC TAG   1:BC   1 val(A)  nat(0)
BC TAG   2:BC   2 nat(A)  nat(0)

    BC  KIND     DEFINES   COMPARTMENT     DEPENDS     FUNCTION     COMPLEXITY    MEMORY    DEFINITION
-----------------------------------------------------------------------------------------------------
     1   VAL          A            1                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            2                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            3                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
     2   NAT          A            1                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            2                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            3                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            4                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0

================================
SUMMARIZE FITS AND INTEGRALS
=================================
                             REGION/       BASE        CSE
    FIT         KIND       COMPARTMENT  COMPLEXITY  COMPLEXITY  MEMORY  DEFINITION
-----------------------------------------------------------------------------------------
     1            GlobalMax       1           6          6        480     : 0
     1            GlobalMax       2           6          6        480     : 0
     1            GlobalMax       3           6          6        480     : 0
     1            GlobalMax       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     2            GlobalMin       1           6          6        480     : 100
     2            GlobalMin       2           6          6        480     : 100
     2            GlobalMin       3           6          6        480     : 100
     2            GlobalMin       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3            GlobalMax       1           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       2           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       3           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       4           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))

===============================
  SUMMARIZE PLOTS
===============================
                      REGION/       BASE        CSE
  PLOT    TYPE     COMPARTMENT  COMPLEXITY  COMPLEXITY    MEMORY    DEFINITION
------------------------------------------------------------------------------
     1     CONTOUR          0          1          1           80  : A
     2     CONTOUR          0          6          6          480  : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3      VECTOR          0          5          5          400  : Vector(A.Y,-(A.X),0)
     4     CONTOUR          0          1          1           80  :  1.26e-6
     5      VECTOR          0          1          1           80  : V(0,0,0)

==UNUSED== PARAMETER DEFINITIONS:
 CONVERTTORAD B1 B2 B_X
Uorder=3
 A order=3
LOG Threads=4 Order=3 Speed=1 Stability=0
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=7.75732e-05 XNORM=16071.9 Flag=Ok
NEWTON STEP 1/40 NORM=1.33238e+07
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.001081 XNORM=19193.5 Flag=Ok
NEWTON STEP 2 XNORM=0.840843 RESNORM=3.31551e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00258919 XNORM=28051.3 Flag=Ok
NEWTON STEP 3 XNORM=0.757653 RESNORM=3.1024e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118371 XNORM=29116.4 Flag=Ok
NEWTON STEP 4 XNORM=0.74187 RESNORM=2.88054e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00115063 XNORM=30220.8 Flag=Ok
NEWTON STEP 5 XNORM=0.730512 RESNORM=2.67783e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118514 XNORM=31363.1 Flag=Ok
NEWTON STEP 6 XNORM=0.721665 RESNORM=2.49346e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00182193 XNORM=32544.2 Flag=Ok
NEWTON STEP 7 XNORM=0.714634 RESNORM=2.33296e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00116196 XNORM=33761.3 Flag=Ok
NEWTON STEP 8 XNORM=0.708791 RESNORM=2.16866e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00135903 XNORM=3502.63 Flag=Ok
NEWTON STEP 9 XNORM=0.703959 RESNORM=1.86392e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0012087 XNORM=3628.04 Flag=Ok
NEWTON STEP 10 XNORM=0.700186 RESNORM=1.72279e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00143335 XNORM=3758.96 Flag=Ok
NEWTON STEP 11 XNORM=0.697217 RESNORM=1.59236e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00374685 XNORM=3894.03 Flag=Ok
NEWTON STEP 12 XNORM=0.696119 RESNORM=1.47146e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0336835 XNORM=4033.32 Flag=Ok
NEWTON STEP 13 XNORM=0.827086 RESNORM=1.37478e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0106366 XNORM=4176.02 Flag=Ok
NEWTON STEP 14 XNORM=0.674387 RESNORM=1.27487e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00241678 XNORM=4323.98 Flag=Ok
NEWTON STEP 15 XNORM=0.673832 RESNORM=1.17715e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00207178 XNORM=4476.47 Flag=Ok
NEWTON STEP 16 XNORM=0.673278 RESNORM=1.08688e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00197295 XNORM=4633.51 Flag=Ok
NEWTON STEP 17 XNORM=0.671948 RESNORM=1.00348e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00200363 XNORM=4795.18 Flag=Ok
NEWTON STEP 18 XNORM=0.670376 RESNORM=9.2639e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0021317 XNORM=4961.55 Flag=Ok
NEWTON STEP 19 XNORM=0.668709 RESNORM=8.55164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00238395 XNORM=5132.69 Flag=Ok
NEWTON STEP 20 XNORM=0.667028 RESNORM=7.89431e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00286725 XNORM=5308.64 Flag=Ok
NEWTON STEP 21 XNORM=0.665486 RESNORM=7.28949e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00389148 XNORM=5489.46 Flag=Ok
NEWTON STEP 22 XNORM=0.664527 RESNORM=6.73885e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00645055 XNORM=5675.14 Flag=Ok
NEWTON STEP 23 XNORM=0.665891 RESNORM=6.26295e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0309835 XNORM=5865.54 Flag=Ok
NEWTON STEP 24 XNORM=0.665022 RESNORM=6.08162e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00368498 XNORM=6054.09 Flag=Ok
NEWTON STEP 25 XNORM=0.647354 RESNORM=5.57299e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00907884 XNORM=6254.68 Flag=Ok
NEWTON STEP 26 XNORM=0.645873 RESNORM=5.20144e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0170611 XNORM=6459.93 Flag=Ok
NEWTON STEP 27 XNORM=0.789451 RESNORM=5.14591e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00302535 XNORM=6667.02 Flag=Ok
NEWTON STEP 28 XNORM=0.641641 RESNORM=4.77375e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0030556 XNORM=6882.72 Flag=Ok
NEWTON STEP 29 XNORM=0.640097 RESNORM=4.35557e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00324249 XNORM=7103.46 Flag=Ok
NEWTON STEP 30 XNORM=0.638462 RESNORM=3.96598e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00359026 XNORM=7329.15 Flag=Ok
NEWTON STEP 31 XNORM=0.636901 RESNORM=3.60628e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00412093 XNORM=7559.69 Flag=Ok
NEWTON STEP 32 XNORM=0.6357 RESNORM=3.28164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00486637 XNORM=7794.92 Flag=Ok
NEWTON STEP 33 XNORM=0.63533 RESNORM=3.00428e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00592924 XNORM=8034.55 Flag=Ok
NEWTON STEP 34 XNORM=0.636371 RESNORM=2.79911e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00801581 XNORM=8278.09 Flag=Ok
NEWTON STEP 35 XNORM=0.639623 RESNORM=2.73024e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0190891 XNORM=8524.1 Flag=Ok
NEWTON STEP 36 XNORM=0.659804 RESNORM=3.31294e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0172222 XNORM=8755.15 Flag=Ok
NEWTON STEP 37 XNORM=0.626935 RESNORM=3.8469e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.005864 XNORM=9001.83 Flag=Ok
NEWTON STEP 38 XNORM=0.620434 RESNORM=3.58471e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00488147 XNORM=9263.89 Flag=Ok
NEWTON STEP 39 XNORM=0.623912 RESNORM=3.32414e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00753487 XNORM=9531.4 Flag=Ok
NEWTON STEP 40 XNORM=0.626827 RESNORM=2.94286e+07 Lanczos/DInv
RMS Spatial Errors   0.012430
DO_NEXTSTAGE pde 0x13b857c00  MAXSTAGE=0

================================================================
===  FlexPDE Version 7.21/OSXm  12:20:20 Dec  9 2022  Copyright (c) 1996-2020 PDE Solutions Inc.
===  /Users/nhanguyen/Downloads/MiniProject/Mini_Project_Model.pde 01:19:58 6/18/23
================================================================
    1| { Fill in the following sections (removing comment marks ! if necessary),
    2|   and delete those that are unused.}
    3| TITLE 'Part A Mid-Term Mini-Project'     { the problem identification }
    4| COORDINATES cartesian2  { coordinate system, 1D,2D,3D, etc }
    5| VARIABLES        { system variables }
    6|   A              { choose your own names }
    7| Global Variables
    8| Jcoil
    9| SELECT         { method controls }
   10| Threads = 4
   11| Initial Values
   12| Jcoil = 1e7
   13| DEFINITIONS    { parameter definitions }
   14| #include"input.pde"
    2| Alpha3=0.191888888889
    3| Alpha2=0.191888888889
    4| Alpha6=0.418666666667
   15| 
   16| B = curl(A)
   17| Bm = magnitude(B)
   18| Mu0 = 4*pi*1e-7
   19| Muiron = 1 + 1507 * exp(-(abs(Bm / 1.443) ^ 3.725))
   20| Jc = table('Bmax.tbl')
   21| J = 0
   22| 
   23| !Creating a degree 
   24| Converttorad = 2 * pi / 360
   25| 
   26| mu=mu0
   27| !Radii in meters
   28| Rii = .025
   29| Rio = .0425
   30| Roo = .0602
   31| Rair = 4 * Roo
   32| Rbeam = .018
   33| 
   34| !Angles in radians
   35| A1 = 15 * Converttorad
   36| A2 = 15 * Converttorad
   37| A3 = 10 * Converttorad
   38| A4 = 5 * Converttorad
   39| A5 = 20 * Converttorad
   40| A6 = 25 * Converttorad
   41| !Alpha2 = 5 * Converttorad
   42| !Alpha3 = 5 * Converttorad
   43| !Alpha4 = 5 * Converttorad
   44| !Alpha6 = 5 * Converttorad
   45| 
   46| !Lorentz Forces in coils
   47| L = 10 !coil length in meters
   48| Area = 950e-6 !m^2 of coils
   49| Jvec = vector(0,0,J)
   50| F=Area*L*cross(Jvec,B)
   51| 
   52| !B field calculations
   53| B1 = 0
   54| B2 = 100
   55| Bmax = globalmax(B1)
   56| Bmin = globalmin(B2)
   57| dB = (Bmax - Bmin) / Bmax
   58| 
   59| Of = .7
   60| Ff = .6
   61| Objective=(Jc*of*ff-Jcoil)/Jcoil
   62| 
   63| !Determining alignment with respect to x (ideal is when B_x = 0 everywhere)
   64| B_x= abs(xcomp(Bm))
   65| Alignment=globalmax(B_x)
   66| 
   67| ! INITIAL VALUES
   68| EQUATIONS        { PDE's, one for each variable }
   69| A: curl(1/mu*curl(A))=J
   70| Jcoil: Objective=0
   71| 
   72| 
   73| ! CONSTRAINTS    { Integral constraints }
   74| BOUNDARIES       { The domain definition }
   75| REGION 1 "air"
   76| START(0,0) value(A) = 0  { Walk the domain boundary }
   77| LINE TO (0,Rair) value(A) = 0
   78| ARC(CENTER = 0,0) Angle = -90 natural(A) = 0
   79| line to close
   80| 
   81| Region 2 "Backiron"
   82| Mu = mu0*Muiron
   83| Start(1.5 * Roo,0)
   84| Line to (3 * Roo, 0)
   85| Arc(center = 0,0) to (0, 3 * Roo)
   86| Line to (0, 1.5 * Roo)
   87| Arc(center = 0,0) to close
   88| 
   89| Region 3 "Saddle Coils"
   90| J = Jcoil
   91| !Coil 1:
   92| Start(Rii,0) Line to (Rio,0)
   93| Arc(Center = 0,0) to (Rio * cos(A1),Rio * sin(A1))
   94| Line to (Rii * cos(A1),Rii * sin(A1))
   95| Arc(Center = 0,0) To Close
   96| 
   97| !Coil 2:
   98| Start(Rii * cos(A1 + Alpha2),Rii * sin(A1 + Alpha2))
   99| Line to (Rio * cos(A1 + Alpha2), Rio * sin(A1 + Alpha2))
  100| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2), Rio * sin(A1 + A2 + Alpha2))
  101| Line to (Rii * cos(A1 + A2 + Alpha2), Rii * sin(A1 + A2 + Alpha2))
  102| Arc(Center = 0,0) to close
  103| 
  104| !Coil3:
  105| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3),Rii * sin(A1 + Alpha2 + A2 + Alpha3))
  106| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3), Rio * sin(A1 + Alpha2 + A2 + Alpha3))
  107| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  108| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  109| Arc(Center = 0,0) to close
  110| 
  111| !Coil4:
  112| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4),Rii * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  113| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4), Rio * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  114| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  115| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  116| Arc(Center = 0,0) to close
  117| 
  118| 
  119| !Coil5:
  120| Start(Rio,0)
  121| Line to (Roo,0)
  122| Arc(Center = 0,0) To (Roo * cos(A5), Roo * sin(A5))
  123| Line to (Rio * cos(A5), Rio * sin(A5))
  124| Arc(Center = 0,0) to close
  125| 
  126| !Coil6:
  127| Start(Rio * cos(A5 + Alpha6), Rio * sin(A5 + Alpha6))
  128| Line to (Roo * cos(A5 + Alpha6), Roo * sin(A5 + Alpha6))
  129| Arc(Center = 0,0) to (Roo * cos(A5 + Alpha6 + A6), Roo * sin(A5 + Alpha6 + A6))
  130| Line to (Rio * cos(A5 + Alpha6 + A6), Rio * sin(A5 + Alpha6 + A6))
  131| Arc(Center = 0,0) to close
  132| 
  133| Region 4 "Beam Area"
  134| B1 = Bm
  135| B2 = Bm
  136| Start(0,0)
  137| Line to (0,Rbeam)
  138| Arc(Center = 0,0) Angle = -90
  139| line to close
  140| 
  141| ! TIME 0 TO 1    { if time dependent }
  142| MONITORS         { show progress }
  143| PLOTS            { save result displays }
  144| CONTOUR(A)
  145| Contour(Bm) on "Beam Area" painted
  146| Vector(B)
  147| Contour(Mu) painted
  148| Vector(F) on "Saddle Coils"
  149| 
  150| Summary
  151| export file = "Output.txt"
  152| Report(Bmax) !as "Bmax in beam area"
  153| Report(Bmin) !as "Bmin in beam area"
  154| Report(dB) !as "dB in beam area"
  155| !Report(B_x)
  156| Report(Alignment) 
  157| 
  158| !Report(globalmin(Mu0)) as "Mu0 min"
  159| !Report(globalmax(Mu0)) as "Mu0 max"
  160| !Report(globalmax_X(Mu0))
  161| !Report(globalmax_Y(Mu0))
  162| END
Uorder=3
 A order=3
STUDENT VERSION SETS GROW2=0.35 GRIDARC=30
IMPORTMESH(0) NDIM=2 NB=10 NAB=3 NODES=172 CELLS=298 SIDES=469 LEGS=0 imaging=0 time(0)=0
MESH IMPORT ABORTED: Different GRID2D
Transferred mesh does not match local domain!
(Boundary descriptions must match exactly.)

==========================
 SUMMARIZE PARAMETERS
==========================
 Param         name     Type       Domain               Definition
-------------------------------------------------------------------
     1       ALPHA4   Scalar      (GLOBAL)               :  0.34889
                                             [1]=>  0.34889
     2       ALPHA3   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     3       ALPHA2   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     4       ALPHA6   Scalar      (GLOBAL)               :  0.41867
                                             [1]=>  0.41867
     5            B   Vector      (GLOBAL)               : Vector(DY(A),-(DX(A)),0)
                                             [5]=> Vector(A.Y,-(A.X),0)
     6           BM   Scalar      (GLOBAL)               : Sqrt(Sqr(DY(A))+Sqr(DX(A)))
                                             [6]=> Sqrt(Sqr(A.Y)+Sqr(A.X))
     7          MU0   Scalar      (GLOBAL)               :  1.26e-6
                                             [1]=>  1.26e-6
     8       MUIRON   Scalar      (GLOBAL)               : 1+(1507*Exp(-(Abs(BM* 0.69300)^ 3.72500)))
                                             [17]=> 1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))
     9           JC   Scalar      (GLOBAL)               : Table#1
                                             [1]=> Table#1
    10            J   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   3)           : JCOIL
    11 CONVERTTORAD   Scalar      (GLOBAL)               :  0.01745
                                             [1]=>  0.01745
    12           MU   Scalar      (GLOBAL)               : MU0
                                             [1]=>  1.26e-6
                                  (REGION   2)           : MU0*MUIRON
    13          RII   Scalar      (GLOBAL)               :  0.02500
                                             [1]=>  0.02500
    14          RIO   Scalar      (GLOBAL)               :  0.04250
                                             [1]=>  0.04250
    15          ROO   Scalar      (GLOBAL)               :  0.06020
                                             [1]=>  0.06020
    16         RAIR   Scalar      (GLOBAL)               : 4*ROO
                                             [1]=>  0.24080
    17        RBEAM   Scalar      (GLOBAL)               :  0.01800
                                             [1]=>  0.01800
    18           A1   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    19           A2   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    20           A3   Scalar      (GLOBAL)               : 10*CONVERTTORAD
                                             [1]=>  0.17453
    21           A4   Scalar      (GLOBAL)               : 5*CONVERTTORAD
                                             [1]=>  0.08727
    22           A5   Scalar      (GLOBAL)               : 20*CONVERTTORAD
                                             [1]=>  0.34907
    23           A6   Scalar      (GLOBAL)               : 25*CONVERTTORAD
                                             [1]=>  0.43633
    24            L   Scalar      (GLOBAL)               : 10
                                             [1]=> 10
    25         AREA   Scalar      (GLOBAL)               :  9.50e-4
                                             [1]=>  9.50e-4
    26         JVEC   Vector      (GLOBAL)               : Vector(0,0,J)
                                             [1]=> V(0,0,0)
    27            F   Scalar      (GLOBAL)               : (AREA*L)*((JVEC)<x>(B))
                                             [1]=> V(0,0,0)
    28           B1   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   4)           : BM
    29           B2   Scalar      (GLOBAL)               : 100
                                             [1]=> 100
                                  (REGION   4)           : BM
    30         BMAX   Scalar      (GLOBAL)               : Gmax#1
                                             [1]=> Gmax#1
    31         BMIN   Scalar      (GLOBAL)               : Gmin#2
                                             [1]=> Gmin#2
    32           DB   Scalar      (GLOBAL)               : (BMAX-BMIN)/BMAX
                                             [5]=> (Gmax#1-Gmin#2)/Gmax#1
    33           OF   Scalar      (GLOBAL)               :  0.70000
                                             [1]=>  0.70000
    34           FF   Scalar      (GLOBAL)               :  0.60000
                                             [1]=>  0.60000
    35    OBJECTIVE   Scalar      (GLOBAL)               : (((JC*OF)*FF)-JCOIL)/JCOIL
                                             [7]=> ((Table#1* 0.42000)-JCOIL)/JCOIL
    36          B_X   Scalar      (GLOBAL)               : Abs(Xcomp(BM))
                                             [8]=> Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
    37    ALIGNMENT   Scalar      (GLOBAL)               : Gmax#3
                                             [1]=> Gmax#3



==========================
SUMMARIZE EQUATIONS
==========================
In the following equation definitions
Derivatives are represented by appending a dot and the differentiated coordinate.
The operator <V> represents volume integration. <Vb> is weighted by basis function.
<Vu> is weighted by the upwind modifer. <Vbu> is weighted by both.
A dotted volume integral represents volume integration weighted by the indicated
derivative of the basis function. 'Beta' represents a basis function.
The operator <S>.c represents surface integration weighted by the indicated
direction cosine.

            DEFINES     REGION/     DEPENDS                      BASE          CSE
 EQUATION     VAR    COMPARTMENT      VAR         FUNCTION     COMPLEXITY   COMPLEXITY     MEMORY  DEFINITION
-----------------------------------------------------------------------------------------------------------

PRIMARY EQUATIONS
     1          A                            Field Equation                                      : (CURL((1/MU)*(CURL(A))))-J
                           1                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           2                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin        266           45         3600 : (<Vb>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<Vb>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))
                                        A    Space Jacobian       1782          221        17680 : (<Vb>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<Vb>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                           Surface Galerkin         46           46         3680 : -((<S>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<S>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                        A  Surface Jacobian        222          222        17760 : -((<S>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<S>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))))
                           3                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         21           12          960 : ((<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X)))-(<Vb>(JCOIL))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                    JCOIL    Space Jacobian          3            3          240 : -(<Vb>(1))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           4                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
     2      JCOIL                           Global Equation                                      : OBJECTIVE-0
                                             Space Galerkin          0            7          560 : ((Table#1* 0.42000)-JCOIL)/JCOIL
                                    JCOIL    Space Jacobian         10           13         1040 : (-1/(def#15(JCOIL)))-(((Table#1* 0.42000)-(ref#15))/Sqr(ref#15))
                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null
EQUATION 1 PARAMETER DEPENDENCIES:
           BM          MU0       MUIRON            J           MU

========================================================
     SUMMARIZE BOUNDARY CONDITIONS
========================================================

BOUNDARY CONDITION TAGS with associated BC INDEX
BC TAG   1:BC   1 val(A)  nat(0)
BC TAG   2:BC   2 nat(A)  nat(0)

    BC  KIND     DEFINES   COMPARTMENT     DEPENDS     FUNCTION     COMPLEXITY    MEMORY    DEFINITION
-----------------------------------------------------------------------------------------------------
     1   VAL          A            1                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            2                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            3                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
     2   NAT          A            1                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            2                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            3                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            4                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0

================================
SUMMARIZE FITS AND INTEGRALS
=================================
                             REGION/       BASE        CSE
    FIT         KIND       COMPARTMENT  COMPLEXITY  COMPLEXITY  MEMORY  DEFINITION
-----------------------------------------------------------------------------------------
     1            GlobalMax       1           6          6        480     : 0
     1            GlobalMax       2           6          6        480     : 0
     1            GlobalMax       3           6          6        480     : 0
     1            GlobalMax       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     2            GlobalMin       1           6          6        480     : 100
     2            GlobalMin       2           6          6        480     : 100
     2            GlobalMin       3           6          6        480     : 100
     2            GlobalMin       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3            GlobalMax       1           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       2           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       3           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       4           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))

===============================
  SUMMARIZE PLOTS
===============================
                      REGION/       BASE        CSE
  PLOT    TYPE     COMPARTMENT  COMPLEXITY  COMPLEXITY    MEMORY    DEFINITION
------------------------------------------------------------------------------
     1     CONTOUR          0          1          1           80  : A
     2     CONTOUR          0          6          6          480  : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3      VECTOR          0          5          5          400  : Vector(A.Y,-(A.X),0)
     4     CONTOUR          0          1          1           80  :  1.26e-6
     5      VECTOR          0          1          1           80  : V(0,0,0)

==UNUSED== PARAMETER DEFINITIONS:
 CONVERTTORAD B1 B2 B_X
Uorder=3
 A order=3
LOG Threads=4 Order=3 Speed=1 Stability=0
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=7.75732e-05 XNORM=16071.9 Flag=Ok
NEWTON STEP 1/40 NORM=1.33238e+07
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.001081 XNORM=19193.5 Flag=Ok
NEWTON STEP 2 XNORM=0.840843 RESNORM=3.31551e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00258919 XNORM=28051.3 Flag=Ok
NEWTON STEP 3 XNORM=0.757653 RESNORM=3.1024e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118371 XNORM=29116.4 Flag=Ok
NEWTON STEP 4 XNORM=0.74187 RESNORM=2.88054e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00115063 XNORM=30220.8 Flag=Ok
NEWTON STEP 5 XNORM=0.730512 RESNORM=2.67783e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118514 XNORM=31363.1 Flag=Ok
NEWTON STEP 6 XNORM=0.721665 RESNORM=2.49346e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00182193 XNORM=32544.2 Flag=Ok
NEWTON STEP 7 XNORM=0.714634 RESNORM=2.33296e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00116196 XNORM=33761.3 Flag=Ok
NEWTON STEP 8 XNORM=0.708791 RESNORM=2.16866e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00135903 XNORM=3502.63 Flag=Ok
NEWTON STEP 9 XNORM=0.703959 RESNORM=1.86392e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0012087 XNORM=3628.04 Flag=Ok
NEWTON STEP 10 XNORM=0.700186 RESNORM=1.72279e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00143335 XNORM=3758.96 Flag=Ok
NEWTON STEP 11 XNORM=0.697217 RESNORM=1.59236e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00374685 XNORM=3894.03 Flag=Ok
NEWTON STEP 12 XNORM=0.696119 RESNORM=1.47146e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0336835 XNORM=4033.32 Flag=Ok
NEWTON STEP 13 XNORM=0.827086 RESNORM=1.37478e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0106366 XNORM=4176.02 Flag=Ok
NEWTON STEP 14 XNORM=0.674387 RESNORM=1.27487e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00241678 XNORM=4323.98 Flag=Ok
NEWTON STEP 15 XNORM=0.673832 RESNORM=1.17715e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00207178 XNORM=4476.47 Flag=Ok
NEWTON STEP 16 XNORM=0.673278 RESNORM=1.08688e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00197295 XNORM=4633.51 Flag=Ok
NEWTON STEP 17 XNORM=0.671948 RESNORM=1.00348e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00200363 XNORM=4795.18 Flag=Ok
NEWTON STEP 18 XNORM=0.670376 RESNORM=9.2639e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0021317 XNORM=4961.55 Flag=Ok
NEWTON STEP 19 XNORM=0.668709 RESNORM=8.55164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00238395 XNORM=5132.69 Flag=Ok
NEWTON STEP 20 XNORM=0.667028 RESNORM=7.89431e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00286725 XNORM=5308.64 Flag=Ok
NEWTON STEP 21 XNORM=0.665486 RESNORM=7.28949e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00389148 XNORM=5489.46 Flag=Ok
NEWTON STEP 22 XNORM=0.664527 RESNORM=6.73885e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00645055 XNORM=5675.14 Flag=Ok
NEWTON STEP 23 XNORM=0.665891 RESNORM=6.26295e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0309835 XNORM=5865.54 Flag=Ok
NEWTON STEP 24 XNORM=0.665022 RESNORM=6.08162e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00368498 XNORM=6054.09 Flag=Ok
NEWTON STEP 25 XNORM=0.647354 RESNORM=5.57299e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00907884 XNORM=6254.68 Flag=Ok
NEWTON STEP 26 XNORM=0.645873 RESNORM=5.20144e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0170611 XNORM=6459.93 Flag=Ok
NEWTON STEP 27 XNORM=0.789451 RESNORM=5.14591e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00302535 XNORM=6667.02 Flag=Ok
NEWTON STEP 28 XNORM=0.641641 RESNORM=4.77375e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0030556 XNORM=6882.72 Flag=Ok
NEWTON STEP 29 XNORM=0.640097 RESNORM=4.35557e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00324249 XNORM=7103.46 Flag=Ok
NEWTON STEP 30 XNORM=0.638462 RESNORM=3.96598e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00359026 XNORM=7329.15 Flag=Ok
NEWTON STEP 31 XNORM=0.636901 RESNORM=3.60628e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00412093 XNORM=7559.69 Flag=Ok
NEWTON STEP 32 XNORM=0.6357 RESNORM=3.28164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00486637 XNORM=7794.92 Flag=Ok
NEWTON STEP 33 XNORM=0.63533 RESNORM=3.00428e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00592924 XNORM=8034.55 Flag=Ok
NEWTON STEP 34 XNORM=0.636371 RESNORM=2.79911e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00801581 XNORM=8278.09 Flag=Ok
NEWTON STEP 35 XNORM=0.639623 RESNORM=2.73024e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0190891 XNORM=8524.1 Flag=Ok
NEWTON STEP 36 XNORM=0.659804 RESNORM=3.31294e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0172222 XNORM=8755.15 Flag=Ok
NEWTON STEP 37 XNORM=0.626935 RESNORM=3.84691e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00586401 XNORM=9001.83 Flag=Ok
NEWTON STEP 38 XNORM=0.620434 RESNORM=3.58472e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00488145 XNORM=9263.89 Flag=Ok
NEWTON STEP 39 XNORM=0.623912 RESNORM=3.32415e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00753479 XNORM=9531.4 Flag=Ok
NEWTON STEP 40 XNORM=0.626827 RESNORM=2.94287e+07 Lanczos/DInv
RMS Spatial Errors   0.012430
DO_NEXTSTAGE pde 0x11b87cc00  MAXSTAGE=0

================================================================
===  FlexPDE Version 7.21/OSXm  12:20:20 Dec  9 2022  Copyright (c) 1996-2020 PDE Solutions Inc.
===  /Users/nhanguyen/Downloads/MiniProject/Mini_Project_Model.pde 01:29:41 6/18/23
================================================================
    1| { Fill in the following sections (removing comment marks ! if necessary),
    2|   and delete those that are unused.}
    3| TITLE 'Part A Mid-Term Mini-Project'     { the problem identification }
    4| COORDINATES cartesian2  { coordinate system, 1D,2D,3D, etc }
    5| VARIABLES        { system variables }
    6|   A              { choose your own names }
    7| Global Variables
    8| Jcoil
    9| SELECT         { method controls }
   10| Threads = 4
   11| Initial Values
   12| Jcoil = 1e7
   13| DEFINITIONS    { parameter definitions }
   14| #include"input.pde"
    2| Alpha3=0.191888888889
    3| Alpha2=0.191888888889
    4| Alpha6=0.418666666667
   15| 
   16| B = curl(A)
   17| Bm = magnitude(B)
   18| Mu0 = 4*pi*1e-7
   19| Muiron = 1 + 1507 * exp(-(abs(Bm / 1.443) ^ 3.725))
   20| Jc = table('Bmax.tbl')
   21| J = 0
   22| 
   23| !Creating a degree 
   24| Converttorad = 2 * pi / 360
   25| 
   26| mu=mu0
   27| !Radii in meters
   28| Rii = .025
   29| Rio = .0425
   30| Roo = .0602
   31| Rair = 4 * Roo
   32| Rbeam = .018
   33| 
   34| !Angles in radians
   35| A1 = 15 * Converttorad
   36| A2 = 15 * Converttorad
   37| A3 = 10 * Converttorad
   38| A4 = 5 * Converttorad
   39| A5 = 20 * Converttorad
   40| A6 = 25 * Converttorad
   41| !Alpha2 = 5 * Converttorad
   42| !Alpha3 = 5 * Converttorad
   43| !Alpha4 = 5 * Converttorad
   44| !Alpha6 = 5 * Converttorad
   45| 
   46| !Lorentz Forces in coils
   47| L = 10 !coil length in meters
   48| Area = 950e-6 !m^2 of coils
   49| Jvec = vector(0,0,J)
   50| F=Area*L*cross(Jvec,B)
   51| 
   52| !B field calculations
   53| B1 = 0
   54| B2 = 100
   55| Bmax = globalmax(B1)
   56| Bmin = globalmin(B2)
   57| dB = (Bmax - Bmin) / Bmax
   58| 
   59| Of = .7
   60| Ff = .6
   61| Objective=(Jc*of*ff-Jcoil)/Jcoil
   62| 
   63| !Determining alignment with respect to x (ideal is when B_x = 0 everywhere)
   64| B_x= abs(xcomp(Bm))
   65| Alignment=globalmax(B_x)
   66| 
   67| ! INITIAL VALUES
   68| EQUATIONS        { PDE's, one for each variable }
   69| A: curl(1/mu*curl(A))=J
   70| Jcoil: Objective=0
   71| 
   72| 
   73| ! CONSTRAINTS    { Integral constraints }
   74| BOUNDARIES       { The domain definition }
   75| REGION 1 "air"
   76| START(0,0) value(A) = 0  { Walk the domain boundary }
   77| LINE TO (0,Rair) value(A) = 0
   78| ARC(CENTER = 0,0) Angle = -90 natural(A) = 0
   79| line to close
   80| 
   81| Region 2 "Backiron"
   82| Mu = mu0*Muiron
   83| Start(1.5 * Roo,0)
   84| Line to (3 * Roo, 0)
   85| Arc(center = 0,0) to (0, 3 * Roo)
   86| Line to (0, 1.5 * Roo)
   87| Arc(center = 0,0) to close
   88| 
   89| Region 3 "Saddle Coils"
   90| J = Jcoil
   91| !Coil 1:
   92| Start(Rii,0) Line to (Rio,0)
   93| Arc(Center = 0,0) to (Rio * cos(A1),Rio * sin(A1))
   94| Line to (Rii * cos(A1),Rii * sin(A1))
   95| Arc(Center = 0,0) To Close
   96| 
   97| !Coil 2:
   98| Start(Rii * cos(A1 + Alpha2),Rii * sin(A1 + Alpha2))
   99| Line to (Rio * cos(A1 + Alpha2), Rio * sin(A1 + Alpha2))
  100| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2), Rio * sin(A1 + A2 + Alpha2))
  101| Line to (Rii * cos(A1 + A2 + Alpha2), Rii * sin(A1 + A2 + Alpha2))
  102| Arc(Center = 0,0) to close
  103| 
  104| !Coil3:
  105| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3),Rii * sin(A1 + Alpha2 + A2 + Alpha3))
  106| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3), Rio * sin(A1 + Alpha2 + A2 + Alpha3))
  107| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  108| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  109| Arc(Center = 0,0) to close
  110| 
  111| !Coil4:
  112| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4),Rii * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  113| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4), Rio * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  114| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  115| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  116| Arc(Center = 0,0) to close
  117| 
  118| 
  119| !Coil5:
  120| Start(Rio,0)
  121| Line to (Roo,0)
  122| Arc(Center = 0,0) To (Roo * cos(A5), Roo * sin(A5))
  123| Line to (Rio * cos(A5), Rio * sin(A5))
  124| Arc(Center = 0,0) to close
  125| 
  126| !Coil6:
  127| Start(Rio * cos(A5 + Alpha6), Rio * sin(A5 + Alpha6))
  128| Line to (Roo * cos(A5 + Alpha6), Roo * sin(A5 + Alpha6))
  129| Arc(Center = 0,0) to (Roo * cos(A5 + Alpha6 + A6), Roo * sin(A5 + Alpha6 + A6))
  130| Line to (Rio * cos(A5 + Alpha6 + A6), Rio * sin(A5 + Alpha6 + A6))
  131| Arc(Center = 0,0) to close
  132| 
  133| Region 4 "Beam Area"
  134| B1 = Bm
  135| B2 = Bm
  136| Start(0,0)
  137| Line to (0,Rbeam)
  138| Arc(Center = 0,0) Angle = -90
  139| line to close
  140| 
  141| ! TIME 0 TO 1    { if time dependent }
  142| MONITORS         { show progress }
  143| PLOTS            { save result displays }
  144| CONTOUR(A)
  145| Contour(Bm) on "Beam Area" painted
  146| Vector(B)
  147| Contour(Mu) painted
  148| Vector(F) on "Saddle Coils"
  149| 
  150| Summary
  151| export file = "Output.txt"
  152| Report(Bmax) !as "Bmax in beam area"
  153| Report(Bmin) !as "Bmin in beam area"
  154| Report(dB) !as "dB in beam area"
  155| !Report(B_x)
  156| Report(Alignment) 
  157| 
  158| !Report(globalmin(Mu0)) as "Mu0 min"
  159| !Report(globalmax(Mu0)) as "Mu0 max"
  160| !Report(globalmax_X(Mu0))
  161| !Report(globalmax_Y(Mu0))
  162| END
Uorder=3
 A order=3
STUDENT VERSION SETS GROW2=0.35 GRIDARC=30
IMPORTMESH(0) NDIM=2 NB=10 NAB=3 NODES=172 CELLS=298 SIDES=469 LEGS=0 imaging=0 time(0)=0
MESH IMPORT ABORTED: Different GRID2D
Transferred mesh does not match local domain!
(Boundary descriptions must match exactly.)

==========================
 SUMMARIZE PARAMETERS
==========================
 Param         name     Type       Domain               Definition
-------------------------------------------------------------------
     1       ALPHA4   Scalar      (GLOBAL)               :  0.34889
                                             [1]=>  0.34889
     2       ALPHA3   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     3       ALPHA2   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     4       ALPHA6   Scalar      (GLOBAL)               :  0.41867
                                             [1]=>  0.41867
     5            B   Vector      (GLOBAL)               : Vector(DY(A),-(DX(A)),0)
                                             [5]=> Vector(A.Y,-(A.X),0)
     6           BM   Scalar      (GLOBAL)               : Sqrt(Sqr(DY(A))+Sqr(DX(A)))
                                             [6]=> Sqrt(Sqr(A.Y)+Sqr(A.X))
     7          MU0   Scalar      (GLOBAL)               :  1.26e-6
                                             [1]=>  1.26e-6
     8       MUIRON   Scalar      (GLOBAL)               : 1+(1507*Exp(-(Abs(BM* 0.69300)^ 3.72500)))
                                             [17]=> 1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))
     9           JC   Scalar      (GLOBAL)               : Table#1
                                             [1]=> Table#1
    10            J   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   3)           : JCOIL
    11 CONVERTTORAD   Scalar      (GLOBAL)               :  0.01745
                                             [1]=>  0.01745
    12           MU   Scalar      (GLOBAL)               : MU0
                                             [1]=>  1.26e-6
                                  (REGION   2)           : MU0*MUIRON
    13          RII   Scalar      (GLOBAL)               :  0.02500
                                             [1]=>  0.02500
    14          RIO   Scalar      (GLOBAL)               :  0.04250
                                             [1]=>  0.04250
    15          ROO   Scalar      (GLOBAL)               :  0.06020
                                             [1]=>  0.06020
    16         RAIR   Scalar      (GLOBAL)               : 4*ROO
                                             [1]=>  0.24080
    17        RBEAM   Scalar      (GLOBAL)               :  0.01800
                                             [1]=>  0.01800
    18           A1   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    19           A2   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    20           A3   Scalar      (GLOBAL)               : 10*CONVERTTORAD
                                             [1]=>  0.17453
    21           A4   Scalar      (GLOBAL)               : 5*CONVERTTORAD
                                             [1]=>  0.08727
    22           A5   Scalar      (GLOBAL)               : 20*CONVERTTORAD
                                             [1]=>  0.34907
    23           A6   Scalar      (GLOBAL)               : 25*CONVERTTORAD
                                             [1]=>  0.43633
    24            L   Scalar      (GLOBAL)               : 10
                                             [1]=> 10
    25         AREA   Scalar      (GLOBAL)               :  9.50e-4
                                             [1]=>  9.50e-4
    26         JVEC   Vector      (GLOBAL)               : Vector(0,0,J)
                                             [1]=> V(0,0,0)
    27            F   Scalar      (GLOBAL)               : (AREA*L)*((JVEC)<x>(B))
                                             [1]=> V(0,0,0)
    28           B1   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   4)           : BM
    29           B2   Scalar      (GLOBAL)               : 100
                                             [1]=> 100
                                  (REGION   4)           : BM
    30         BMAX   Scalar      (GLOBAL)               : Gmax#1
                                             [1]=> Gmax#1
    31         BMIN   Scalar      (GLOBAL)               : Gmin#2
                                             [1]=> Gmin#2
    32           DB   Scalar      (GLOBAL)               : (BMAX-BMIN)/BMAX
                                             [5]=> (Gmax#1-Gmin#2)/Gmax#1
    33           OF   Scalar      (GLOBAL)               :  0.70000
                                             [1]=>  0.70000
    34           FF   Scalar      (GLOBAL)               :  0.60000
                                             [1]=>  0.60000
    35    OBJECTIVE   Scalar      (GLOBAL)               : (((JC*OF)*FF)-JCOIL)/JCOIL
                                             [7]=> ((Table#1* 0.42000)-JCOIL)/JCOIL
    36          B_X   Scalar      (GLOBAL)               : Abs(Xcomp(BM))
                                             [8]=> Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
    37    ALIGNMENT   Scalar      (GLOBAL)               : Gmax#3
                                             [1]=> Gmax#3



==========================
SUMMARIZE EQUATIONS
==========================
In the following equation definitions
Derivatives are represented by appending a dot and the differentiated coordinate.
The operator <V> represents volume integration. <Vb> is weighted by basis function.
<Vu> is weighted by the upwind modifer. <Vbu> is weighted by both.
A dotted volume integral represents volume integration weighted by the indicated
derivative of the basis function. 'Beta' represents a basis function.
The operator <S>.c represents surface integration weighted by the indicated
direction cosine.

            DEFINES     REGION/     DEPENDS                      BASE          CSE
 EQUATION     VAR    COMPARTMENT      VAR         FUNCTION     COMPLEXITY   COMPLEXITY     MEMORY  DEFINITION
-----------------------------------------------------------------------------------------------------------

PRIMARY EQUATIONS
     1          A                            Field Equation                                      : (CURL((1/MU)*(CURL(A))))-J
                           1                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           2                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin        266           45         3600 : (<Vb>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<Vb>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))
                                        A    Space Jacobian       1782          221        17680 : (<Vb>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<Vb>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                           Surface Galerkin         46           46         3680 : -((<S>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<S>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                        A  Surface Jacobian        222          222        17760 : -((<S>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<S>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))))
                           3                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         21           12          960 : ((<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X)))-(<Vb>(JCOIL))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                    JCOIL    Space Jacobian          3            3          240 : -(<Vb>(1))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           4                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
     2      JCOIL                           Global Equation                                      : OBJECTIVE-0
                                             Space Galerkin          0            7          560 : ((Table#1* 0.42000)-JCOIL)/JCOIL
                                    JCOIL    Space Jacobian         10           13         1040 : (-1/(def#15(JCOIL)))-(((Table#1* 0.42000)-(ref#15))/Sqr(ref#15))
                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null
EQUATION 1 PARAMETER DEPENDENCIES:
           BM          MU0       MUIRON            J           MU

========================================================
     SUMMARIZE BOUNDARY CONDITIONS
========================================================

BOUNDARY CONDITION TAGS with associated BC INDEX
BC TAG   1:BC   1 val(A)  nat(0)
BC TAG   2:BC   2 nat(A)  nat(0)

    BC  KIND     DEFINES   COMPARTMENT     DEPENDS     FUNCTION     COMPLEXITY    MEMORY    DEFINITION
-----------------------------------------------------------------------------------------------------
     1   VAL          A            1                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            2                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            3                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
     2   NAT          A            1                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            2                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            3                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            4                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0

================================
SUMMARIZE FITS AND INTEGRALS
=================================
                             REGION/       BASE        CSE
    FIT         KIND       COMPARTMENT  COMPLEXITY  COMPLEXITY  MEMORY  DEFINITION
-----------------------------------------------------------------------------------------
     1            GlobalMax       1           6          6        480     : 0
     1            GlobalMax       2           6          6        480     : 0
     1            GlobalMax       3           6          6        480     : 0
     1            GlobalMax       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     2            GlobalMin       1           6          6        480     : 100
     2            GlobalMin       2           6          6        480     : 100
     2            GlobalMin       3           6          6        480     : 100
     2            GlobalMin       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3            GlobalMax       1           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       2           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       3           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       4           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))

===============================
  SUMMARIZE PLOTS
===============================
                      REGION/       BASE        CSE
  PLOT    TYPE     COMPARTMENT  COMPLEXITY  COMPLEXITY    MEMORY    DEFINITION
------------------------------------------------------------------------------
     1     CONTOUR          0          1          1           80  : A
     2     CONTOUR          0          6          6          480  : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3      VECTOR          0          5          5          400  : Vector(A.Y,-(A.X),0)
     4     CONTOUR          0          1          1           80  :  1.26e-6
     5      VECTOR          0          1          1           80  : V(0,0,0)

==UNUSED== PARAMETER DEFINITIONS:
 CONVERTTORAD B1 B2 B_X
Uorder=3
 A order=3
LOG Threads=4 Order=3 Speed=1 Stability=0
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=7.75732e-05 XNORM=16071.9 Flag=Ok
NEWTON STEP 1/40 NORM=1.33238e+07
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.001081 XNORM=19193.5 Flag=Ok
NEWTON STEP 2 XNORM=0.840843 RESNORM=3.31551e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00258919 XNORM=28051.3 Flag=Ok
NEWTON STEP 3 XNORM=0.757653 RESNORM=3.1024e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118371 XNORM=29116.4 Flag=Ok
NEWTON STEP 4 XNORM=0.74187 RESNORM=2.88054e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00115063 XNORM=30220.8 Flag=Ok
NEWTON STEP 5 XNORM=0.730512 RESNORM=2.67783e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118514 XNORM=31363.1 Flag=Ok
NEWTON STEP 6 XNORM=0.721665 RESNORM=2.49346e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00182193 XNORM=32544.2 Flag=Ok
NEWTON STEP 7 XNORM=0.714634 RESNORM=2.33296e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00116196 XNORM=33761.3 Flag=Ok
NEWTON STEP 8 XNORM=0.708791 RESNORM=2.16866e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00135903 XNORM=3502.63 Flag=Ok
NEWTON STEP 9 XNORM=0.703959 RESNORM=1.86392e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0012087 XNORM=3628.04 Flag=Ok
NEWTON STEP 10 XNORM=0.700186 RESNORM=1.72279e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00143335 XNORM=3758.96 Flag=Ok
NEWTON STEP 11 XNORM=0.697217 RESNORM=1.59236e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00374685 XNORM=3894.03 Flag=Ok
NEWTON STEP 12 XNORM=0.696119 RESNORM=1.47146e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0336835 XNORM=4033.32 Flag=Ok
NEWTON STEP 13 XNORM=0.827086 RESNORM=1.37478e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0106366 XNORM=4176.02 Flag=Ok
NEWTON STEP 14 XNORM=0.674387 RESNORM=1.27487e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00241678 XNORM=4323.98 Flag=Ok
NEWTON STEP 15 XNORM=0.673832 RESNORM=1.17715e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00207178 XNORM=4476.47 Flag=Ok
NEWTON STEP 16 XNORM=0.673278 RESNORM=1.08688e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00197295 XNORM=4633.51 Flag=Ok
NEWTON STEP 17 XNORM=0.671948 RESNORM=1.00348e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00200363 XNORM=4795.18 Flag=Ok
NEWTON STEP 18 XNORM=0.670376 RESNORM=9.2639e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0021317 XNORM=4961.55 Flag=Ok
NEWTON STEP 19 XNORM=0.668709 RESNORM=8.55164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00238395 XNORM=5132.69 Flag=Ok
NEWTON STEP 20 XNORM=0.667028 RESNORM=7.89431e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00286725 XNORM=5308.64 Flag=Ok
NEWTON STEP 21 XNORM=0.665486 RESNORM=7.28949e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00389148 XNORM=5489.46 Flag=Ok
NEWTON STEP 22 XNORM=0.664527 RESNORM=6.73885e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00645055 XNORM=5675.14 Flag=Ok
NEWTON STEP 23 XNORM=0.665891 RESNORM=6.26295e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0309835 XNORM=5865.54 Flag=Ok
NEWTON STEP 24 XNORM=0.665022 RESNORM=6.08162e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00368498 XNORM=6054.09 Flag=Ok
NEWTON STEP 25 XNORM=0.647354 RESNORM=5.57299e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00907884 XNORM=6254.68 Flag=Ok
NEWTON STEP 26 XNORM=0.645873 RESNORM=5.20144e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0170611 XNORM=6459.93 Flag=Ok
NEWTON STEP 27 XNORM=0.789452 RESNORM=5.14591e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00302535 XNORM=6667.02 Flag=Ok
NEWTON STEP 28 XNORM=0.641641 RESNORM=4.77375e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0030556 XNORM=6882.72 Flag=Ok
NEWTON STEP 29 XNORM=0.640097 RESNORM=4.35557e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00324249 XNORM=7103.46 Flag=Ok
NEWTON STEP 30 XNORM=0.638462 RESNORM=3.96598e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00359026 XNORM=7329.15 Flag=Ok
NEWTON STEP 31 XNORM=0.636901 RESNORM=3.60628e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00412093 XNORM=7559.69 Flag=Ok
NEWTON STEP 32 XNORM=0.6357 RESNORM=3.28164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00486637 XNORM=7794.92 Flag=Ok
NEWTON STEP 33 XNORM=0.63533 RESNORM=3.00428e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00592924 XNORM=8034.55 Flag=Ok
NEWTON STEP 34 XNORM=0.636371 RESNORM=2.79911e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0080158 XNORM=8278.09 Flag=Ok
NEWTON STEP 35 XNORM=0.639623 RESNORM=2.73024e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.019089 XNORM=8524.1 Flag=Ok
NEWTON STEP 36 XNORM=0.659803 RESNORM=3.31293e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.017222 XNORM=8755.15 Flag=Ok
NEWTON STEP 37 XNORM=0.626935 RESNORM=3.84689e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00586397 XNORM=9001.83 Flag=Ok
NEWTON STEP 38 XNORM=0.620434 RESNORM=3.5847e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00488153 XNORM=9263.89 Flag=Ok
NEWTON STEP 39 XNORM=0.623912 RESNORM=3.32413e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00753507 XNORM=9531.41 Flag=Ok
NEWTON STEP 40 XNORM=0.626827 RESNORM=2.94284e+07 Lanczos/DInv
RMS Spatial Errors   0.012430
DO_NEXTSTAGE pde 0x15c178a00  MAXSTAGE=0

================================================================
===  FlexPDE Version 7.21/OSXm  12:20:20 Dec  9 2022  Copyright (c) 1996-2020 PDE Solutions Inc.
===  /Users/nhanguyen/Downloads/MiniProject/Mini_Project_Model.pde 01:30:24 6/18/23
================================================================
    1| { Fill in the following sections (removing comment marks ! if necessary),
    2|   and delete those that are unused.}
    3| TITLE 'Part A Mid-Term Mini-Project'     { the problem identification }
    4| COORDINATES cartesian2  { coordinate system, 1D,2D,3D, etc }
    5| VARIABLES        { system variables }
    6|   A              { choose your own names }
    7| Global Variables
    8| Jcoil
    9| SELECT         { method controls }
   10| Threads = 4
   11| Initial Values
   12| Jcoil = 1e7
   13| DEFINITIONS    { parameter definitions }
   14| #include"input.pde"
    2| Alpha3=0.191888888889
    3| Alpha2=0.191888888889
    4| Alpha6=0.418666666667
   15| 
   16| B = curl(A)
   17| Bm = magnitude(B)
   18| Mu0 = 4*pi*1e-7
   19| Muiron = 1 + 1507 * exp(-(abs(Bm / 1.443) ^ 3.725))
   20| Jc = table('Bmax.tbl')
   21| J = 0
   22| 
   23| !Creating a degree 
   24| Converttorad = 2 * pi / 360
   25| 
   26| mu=mu0
   27| !Radii in meters
   28| Rii = .025
   29| Rio = .0425
   30| Roo = .0602
   31| Rair = 4 * Roo
   32| Rbeam = .018
   33| 
   34| !Angles in radians
   35| A1 = 15 * Converttorad
   36| A2 = 15 * Converttorad
   37| A3 = 10 * Converttorad
   38| A4 = 5 * Converttorad
   39| A5 = 20 * Converttorad
   40| A6 = 25 * Converttorad
   41| !Alpha2 = 5 * Converttorad
   42| !Alpha3 = 5 * Converttorad
   43| !Alpha4 = 5 * Converttorad
   44| !Alpha6 = 5 * Converttorad
   45| 
   46| !Lorentz Forces in coils
   47| L = 10 !coil length in meters
   48| Area = 950e-6 !m^2 of coils
   49| Jvec = vector(0,0,J)
   50| F=Area*L*cross(Jvec,B)
   51| 
   52| !B field calculations
   53| B1 = 0
   54| B2 = 100
   55| Bmax = globalmax(B1)
   56| Bmin = globalmin(B2)
   57| dB = (Bmax - Bmin) / Bmax
   58| 
   59| Of = .7
   60| Ff = .6
   61| Objective=(Jc*of*ff-Jcoil)/Jcoil
   62| 
   63| !Determining alignment with respect to x (ideal is when B_x = 0 everywhere)
   64| B_x= abs(xcomp(Bm))
   65| Alignment=globalmax(B_x)
   66| 
   67| ! INITIAL VALUES
   68| EQUATIONS        { PDE's, one for each variable }
   69| A: curl(1/mu*curl(A))=J
   70| Jcoil: Objective=0
   71| 
   72| 
   73| ! CONSTRAINTS    { Integral constraints }
   74| BOUNDARIES       { The domain definition }
   75| REGION 1 "air"
   76| START(0,0) value(A) = 0  { Walk the domain boundary }
   77| LINE TO (0,Rair) value(A) = 0
   78| ARC(CENTER = 0,0) Angle = -90 natural(A) = 0
   79| line to close
   80| 
   81| Region 2 "Backiron"
   82| Mu = mu0*Muiron
   83| Start(1.5 * Roo,0)
   84| Line to (3 * Roo, 0)
   85| Arc(center = 0,0) to (0, 3 * Roo)
   86| Line to (0, 1.5 * Roo)
   87| Arc(center = 0,0) to close
   88| 
   89| Region 3 "Saddle Coils"
   90| J = Jcoil
   91| !Coil 1:
   92| Start(Rii,0) Line to (Rio,0)
   93| Arc(Center = 0,0) to (Rio * cos(A1),Rio * sin(A1))
   94| Line to (Rii * cos(A1),Rii * sin(A1))
   95| Arc(Center = 0,0) To Close
   96| 
   97| !Coil 2:
   98| Start(Rii * cos(A1 + Alpha2),Rii * sin(A1 + Alpha2))
   99| Line to (Rio * cos(A1 + Alpha2), Rio * sin(A1 + Alpha2))
  100| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2), Rio * sin(A1 + A2 + Alpha2))
  101| Line to (Rii * cos(A1 + A2 + Alpha2), Rii * sin(A1 + A2 + Alpha2))
  102| Arc(Center = 0,0) to close
  103| 
  104| !Coil3:
  105| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3),Rii * sin(A1 + Alpha2 + A2 + Alpha3))
  106| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3), Rio * sin(A1 + Alpha2 + A2 + Alpha3))
  107| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  108| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3))
  109| Arc(Center = 0,0) to close
  110| 
  111| !Coil4:
  112| Start(Rii * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4),Rii * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  113| Line to (Rio * cos(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4), Rio * sin(A1 + Alpha2 + A2 + Alpha3 + A3 + Alpha4))
  114| Arc(Center = 0,0) to (Rio * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rio * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  115| Line to (Rii * cos(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4), Rii * sin(A1 + A2 + Alpha2 + A3 + Alpha3 + A4 + Alpha4))
  116| Arc(Center = 0,0) to close
  117| 
  118| 
  119| !Coil5:
  120| Start(Rio,0)
  121| Line to (Roo,0)
  122| Arc(Center = 0,0) To (Roo * cos(A5), Roo * sin(A5))
  123| Line to (Rio * cos(A5), Rio * sin(A5))
  124| Arc(Center = 0,0) to close
  125| 
  126| !Coil6:
  127| Start(Rio * cos(A5 + Alpha6), Rio * sin(A5 + Alpha6))
  128| Line to (Roo * cos(A5 + Alpha6), Roo * sin(A5 + Alpha6))
  129| Arc(Center = 0,0) to (Roo * cos(A5 + Alpha6 + A6), Roo * sin(A5 + Alpha6 + A6))
  130| Line to (Rio * cos(A5 + Alpha6 + A6), Rio * sin(A5 + Alpha6 + A6))
  131| Arc(Center = 0,0) to close
  132| 
  133| Region 4 "Beam Area"
  134| B1 = Bm
  135| B2 = Bm
  136| Start(0,0)
  137| Line to (0,Rbeam)
  138| Arc(Center = 0,0) Angle = -90
  139| line to close
  140| 
  141| ! TIME 0 TO 1    { if time dependent }
  142| MONITORS         { show progress }
  143| PLOTS            { save result displays }
  144| CONTOUR(A)
  145| Contour(Bm) on "Beam Area" painted
  146| Vector(B)
  147| Contour(Mu) painted
  148| Vector(F) on "Saddle Coils"
  149| 
  150| Summary
  151| export file = "Output.txt"
  152| Report(Bmax) !as "Bmax in beam area"
  153| Report(Bmin) !as "Bmin in beam area"
  154| Report(dB) !as "dB in beam area"
  155| !Report(B_x)
  156| Report(Alignment) 
  157| 
  158| !Report(globalmin(Mu0)) as "Mu0 min"
  159| !Report(globalmax(Mu0)) as "Mu0 max"
  160| !Report(globalmax_X(Mu0))
  161| !Report(globalmax_Y(Mu0))
  162| END
Uorder=3
 A order=3
STUDENT VERSION SETS GROW2=0.35 GRIDARC=30
IMPORTMESH(0) NDIM=2 NB=10 NAB=3 NODES=172 CELLS=298 SIDES=469 LEGS=0 imaging=0 time(0)=0
MESH IMPORT ABORTED: Different GRID2D
Transferred mesh does not match local domain!
(Boundary descriptions must match exactly.)

==========================
 SUMMARIZE PARAMETERS
==========================
 Param         name     Type       Domain               Definition
-------------------------------------------------------------------
     1       ALPHA4   Scalar      (GLOBAL)               :  0.34889
                                             [1]=>  0.34889
     2       ALPHA3   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     3       ALPHA2   Scalar      (GLOBAL)               :  0.19189
                                             [1]=>  0.19189
     4       ALPHA6   Scalar      (GLOBAL)               :  0.41867
                                             [1]=>  0.41867
     5            B   Vector      (GLOBAL)               : Vector(DY(A),-(DX(A)),0)
                                             [5]=> Vector(A.Y,-(A.X),0)
     6           BM   Scalar      (GLOBAL)               : Sqrt(Sqr(DY(A))+Sqr(DX(A)))
                                             [6]=> Sqrt(Sqr(A.Y)+Sqr(A.X))
     7          MU0   Scalar      (GLOBAL)               :  1.26e-6
                                             [1]=>  1.26e-6
     8       MUIRON   Scalar      (GLOBAL)               : 1+(1507*Exp(-(Abs(BM* 0.69300)^ 3.72500)))
                                             [17]=> 1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))
     9           JC   Scalar      (GLOBAL)               : Table#1
                                             [1]=> Table#1
    10            J   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   3)           : JCOIL
    11 CONVERTTORAD   Scalar      (GLOBAL)               :  0.01745
                                             [1]=>  0.01745
    12           MU   Scalar      (GLOBAL)               : MU0
                                             [1]=>  1.26e-6
                                  (REGION   2)           : MU0*MUIRON
    13          RII   Scalar      (GLOBAL)               :  0.02500
                                             [1]=>  0.02500
    14          RIO   Scalar      (GLOBAL)               :  0.04250
                                             [1]=>  0.04250
    15          ROO   Scalar      (GLOBAL)               :  0.06020
                                             [1]=>  0.06020
    16         RAIR   Scalar      (GLOBAL)               : 4*ROO
                                             [1]=>  0.24080
    17        RBEAM   Scalar      (GLOBAL)               :  0.01800
                                             [1]=>  0.01800
    18           A1   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    19           A2   Scalar      (GLOBAL)               : 15*CONVERTTORAD
                                             [1]=>  0.26180
    20           A3   Scalar      (GLOBAL)               : 10*CONVERTTORAD
                                             [1]=>  0.17453
    21           A4   Scalar      (GLOBAL)               : 5*CONVERTTORAD
                                             [1]=>  0.08727
    22           A5   Scalar      (GLOBAL)               : 20*CONVERTTORAD
                                             [1]=>  0.34907
    23           A6   Scalar      (GLOBAL)               : 25*CONVERTTORAD
                                             [1]=>  0.43633
    24            L   Scalar      (GLOBAL)               : 10
                                             [1]=> 10
    25         AREA   Scalar      (GLOBAL)               :  9.50e-4
                                             [1]=>  9.50e-4
    26         JVEC   Vector      (GLOBAL)               : Vector(0,0,J)
                                             [1]=> V(0,0,0)
    27            F   Scalar      (GLOBAL)               : (AREA*L)*((JVEC)<x>(B))
                                             [1]=> V(0,0,0)
    28           B1   Scalar      (GLOBAL)               : 0
                                             [1]=> 0
                                  (REGION   4)           : BM
    29           B2   Scalar      (GLOBAL)               : 100
                                             [1]=> 100
                                  (REGION   4)           : BM
    30         BMAX   Scalar      (GLOBAL)               : Gmax#1
                                             [1]=> Gmax#1
    31         BMIN   Scalar      (GLOBAL)               : Gmin#2
                                             [1]=> Gmin#2
    32           DB   Scalar      (GLOBAL)               : (BMAX-BMIN)/BMAX
                                             [5]=> (Gmax#1-Gmin#2)/Gmax#1
    33           OF   Scalar      (GLOBAL)               :  0.70000
                                             [1]=>  0.70000
    34           FF   Scalar      (GLOBAL)               :  0.60000
                                             [1]=>  0.60000
    35    OBJECTIVE   Scalar      (GLOBAL)               : (((JC*OF)*FF)-JCOIL)/JCOIL
                                             [7]=> ((Table#1* 0.42000)-JCOIL)/JCOIL
    36          B_X   Scalar      (GLOBAL)               : Abs(Xcomp(BM))
                                             [8]=> Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
    37    ALIGNMENT   Scalar      (GLOBAL)               : Gmax#3
                                             [1]=> Gmax#3



==========================
SUMMARIZE EQUATIONS
==========================
In the following equation definitions
Derivatives are represented by appending a dot and the differentiated coordinate.
The operator <V> represents volume integration. <Vb> is weighted by basis function.
<Vu> is weighted by the upwind modifer. <Vbu> is weighted by both.
A dotted volume integral represents volume integration weighted by the indicated
derivative of the basis function. 'Beta' represents a basis function.
The operator <S>.c represents surface integration weighted by the indicated
direction cosine.

            DEFINES     REGION/     DEPENDS                      BASE          CSE
 EQUATION     VAR    COMPARTMENT      VAR         FUNCTION     COMPLEXITY   COMPLEXITY     MEMORY  DEFINITION
-----------------------------------------------------------------------------------------------------------

PRIMARY EQUATIONS
     1          A                            Field Equation                                      : (CURL((1/MU)*(CURL(A))))-J
                           1                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           2                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin        266           45         3600 : (<Vb>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<Vb>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))
                                        A    Space Jacobian       1782          221        17680 : (<Vb>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<Vb>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                           Surface Galerkin         46           46         3680 : -((<S>.Y(( 795775.*A.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))+(<S>.X(( 795775.*A.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))
                                        A  Surface Jacobian        222          222        17760 : -((<S>.Y((( 795775.*Beta.Y)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.Y))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))))+(<S>.X((( 795775.*Beta.X)/(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)))))+(((( 1.55e+9*((Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))*((Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500)*(Sign(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)*((2*(A.Y*Beta.Y))+(2*(A.X*Beta.X))))))*A.X))/Sqrt(Sqr(A.Y)+Sqr(A.X)))/Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300))/Sqr(1+(1507*Exp(-(Abs(Sqrt(Sqr(A.Y)+Sqr(A.X))* 0.69300)^ 3.72500))))))))
                           3                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         21           12          960 : ((<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X)))-(<Vb>(JCOIL))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                    JCOIL    Space Jacobian          3            3          240 : -(<Vb>(1))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
                           4                         Source          1            2          160 : <Vb>(0)
                                             Space Galerkin         18            9          720 : (<Vb>.Y( 795775.*A.Y))+(<Vb>.X( 795775.*A.X))
                                        A    Space Jacobian         18            9          720 : (<Vb>.Y( 795775.*Beta.Y))+(<Vb>.X( 795775.*Beta.X))
                                           Surface Galerkin         10           10          800 : -((<S>.Y( 795775.*A.Y))+(<S>.X( 795775.*A.X)))
                                        A  Surface Jacobian         10           10          800 : -((<S>.Y( 795775.*Beta.Y))+(<S>.X( 795775.*Beta.X)))
     2      JCOIL                           Global Equation                                      : OBJECTIVE-0
                                             Space Galerkin          0            7          560 : ((Table#1* 0.42000)-JCOIL)/JCOIL
                                    JCOIL    Space Jacobian         10           13         1040 : (-1/(def#15(JCOIL)))-(((Table#1* 0.42000)-(ref#15))/Sqr(ref#15))
                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null                                    JCOIL    Space Jacobian          0            0            0 : Null
EQUATION 1 PARAMETER DEPENDENCIES:
           BM          MU0       MUIRON            J           MU

========================================================
     SUMMARIZE BOUNDARY CONDITIONS
========================================================

BOUNDARY CONDITION TAGS with associated BC INDEX
BC TAG   1:BC   1 val(A)  nat(0)
BC TAG   2:BC   2 nat(A)  nat(0)

    BC  KIND     DEFINES   COMPARTMENT     DEPENDS     FUNCTION     COMPLEXITY    MEMORY    DEFINITION
-----------------------------------------------------------------------------------------------------
     1   VAL          A            1                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            2                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
         VAL          A            3                  Surf Galerkin          1         80  : A
                                                  A   Surf Jacobian          1         80  : Beta
                                              JCOIL   Surf Jacobian          1         80  : 0
     2   NAT          A            1                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            2                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            3                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0
         NAT          A            4                  Surf Galerkin          1         80  : 0
                                                  A   Surf Jacobian          1         80  : 0
                                              JCOIL   Surf Jacobian          1         80  : 0

================================
SUMMARIZE FITS AND INTEGRALS
=================================
                             REGION/       BASE        CSE
    FIT         KIND       COMPARTMENT  COMPLEXITY  COMPLEXITY  MEMORY  DEFINITION
-----------------------------------------------------------------------------------------
     1            GlobalMax       1           6          6        480     : 0
     1            GlobalMax       2           6          6        480     : 0
     1            GlobalMax       3           6          6        480     : 0
     1            GlobalMax       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     2            GlobalMin       1           6          6        480     : 100
     2            GlobalMin       2           6          6        480     : 100
     2            GlobalMin       3           6          6        480     : 100
     2            GlobalMin       4           6          6        480     : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3            GlobalMax       1           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       2           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       3           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))
     3            GlobalMax       4           8          8        640     : Abs(Xcomp(Sqrt(Sqr(A.Y)+Sqr(A.X))))

===============================
  SUMMARIZE PLOTS
===============================
                      REGION/       BASE        CSE
  PLOT    TYPE     COMPARTMENT  COMPLEXITY  COMPLEXITY    MEMORY    DEFINITION
------------------------------------------------------------------------------
     1     CONTOUR          0          1          1           80  : A
     2     CONTOUR          0          6          6          480  : Sqrt(Sqr(A.Y)+Sqr(A.X))
     3      VECTOR          0          5          5          400  : Vector(A.Y,-(A.X),0)
     4     CONTOUR          0          1          1           80  :  1.26e-6
     5      VECTOR          0          1          1           80  : V(0,0,0)

==UNUSED== PARAMETER DEFINITIONS:
 CONVERTTORAD B1 B2 B_X
Uorder=3
 A order=3
LOG Threads=4 Order=3 Speed=1 Stability=0
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=7.75732e-05 XNORM=16071.9 Flag=Ok
NEWTON STEP 1/40 NORM=1.33238e+07
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.001081 XNORM=19193.5 Flag=Ok
NEWTON STEP 2 XNORM=0.840843 RESNORM=3.31551e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00258919 XNORM=28051.3 Flag=Ok
NEWTON STEP 3 XNORM=0.757653 RESNORM=3.1024e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118371 XNORM=29116.4 Flag=Ok
NEWTON STEP 4 XNORM=0.74187 RESNORM=2.88054e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00115063 XNORM=30220.8 Flag=Ok
NEWTON STEP 5 XNORM=0.730512 RESNORM=2.67783e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00118514 XNORM=31363.1 Flag=Ok
NEWTON STEP 6 XNORM=0.721665 RESNORM=2.49346e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00182193 XNORM=32544.2 Flag=Ok
NEWTON STEP 7 XNORM=0.714634 RESNORM=2.33296e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00116196 XNORM=33761.3 Flag=Ok
NEWTON STEP 8 XNORM=0.708791 RESNORM=2.16866e+06 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00135903 XNORM=3502.63 Flag=Ok
NEWTON STEP 9 XNORM=0.703959 RESNORM=1.86392e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0012087 XNORM=3628.04 Flag=Ok
NEWTON STEP 10 XNORM=0.700186 RESNORM=1.72279e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00143335 XNORM=3758.96 Flag=Ok
NEWTON STEP 11 XNORM=0.697217 RESNORM=1.59236e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00374685 XNORM=3894.03 Flag=Ok
NEWTON STEP 12 XNORM=0.696119 RESNORM=1.47146e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0336835 XNORM=4033.32 Flag=Ok
NEWTON STEP 13 XNORM=0.827086 RESNORM=1.37478e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0106366 XNORM=4176.02 Flag=Ok
NEWTON STEP 14 XNORM=0.674387 RESNORM=1.27487e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00241678 XNORM=4323.98 Flag=Ok
NEWTON STEP 15 XNORM=0.673832 RESNORM=1.17715e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00207178 XNORM=4476.47 Flag=Ok
NEWTON STEP 16 XNORM=0.673278 RESNORM=1.08688e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00197295 XNORM=4633.51 Flag=Ok
NEWTON STEP 17 XNORM=0.671948 RESNORM=1.00348e+08 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00200363 XNORM=4795.18 Flag=Ok
NEWTON STEP 18 XNORM=0.670376 RESNORM=9.2639e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0021317 XNORM=4961.55 Flag=Ok
NEWTON STEP 19 XNORM=0.668709 RESNORM=8.55164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00238395 XNORM=5132.69 Flag=Ok
NEWTON STEP 20 XNORM=0.667028 RESNORM=7.89431e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00286725 XNORM=5308.64 Flag=Ok
NEWTON STEP 21 XNORM=0.665486 RESNORM=7.28949e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00389148 XNORM=5489.46 Flag=Ok
NEWTON STEP 22 XNORM=0.664527 RESNORM=6.73885e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00645055 XNORM=5675.14 Flag=Ok
NEWTON STEP 23 XNORM=0.665891 RESNORM=6.26295e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0309835 XNORM=5865.54 Flag=Ok
NEWTON STEP 24 XNORM=0.665022 RESNORM=6.08162e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00368498 XNORM=6054.09 Flag=Ok
NEWTON STEP 25 XNORM=0.647354 RESNORM=5.57299e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00907884 XNORM=6254.68 Flag=Ok
NEWTON STEP 26 XNORM=0.645873 RESNORM=5.20144e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0170611 XNORM=6459.93 Flag=Ok
NEWTON STEP 27 XNORM=0.789452 RESNORM=5.14591e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00302535 XNORM=6667.02 Flag=Ok
NEWTON STEP 28 XNORM=0.641641 RESNORM=4.77375e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0030556 XNORM=6882.72 Flag=Ok
NEWTON STEP 29 XNORM=0.640097 RESNORM=4.35557e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00324249 XNORM=7103.46 Flag=Ok
NEWTON STEP 30 XNORM=0.638461 RESNORM=3.96598e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00359026 XNORM=7329.15 Flag=Ok
NEWTON STEP 31 XNORM=0.636901 RESNORM=3.60628e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00412092 XNORM=7559.69 Flag=Ok
NEWTON STEP 32 XNORM=0.6357 RESNORM=3.28164e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00486636 XNORM=7794.92 Flag=Ok
NEWTON STEP 33 XNORM=0.63533 RESNORM=3.00428e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00592923 XNORM=8034.55 Flag=Ok
NEWTON STEP 34 XNORM=0.636371 RESNORM=2.79911e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00801578 XNORM=8278.09 Flag=Ok
NEWTON STEP 35 XNORM=0.639623 RESNORM=2.73024e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0190888 XNORM=8524.1 Flag=Ok
NEWTON STEP 36 XNORM=0.659803 RESNORM=3.31292e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.0172218 XNORM=8755.15 Flag=Ok
NEWTON STEP 37 XNORM=0.626934 RESNORM=3.84687e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00586391 XNORM=9001.83 Flag=Ok
NEWTON STEP 38 XNORM=0.620434 RESNORM=3.58467e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00488166 XNORM=9263.89 Flag=Ok
NEWTON STEP 39 XNORM=0.623912 RESNORM=3.3241e+07 Lanczos/DInv
Lanczos/DInv FINAL ITERATION 11 of 2037 RNORM=0.00753549 XNORM=9531.41 Flag=Ok
NEWTON STEP 40 XNORM=0.626828 RESNORM=2.94279e+07 Lanczos/DInv
RMS Spatial Errors   0.012430
DO_NEXTSTAGE pde 0x13b857c00  MAXSTAGE=0
